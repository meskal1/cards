{"version":3,"file":"static/css/390.970dcb1c.chunk.css","mappings":"AAAA,2CAIE,mBACA,sBAOA,mBACA,mBAHA,WAPA,aAIA,YACA,sBAPA,kBAcA,wBAEA,kDAWE,sFAGF,CAbE,WAQA,YAJA,SAFA,kBACA,QAEA,8DAEA,UAMF,kDACE,mBChCJ,gCASE,mBAOA,gCARA,aAKA,aAHA,uBANA,OAWA,UAdA,kBAEA,MAeA,eANA,YAVA,SAgBA,CAGF,wCAGE,SAAQ,CAFR,kBAEA,CAGF,kCAME,sBACA,mBAHA,aAHA,gDAQA,mBANA,WAMA,CAGF,0CACE,8CAGF,gCACE,aACA,yBAEA,WC7CF,6BAKE,aACA,sBACA,YAGA,SAGA,WC0FE,kCDvGJ,6BCwGM,4BAGJ,iED3GF,6BC4GI,qEAZc,EAed,kCD/GJ,6BCgHM,4BATF,kCDvGJ,6BCwGM,gCAGJ,iED3GF,6BC4GI,qFAZc,EAed,kCD/GJ,6BCgHM,+BDhGN,2BACE,kBAIA,gBACA,mBAHA,YAGA,CAIA,4BACE,kBAEA,eACA,gBEhCJ,qCACE,WAEF,+BAEE,mBADA,UACA,CAEF,uCACE,aACA","sources":["common/components/BackToPacks/BackToPacks.module.scss","common/components/ModalDialog/CustomModalDialog.module.scss","features/learn/Learn.module.scss","common/styles/mixins/mixinAdaptive.scss","features/learn/Modals/NoCardsToLearn.module.scss"],"sourcesContent":[".backToPacks__linkPacks {\r\n  position: relative;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  align-self: flex-start;\r\n\r\n  height: 26px;\r\n  padding: 0px 10px 0px 30px;\r\n\r\n  color: white;\r\n\r\n  background: #1b79ce;\r\n  border-radius: 30px;\r\n\r\n  transition: all ease 0.2s;\r\n\r\n  &::before {\r\n    content: '';\r\n\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 5px;\r\n    transform: translate(0, -50%);\r\n\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    background: url('../../../assets/img/icons/backForward.svg') 50% no-repeat;\r\n  }\r\n\r\n  &:hover {\r\n    background: #1668bd;\r\n  }\r\n}\r\n",".Modal{\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  opacity: 0;\r\n  background-color: rgb(0 0 0 / 40%);\r\n\r\n  transition: 0.5s;\r\n}\r\n\r\n.Modal__Active {\r\n  pointer-events: all;\r\n\r\n  opacity: 1;\r\n}\r\n\r\n.Content {\r\n  transform: scale(0.5);\r\n\r\n  width: 400px;\r\n  padding: 20px;\r\n\r\n  background-color: white;\r\n  border-radius: 12px;\r\n\r\n  transition: 0.4s all;\r\n}\r\n\r\n.Content__Active {\r\n  transform: scale(1);\r\n}\r\n\r\n.Close {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  width: 100%;\r\n}\r\n","@import '../../common/styles/mixins/mixinAdaptive';\r\n\r\n.learnContainer {\r\n  //   position: relative;\r\n  @include adaptiveValue('padding-top', 10, 10, 599, 320, 1);\r\n  @include adaptiveValue('padding-bottom', 26, 10, 599, 320, 1);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  //   height: 100%;\r\n  //   padding: 60px 0px 0px 0px;\r\n  gap: 10px;\r\n  //   align-self: flex-start;\r\n\r\n  width: 100%;\r\n}\r\n\r\n.learnContent {\r\n  align-self: center;\r\n\r\n  padding: 30px 30px;\r\n\r\n  background: white;\r\n  border-radius: 20px;\r\n}\r\n\r\n.learn {\r\n  &__title {\r\n    align-self: center;\r\n\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n  }\r\n}\r\n\r\n.ButtonContainer {\r\n  //   display: flex;\r\n  //   justify-content: center;\r\n}\r\n","@use 'sass:math';\r\n\r\n// Минимальная ширина страницы\r\n$minWidth: 320;\r\n\r\n// Минимальная высота страницы\r\n$minHeight: 350; // 301\r\n// Ширина полотна (макета)\r\n$maxWidth: 1920;\r\n\r\n// Высота въюпорта максимальная (макета)\r\n// $maxHeight: 1080;\r\n// Ширина ограничивающего контейнера (0 = нет ограничения)\r\n$maxWidthContainer: 1050;\r\n\r\n// Общий отступ у контейнера\r\n// (30 = по 15px слева и справа, 0 = нет отступа)\r\n$containerPadding: 30;\r\n\r\n// Ширина страбатывания первого брейкпоинта\r\n$containerWidth: $maxWidthContainer + $containerPadding;\r\n\r\n// Адаптивное свойство\r\n// Percent\r\n@function percent($px, $from) {\r\n  $result: math.div($px, $from) * 100%;\r\n  @return $result;\r\n}\r\n\r\n// REM\r\n@function rem($px) {\r\n  $result: math.div($px, 14) + rem;\r\n  @return $result;\r\n}\r\n\r\n// EM\r\n@function em($px, $current: 14) {\r\n  $result: math.div($px, $current) + em;\r\n  @return $result;\r\n}\r\n@mixin adaptiveValueMaxHeight(\r\n  $property,\r\n  $startSize,\r\n  $minSize,\r\n  $widthFrom: $containerWidth,\r\n  $widthTo: $minWidth,\r\n  $maxHeight,\r\n  $keepSize: 0\r\n) {\r\n  @if $widthFrom == $containerWidth and $maxWidthContainer == 0 {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) and (max-height: em($maxHeight)) {\r\n      #{$property}: rem($startSize);\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) and (max-height: em($maxHeight)) {\r\n    #{$property}: $propertyValue;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) and (max-height: em($maxHeight)) {\r\n      #{$property}: rem($minSize);\r\n    }\r\n  }\r\n}\r\n@mixin adaptiveValue(\r\n  $property,\r\n  $startSize,\r\n  $minSize,\r\n  $widthFrom: $containerWidth,\r\n  $widthTo: $minWidth,\r\n  $keepSize: 0\r\n) {\r\n  @if $widthFrom == $containerWidth and $maxWidthContainer == 0 {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n\r\n  // Если работаем с отрицательными значениями, например $startSize меньше $minSize\r\n  @if $minSize > $startSize {\r\n    $propertyValue: #{'clamp(' rem($startSize) ',' $flyValue ',' rem($minSize) ')'};\r\n  }\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) {\r\n      #{$property}: rem($startSize);\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {\r\n    #{$property}: $propertyValue;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) {\r\n      #{$property}: rem($minSize);\r\n    }\r\n  }\r\n}\r\n@mixin adaptiveValueImportant(\r\n  $property,\r\n  $startSize,\r\n  $minSize,\r\n  $widthFrom: $containerWidth,\r\n  $widthTo: $minWidth,\r\n  $keepSize: 0\r\n) {\r\n  @if $widthFrom == $containerWidth and $maxWidthContainer == 0 {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n\r\n  // Если работаем с отрицательными значениями, например $startSize меньше $minSize\r\n  @if $minSize > $startSize {\r\n    $propertyValue: #{'clamp(' rem($startSize) ',' $flyValue ',' rem($minSize) ')'};\r\n  }\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) {\r\n      #{$property}: rem($startSize) !important;\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {\r\n    #{$property}: $propertyValue !important;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) {\r\n      #{$property}: rem($minSize) !important;\r\n    }\r\n  }\r\n}\r\n",".MainContainer {\r\n  width: 100%;\r\n}\r\n.Message{\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n}\r\n.ButtonContainer{\r\n  display: flex;\r\n  justify-content: center;\r\n}"],"names":[],"sourceRoot":""}