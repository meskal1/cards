{"version":3,"file":"static/js/287.0370914f.chunk.js","mappings":"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","sources":["app/selectors.ts","webpack://cards/./src/common/components/BackToPacks/BackToPacks.module.scss?b64e","common/components/BackToPacks/BackToPacks.tsx","hooks/useMediaQuery.ts","webpack://cards/./src/common/components/CustomPagination/CustomPagination.module.scss?ffc1","common/components/CustomPagination/CustomPagination.tsx","webpack://cards/./src/common/components/CustomSearch/CustomSearch.module.scss?5655","common/components/CustomSearch/CustomSearch.tsx","hooks/useDebounce.tsx","common/components/CustomSkeletons/TableBodySkeleton/TableBodySkeleton.tsx","webpack://cards/./src/common/components/CustomTableHead/CustomTableHead.module.scss?8448","common/components/CustomTableHead/CustomTableHead.tsx","webpack://cards/./src/common/components/ModalDialog/CustomModalDialog.module.scss?fde9","common/components/ModalDialog/CustomModalDialog.tsx","webpack://cards/./src/features/packs/PackOwnerSwitcher/PackOwnerSwitcher.module.scss?8d33","features/packs/PackOwnerSwitcher/PackOwnerSwitcher.tsx","features/packs/PackSlider/CustomStyledSlider/CustomStyledSlider.ts","webpack://cards/./src/features/packs/PackSlider/PackSlider.module.scss?6b9a","features/packs/PackSlider/PackSlider.tsx","webpack://cards/./src/features/packs/PacksResetFilter/PacksResetFilter.module.scss?bb10","features/packs/PacksResetFilter/PacksResetFilter.tsx","webpack://cards/./src/common/components/CustomSelect/CustomSelect.module.scss?2cfc","common/components/CustomSelect/CustomSelectList/CustomSelectList.tsx","common/components/CustomSelect/CustomSelect.tsx","webpack://cards/./src/common/components/SortItems/SortItems.module.scss?ab29","common/components/SortItems/SortItems.tsx","webpack://cards/./src/common/components/FiltersComponent/FiltersComponent.module.scss?a7a7","common/components/FiltersComponent/FiltersComponent.tsx","webpack://cards/./src/common/components/PageTitleBlock/PageTitleBlock.module.scss?b6a9","common/components/PageTitleBlock/PageTitleBlock.tsx","webpack://cards/./src/features/packs/Modals/DeletePack/DeletePack.module.scss?365e","features/packs/Modals/DeletePack/DeletePack.tsx","webpack://cards/./src/features/packs/Modals/EditPack/EditPack.module.scss?6d64","features/packs/Modals/EditPack/EditPack.tsx","webpack://cards/./src/features/packs/PackActionsMenu/PackActionsMenu.module.scss?9b50","features/packs/PackActionsMenu/PackActionsMenuList/PackActionsMenuList.tsx","features/packs/PackActionsMenu/PackActionsMenu.tsx","webpack://cards/./src/common/styles/modalStyles/ModalStyles.module.scss?4628"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit'\r\n\r\nimport { RootStateType } from './store'\r\n\r\nconst packsTableData = (state: RootStateType) => state.packs.tableData\r\nconst packUserId = (state: RootStateType) => state.cards.cardsData.packUserId\r\nconst myId = (state: RootStateType) => state.profile.userData.id\r\n\r\nexport const packsTableLength = createSelector(packsTableData, tableData => {\r\n  return tableData.length > 0\r\n})\r\n\r\nexport const isMyPack = createSelector([packUserId, myId], (packUserId, myId) => {\r\n  return packUserId === myId\r\n})\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backToPacks__linkPacks\":\"BackToPacks_backToPacks__linkPacks__ez79f\"};","import { Link } from 'react-router-dom'\r\n\r\nimport { PATH } from '../../../constants/routePaths.enum'\r\nimport { initialPacksQueryParams as initParams } from '../../../features/packs/packsSlice'\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { queryString } from '../../../utils/queryString'\r\nimport { useLocationNoUpdates } from '../../../utils/routerUtils'\r\n\r\nimport s from './BackToPacks.module.scss'\r\n\r\nexport const BackToPacks = () => {\r\n  const location = useLocationNoUpdates()\r\n  const packsQueryParams = useAppSelector(state => state.packs.queryParams)\r\n  const packsQueryString =\r\n    location.pathname === '/profile' ? '' : '?' + queryString(packsQueryParams, initParams)\r\n\r\n  return (\r\n    <Link className={s.backToPacks__linkPacks} to={PATH.PACKS + packsQueryString}>\r\n      Packs\r\n    </Link>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport const useMediaQuery = (query: string): boolean => {\r\n  const getMatches = (query: string): boolean => {\r\n    // Prevents SSR issues\r\n    if (typeof window !== 'undefined') {\r\n      return window.matchMedia(query).matches\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  const [matches, setMatches] = useState<boolean>(getMatches(query))\r\n\r\n  function handleChange() {\r\n    setMatches(getMatches(query))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const matchMedia = window.matchMedia(query)\r\n\r\n    // Triggered at the first client-side load and if query changes\r\n    handleChange()\r\n\r\n    // Listen matchMedia\r\n    if (matchMedia.addListener) {\r\n      matchMedia.addListener(handleChange)\r\n    } else {\r\n      matchMedia.addEventListener('change', handleChange)\r\n    }\r\n\r\n    return () => {\r\n      if (matchMedia.removeListener) {\r\n        matchMedia.removeListener(handleChange)\r\n      } else {\r\n        matchMedia.removeEventListener('change', handleChange)\r\n      }\r\n    }\r\n  }, [query])\r\n\r\n  return matches\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"paginationContainer\":\"CustomPagination_paginationContainer__0Y+sw\",\"paginationTable\":\"CustomPagination_paginationTable__htEVR\"};","import { ChangeEvent, FC } from 'react'\r\n\r\nimport Pagination from '@mui/material/Pagination'\r\nimport TablePagination from '@mui/material/TablePagination'\r\n\r\nimport { RequestStatusType } from '../../../app/appSlice'\r\nimport { setCardsQueryParams } from '../../../features/cards/cardsSlice'\r\nimport { setPacksQueryParams } from '../../../features/packs/packsSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useMediaQuery } from '../../../hooks/useMediaQuery'\r\n\r\nimport s from './CustomPagination.module.scss'\r\n\r\ntype CustomPaginationType = {\r\n  forCards?: boolean\r\n}\r\n\r\nexport const CustomPagination: FC<CustomPaginationType> = ({ forCards = false }) => {\r\n  const dispatch = useAppDispatch()\r\n  const isDataLoading = useAppSelector<RequestStatusType>(state =>\r\n    forCards ? state.cards.status : state.packs.status\r\n  )\r\n  const pagePacks = useAppSelector(state => state.packs.queryParams.page)\r\n  const pageCards = useAppSelector(state => state.cards.queryParams.page)\r\n  const pageCountPacks = useAppSelector(state => state.packs.queryParams.pageCount)\r\n  const pageCountCards = useAppSelector(state => state.cards.queryParams.pageCount)\r\n  const cardsTotalCount = useAppSelector(state => state.cards.cardsData.cardsTotalCount)\r\n  const packsTotalCount = useAppSelector(state => state.packs.cardsCount.cardPacksTotalCount)\r\n  const page = forCards ? pageCards : pagePacks\r\n  const rowsPerPage = forCards ? pageCountCards : pageCountPacks\r\n  const paginationCount = Math.ceil(\r\n    forCards ? cardsTotalCount / pageCountCards : packsTotalCount / pageCountPacks\r\n  )\r\n  const showTablePagination = forCards ? cardsTotalCount > 4 : packsTotalCount > 4\r\n  const matches599 = useMediaQuery('(max-width: 599px)')\r\n  const matches472 = useMediaQuery('(max-width: 472px)')\r\n  const matches374 = useMediaQuery('(max-width: 374px)')\r\n\r\n  const dispatchData = (data: { [key: string]: number }) => {\r\n    if (forCards) {\r\n      dispatch(setCardsQueryParams(data))\r\n    } else {\r\n      dispatch(setPacksQueryParams(data))\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event: ChangeEvent<unknown>, page: number) => dispatchData({ page })\r\n\r\n  const handleChangeRowsPerPage = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    dispatchData({ pageCount: +e.target.value, page: 1 })\r\n  }\r\n\r\n  return (\r\n    <div className={s.paginationContainer}>\r\n      {paginationCount <= 1 ? null : (\r\n        <Pagination\r\n          disabled={isDataLoading === 'loading'}\r\n          count={paginationCount}\r\n          shape=\"circular\"\r\n          color=\"primary\"\r\n          onChange={handleChangePage}\r\n          page={page}\r\n          size={matches374 ? 'small' : 'medium'}\r\n          hidePrevButton={matches599}\r\n          hideNextButton={matches599}\r\n        />\r\n      )}\r\n      {showTablePagination ? (\r\n        <TablePagination\r\n          className={s.paginationTable}\r\n          component=\"div\"\r\n          labelRowsPerPage={matches472 ? '' : 'Rows per page'}\r\n          labelDisplayedRows={() => ``}\r\n          count={101}\r\n          page={page === -1 ? 0 : 1}\r\n          onPageChange={() => {}}\r\n          rowsPerPage={rowsPerPage}\r\n          rowsPerPageOptions={[4, 8, 12, 16, 30, 50, 100]}\r\n          ActionsComponent={() => null}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n          SelectProps={{ disabled: isDataLoading === 'loading' }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"CustomSearch_searchContainer__i+W9a\",\"search__placeholder\":\"CustomSearch_search__placeholder__O+aX4\",\"search__placeholderAnimate\":\"CustomSearch_search__placeholderAnimate__GVaMc\",\"search__input\":\"CustomSearch_search__input__XRkjf\"};","import { useState, FC, ChangeEvent } from 'react'\r\n\r\nimport { TextField } from '@mui/material'\r\n\r\nimport { setCardsQueryParams } from '../../../features/cards/cardsSlice'\r\nimport { setPacksQueryParams } from '../../../features/packs/packsSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useDebounce } from '../../../hooks/useDebounce'\r\nimport { useEffectAfterMount } from '../../../hooks/useEffectAfterMount'\r\nimport { getQueryParams } from '../../../utils/getQueryParams'\r\n\r\nimport s from './CustomSearch.module.scss'\r\n\r\ntype CustomSearchType = {\r\n  forCards?: boolean\r\n}\r\n\r\nexport const CustomSearch: FC<CustomSearchType> = ({ forCards = false }) => {\r\n  const dispatch = useAppDispatch()\r\n  const allParams = getQueryParams()\r\n  const search = useAppSelector(state => state.packs.queryParams.search)\r\n  const cardQuestion = useAppSelector(state => state.cards.queryParams.cardQuestion)\r\n  const [inputValue, setInputValue] = useState(allParams.search || allParams.cardQuestion || '')\r\n  const debouncedValue = useDebounce(inputValue)\r\n\r\n  const handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setInputValue(e.currentTarget.value)\r\n  }\r\n\r\n  useEffectAfterMount(() => {\r\n    if (forCards) {\r\n      if (cardQuestion !== inputValue) {\r\n        dispatch(setCardsQueryParams({ cardQuestion: inputValue }))\r\n      }\r\n    } else if (search !== inputValue) {\r\n      dispatch(setPacksQueryParams({ search: inputValue }))\r\n    }\r\n  }, [debouncedValue])\r\n\r\n  useEffectAfterMount(() => {\r\n    setInputValue(allParams.search || allParams.cardQuestion || '')\r\n  }, [allParams.search, allParams.cardQuestion])\r\n\r\n  useEffectAfterMount(() => {\r\n    if (!search) {\r\n      setInputValue('')\r\n    }\r\n  }, [search])\r\n\r\n  return (\r\n    <label className={s.searchContainer}>\r\n      <p className={`${s.search__placeholder} ${inputValue ? s.search__placeholderAnimate : ''}`}>\r\n        {forCards ? 'Search by question' : 'Search by name'}\r\n      </p>\r\n      <TextField\r\n        className={s.search__input}\r\n        value={inputValue}\r\n        variant={'outlined'}\r\n        type={'search'}\r\n        autoComplete=\"off\"\r\n        onChange={handleChangeInput}\r\n      />\r\n    </label>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport const useDebounce = <T,>(value: T, delay?: number): T => {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 700)\r\n\r\n    return () => {\r\n      clearTimeout(timer)\r\n    }\r\n  }, [value, delay])\r\n\r\n  return debouncedValue\r\n}\r\n","import { FC } from 'react'\r\n\r\nimport { Skeleton } from '@mui/material'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableRow from '@mui/material/TableRow'\r\n\r\ntype TableSkeletonPropsType = {\r\n  columnsCount: number\r\n  rowsCount: number\r\n  withActions?: boolean\r\n}\r\n\r\nexport const TableBodySkeleton: FC<TableSkeletonPropsType> = ({\r\n  columnsCount,\r\n  rowsCount,\r\n  withActions = false,\r\n}) => {\r\n  const cells = new Array(withActions ? columnsCount + 1 : columnsCount).fill('').map((_, i) => {\r\n    return (\r\n      <TableCell key={i}>\r\n        <Skeleton animation={'pulse'} height={35} />\r\n      </TableCell>\r\n    )\r\n  })\r\n  const rows = new Array(rowsCount).fill('').map((_, i) => {\r\n    return <TableRow key={i}>{cells}</TableRow>\r\n  })\r\n\r\n  return <TableBody>{rows}</TableBody>\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"headCellTitle\":\"CustomTableHead_headCellTitle__81uXu\",\"tablePacks__head\":\"CustomTableHead_tablePacks__head__uEZX5\",\"tablePacks__headRow\":\"CustomTableHead_tablePacks__headRow__2qhlm\",\"tablePacks__headCell\":\"CustomTableHead_tablePacks__headCell__GDWrE\",\"headCellContainer\":\"CustomTableHead_headCellContainer__mDJu8\",\"tablePacks\":\"CustomTableHead_tablePacks__urY7P\",\"actionCell\":\"CustomTableHead_actionCell__tLL0b\",\"gradeCell\":\"CustomTableHead_gradeCell__4Aig2\",\"sortArrowUp\":\"CustomTableHead_sortArrowUp__+6NuH\",\"sortArrowDown\":\"CustomTableHead_sortArrowDown__eDqKf\"};","import { FC } from 'react'\r\n\r\nimport { CardsOrderByType } from '../../../features/cards/CardsTable/CardsTable'\r\nimport { PacksOrderByType } from '../../../features/packs/PacksTable/PacksTable'\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { SortValuesType } from '../SortItems/SortItems'\r\n\r\nimport s from './CustomTableHead.module.scss'\r\n\r\nexport type TableHeadType<T> = {\r\n  id: T\r\n  label: string\r\n}\r\n\r\ntype CustomTableHeadPropsType = {\r\n  heads: TableHeadType<PacksOrderByType | CardsOrderByType>[]\r\n  forCards?: boolean\r\n  withActions?: boolean\r\n}\r\n\r\nexport const CustomTableHead: FC<CustomTableHeadPropsType> = ({\r\n  heads,\r\n  forCards = false,\r\n  withActions = false,\r\n}) => {\r\n  const serverSort = useAppSelector<SortValuesType>(state => {\r\n    return forCards ? state.cards.queryParams.sortCards : state.packs.queryParams.sortPacks\r\n  })\r\n  const serverOrder = serverSort.slice(0, 1)\r\n  const tableOrderBy = serverSort.slice(1)\r\n  const arrowOrderStyle = +serverOrder ? s.sortArrowUp : s.sortArrowDown\r\n\r\n  return (\r\n    <thead className={s.tablePacks__head}>\r\n      <tr className={s.tablePacks__headRow}>\r\n        {heads.map(el => {\r\n          return (\r\n            <th\r\n              key={el.id}\r\n              className={el.label === 'Grade' ? s.gradeCell : s.tablePacks__headCell}\r\n              scope=\"col\"\r\n            >\r\n              <div className={s.headCellContainer}>\r\n                <span\r\n                  className={`${s.headCellTitle} ${tableOrderBy === el.id ? arrowOrderStyle : ''}`}\r\n                >\r\n                  {el.label}\r\n                </span>\r\n              </div>\r\n            </th>\r\n          )\r\n        })}\r\n        <th className={withActions ? s.tablePacks__headCell : s.actionCell} scope=\"col\"></th>\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Modal\":\"CustomModalDialog_Modal__SpffU\",\"Modal__Active\":\"CustomModalDialog_Modal__Active__AUQMT\",\"Content\":\"CustomModalDialog_Content__ABBkh\",\"Content__Active\":\"CustomModalDialog_Content__Active__6qZH1\",\"Close\":\"CustomModalDialog_Close__-rl3E\"};","import { FC } from 'react'\r\n\r\nimport { Close } from '@mui/icons-material'\r\n\r\nimport s from './CustomModalDialog.module.scss'\r\n\r\ntype CustomModalDialogType = {\r\n  active: boolean\r\n  setActive?: (state: boolean) => void\r\n  children: JSX.Element\r\n}\r\n\r\nexport const CustomModalDialog: FC<CustomModalDialogType> = ({ active, setActive, children }) => {\r\n  const handleCloseModal = () => {\r\n    setActive && setActive(false)\r\n    document.body.style.overflow = 'unset'\r\n  }\r\n\r\n  return (\r\n    <div className={active ? `${s.Modal__Active} ${s.Modal}` : s.Modal} onClick={handleCloseModal}>\r\n      <div\r\n        className={active ? `${s.Content__Active} ${s.Content}` : s.Content}\r\n        onClick={e => e.stopPropagation()}\r\n      >\r\n        {setActive ? (\r\n          <div className={s.Close}>\r\n            <Close onClick={setActive ? () => setActive(false) : () => {}} />\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"switcherContainer\":\"PackOwnerSwitcher_switcherContainer__C-K6U\",\"switcher__title\":\"PackOwnerSwitcher_switcher__title__nhtu-\",\"switcher__block\":\"PackOwnerSwitcher_switcher__block__nfE+f\",\"switcher__blockItem\":\"PackOwnerSwitcher_switcher__blockItem__9ogFb\",\"active\":\"PackOwnerSwitcher_active__w99qF\"};","import Button from '@mui/material/Button'\r\nimport ButtonGroup from '@mui/material/ButtonGroup'\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { initialPacksQueryParams as initParams, setPacksQueryParams } from '../packsSlice'\r\n\r\nimport s from './PackOwnerSwitcher.module.scss'\r\n\r\nexport const PackOwnerSwitcher = () => {\r\n  const dispatch = useAppDispatch()\r\n  const isMyPacks = useAppSelector(state => state.packs.queryParams.isMyPacks)\r\n\r\n  const handleMyCards = () => dispatch(setPacksQueryParams({ ...initParams, isMyPacks: 'yes' }))\r\n\r\n  const handleAllCards = () => dispatch(setPacksQueryParams(initParams))\r\n\r\n  return (\r\n    <div className={s.switcherContainer}>\r\n      <p className={s.switcher__title}>Owner</p>\r\n      <ButtonGroup className={s.switcher__block} disableElevation variant=\"text\">\r\n        <Button\r\n          disabled={!!isMyPacks}\r\n          className={`${s.switcher__blockItem} ${isMyPacks ? s.active : ''}`}\r\n          onClick={handleMyCards}\r\n        >\r\n          <p>My</p>\r\n        </Button>\r\n        <Button\r\n          disabled={!isMyPacks}\r\n          className={`${s.switcher__blockItem} ${isMyPacks ? '' : s.active}`}\r\n          onClick={handleAllCards}\r\n        >\r\n          <p>All</p>\r\n        </Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  )\r\n}\r\n","import SliderUnstyled, { sliderUnstyledClasses } from '@mui/base/SliderUnstyled'\r\nimport { styled, alpha } from '@mui/system'\r\n\r\nconst blue = {\r\n  100: '#DAECFF',\r\n  200: '#99CCF3',\r\n  400: '#3399FF',\r\n  300: '#66B2FF',\r\n  500: '#007FFF',\r\n  600: '#0072E5',\r\n  900: '#003A75',\r\n}\r\n\r\nconst grey = {\r\n  50: '#f6f8fa',\r\n  100: '#eaeef2',\r\n  200: '#d0d7de',\r\n  300: '#afb8c1',\r\n  400: '#8c959f',\r\n  500: '#6e7781',\r\n  600: '#57606a',\r\n  700: '#424a53',\r\n  800: '#32383f',\r\n  900: '#24292f',\r\n}\r\n\r\nexport const StyledSlider = styled(SliderUnstyled)(\r\n  ({ theme }) => `\r\n\t color: ${theme.palette.mode === 'light' ? blue[500] : blue[300]};\r\n\t height: 6px;\r\n\t width: 100%;\r\n\t padding: 16px 0;\r\n\t display: inline-block;\r\n\t position: relative;\r\n\t cursor: pointer;\r\n\t touch-action: none;\r\n\t -webkit-tap-highlight-color: transparent;\r\n  \r\n\t &:hover {\r\n\t\topacity: 1;\r\n\t }\r\n  \r\n\t &.${sliderUnstyledClasses.disabled} { \r\n\t\tpointer-events: none;\r\n\t\tcursor: default;\r\n\t\tcolor: ${theme.palette.mode === 'light' ? grey[300] : grey[600]};\r\n\t\topacity: 0.5;\r\n\t }\r\n  \r\n\t & .${sliderUnstyledClasses.rail} {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tbackground-color: currentColor;\r\n\t\topacity: 0.4;\r\n\t }\r\n  \r\n\t & .${sliderUnstyledClasses.track} {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\theight: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tbackground-color: currentColor;\r\n\t }\r\n  \r\n\t & .${sliderUnstyledClasses.thumb} {\r\n\t\tposition: absolute;\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tmargin-left: -6px;\r\n\t\tmargin-top: -6px;\r\n\t\tbox-sizing: border-box;\r\n\t\tborder-radius: 50%;\r\n\t\toutline: 0;\r\n\t\tborder: 3px solid currentColor;\r\n\t\tbackground-color: #fff;\r\n  \r\n\t\t:hover,\r\n\t\t&.${sliderUnstyledClasses.focusVisible} {\r\n\t\t  box-shadow: 0 0 0 0.25rem ${alpha(theme.palette.mode === 'light' ? blue[400] : blue[300], 0.15)};\r\n\t\t}\r\n  \r\n\t\t&.${sliderUnstyledClasses.active} {\r\n\t\t  box-shadow: 0 0 0 0.25rem ${alpha(theme.palette.mode === 'light' ? blue[200] : blue[300], 0.3)};\r\n\t\t}\r\n\t }\r\n  \r\n\t & .${sliderUnstyledClasses.mark} {\r\n\t\tposition: absolute;\r\n\t\twidth: 4px;\r\n\t\theight: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tbackground-color: currentColor;\r\n\t\ttop: 50%;\r\n\t\topacity: 0.7;\r\n\t\ttransform: translateX(-50%);\r\n\t }\r\n  \r\n\t & .${sliderUnstyledClasses.markActive} {\r\n\t\tbackground-color: #fff;\r\n\t }\r\n  \r\n\t & .${sliderUnstyledClasses.valueLabel} {\r\n\t\tfont-family: IBM Plex Sans;\r\n\t\tfont-size: 14px;\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\ttop: -1.6em;\r\n\t\ttext-align: center;\r\n\t\ttransform: translateX(-50%);\r\n\t }\r\n  `\r\n)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sliderContainer\":\"PackSlider_sliderContainer__6gwYF\",\"slider\":\"PackSlider_slider__D06Uk\",\"slider__title\":\"PackSlider_slider__title__6u9If\",\"slider__block\":\"PackSlider_slider__block__riSPd\",\"slider__number\":\"PackSlider_slider__number__KcdYx\"};","import { useState } from 'react'\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useEffectAfterMount } from '../../../hooks/useEffectAfterMount'\r\nimport { setPacksQueryParams } from '../packsSlice'\r\n\r\nimport { StyledSlider } from './CustomStyledSlider/CustomStyledSlider'\r\nimport s from './PackSlider.module.scss'\r\n\r\nexport const PackSlider = () => {\r\n  const dispatch = useAppDispatch()\r\n  const min = useAppSelector(state => state.packs.queryParams.min)\r\n  const max = useAppSelector(state => state.packs.queryParams.max)\r\n  const minCardsCount = useAppSelector(state => state.packs.cardsCount.minCardsCount)\r\n  const maxCardsCount = useAppSelector(state => state.packs.cardsCount.maxCardsCount)\r\n  const [value, setValue] = useState<number[]>([min || minCardsCount, max || maxCardsCount])\r\n\r\n  const handleChange = (e: Event, newValue: number | number[]) => setValue(newValue as number[])\r\n\r\n  const handleMouseUp = () => {\r\n    if (value[0] !== value[1]) {\r\n      dispatch(setPacksQueryParams({ min: value[0], max: value[1] }))\r\n    }\r\n  }\r\n\r\n  useEffectAfterMount(() => {\r\n    setValue([min || minCardsCount, max || maxCardsCount])\r\n  }, [minCardsCount, maxCardsCount, min, max])\r\n\r\n  return (\r\n    <div className={s.sliderContainer}>\r\n      <p className={s.slider__title}>Amount of cards</p>\r\n      <div className={s.slider__block}>\r\n        <div className={s.slider__number}>{value[0]}</div>\r\n        <StyledSlider\r\n          className={s.slider}\r\n          value={value}\r\n          onChange={handleChange}\r\n          disableSwap\r\n          min={minCardsCount}\r\n          max={maxCardsCount}\r\n          onChangeCommitted={handleMouseUp}\r\n        />\r\n        <div className={s.slider__number}>{value[1]}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"packsResetFilter\":\"PacksResetFilter_packsResetFilter__6n1Ps\"};","import { RequestStatusType } from '../../../app/appSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { clearPacksQueryParams } from '../packsSlice'\r\n\r\nimport s from './PacksResetFilter.module.scss'\r\n\r\nexport const PacksResetFilter = () => {\r\n  const dispatch = useAppDispatch()\r\n  const isDataLoading = useAppSelector<RequestStatusType>(state => state.packs.status)\r\n\r\n  const handleResetFilter = () => {\r\n    if (isDataLoading === 'idle') {\r\n      dispatch(clearPacksQueryParams())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={s.packsResetFilter} onClick={handleResetFilter}>\r\n      Reset\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"CustomSelect_select__fjUBm\",\"selected\":\"CustomSelect_selected__nAJle\",\"opened\":\"CustomSelect_opened__d1kj8\",\"options\":\"CustomSelect_options__6baiE\",\"option\":\"CustomSelect_option__jHXSW\"};","import { FC, MouseEvent, MutableRefObject, useRef } from 'react'\r\n\r\nimport { useOnClickOutside } from '../../../../hooks/useOnClickOutside'\r\nimport { SelectType, SortValuesType } from '../../SortItems/SortItems'\r\nimport s from '../CustomSelect.module.scss'\r\n\r\ntype CustomSelectListType = {\r\n  options: SelectType<SortValuesType>[]\r\n  handleClickOption: (e: MouseEvent<HTMLLIElement>, id: SortValuesType) => void\r\n  closeMenu: () => void\r\n}\r\n\r\nexport const CustomSelectList: FC<CustomSelectListType> = ({\r\n  options,\r\n  closeMenu,\r\n  handleClickOption,\r\n}) => {\r\n  const listRef = useRef() as MutableRefObject<HTMLUListElement>\r\n\r\n  useOnClickOutside(listRef, closeMenu)\r\n\r\n  return (\r\n    <ul ref={listRef} className={s.options} onClick={closeMenu}>\r\n      {options.map((el, i) => {\r\n        return (\r\n          <li key={i} onClick={e => handleClickOption(e, el.id)} className={s.option}>\r\n            {el.label}\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n","import { FC, useState, memo, MouseEvent } from 'react'\r\n\r\nimport { useEffectAfterMount } from '../../../hooks/useEffectAfterMount'\r\nimport { SelectType, SortValuesType } from '../SortItems/SortItems'\r\n\r\nimport s from './CustomSelect.module.scss'\r\nimport { CustomSelectList } from './CustomSelectList/CustomSelectList'\r\n\r\ntype CustomSelectType = {\r\n  initValue: SortValuesType\r\n  reset?: boolean\r\n  options: SelectType<SortValuesType>[]\r\n  selectedOption: (option: SortValuesType) => void\r\n}\r\n\r\nexport const CustomSelect: FC<CustomSelectType> = memo(\r\n  ({ initValue, reset = false, options, selectedOption }) => {\r\n    const initSelect = options.filter(el => el.id === initValue)[0].label\r\n    const [selected, setSelected] = useState(initSelect)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const handleClickOption = (e: MouseEvent<HTMLLIElement>, id: SortValuesType) => {\r\n      setSelected(e.currentTarget.textContent!)\r\n      selectedOption(id)\r\n    }\r\n\r\n    const handleToggleSelect = () => setIsOpen(!isOpen)\r\n\r\n    useEffectAfterMount(() => {\r\n      if (reset) {\r\n        setSelected(initSelect)\r\n      }\r\n    }, [reset])\r\n\r\n    return (\r\n      <div className={s.select} onClick={handleToggleSelect}>\r\n        <p className={`${s.selected} ${isOpen ? s.opened : ''}`}>{selected}</p>\r\n        {isOpen && (\r\n          <CustomSelectList\r\n            options={options}\r\n            handleClickOption={handleClickOption}\r\n            closeMenu={handleToggleSelect}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"packsSortContainer\":\"SortItems_packsSortContainer__mYmQo\",\"packsSortTitle\":\"SortItems_packsSortTitle__Ra+Q1\"};","import { useCallback, FC } from 'react'\r\n\r\nimport { CardsSortValuesType, setCardsQueryParams } from '../../../features/cards/cardsSlice'\r\nimport {\r\n  initialPacksQueryParams,\r\n  PacksSortValuesType,\r\n  setPacksQueryParams,\r\n} from '../../../features/packs/packsSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { queryString } from '../../../utils/queryString'\r\nimport { CustomSelect } from '../CustomSelect/CustomSelect'\r\n\r\nimport s from './SortItems.module.scss'\r\n\r\nexport type SortValuesType = PacksSortValuesType | CardsSortValuesType\r\n\r\nexport type SelectType<T> = {\r\n  id: T\r\n  label: string\r\n}\r\n\r\ntype SortItemsType = {\r\n  forCards?: boolean\r\n}\r\n\r\nconst packsOptions: SelectType<PacksSortValuesType>[] = [\r\n  { id: '0name', label: 'Pack name A-z' },\r\n  { id: '1name', label: 'Pack name Z-a' },\r\n  { id: '0user_name', label: 'Created by A-z' },\r\n  { id: '1user_name', label: 'Created by Z-a' },\r\n  { id: '1cardsCount', label: 'Cards ascending' },\r\n  { id: '0cardsCount', label: 'Cards descending' },\r\n  { id: '1updated', label: 'Older packs' },\r\n  { id: '0updated', label: 'Newer packs' },\r\n]\r\n\r\nconst cardsOptions: SelectType<CardsSortValuesType>[] = [\r\n  { id: '0question', label: 'Question A-z' },\r\n  { id: '1question', label: 'Question Z-a' },\r\n  { id: '0answer', label: 'Answer A-z' },\r\n  { id: '1answer', label: 'Answer Z-a' },\r\n  { id: '1updated', label: 'Older question' },\r\n  { id: '0updated', label: 'Newer question' },\r\n  { id: '0grade', label: 'Lower grade' },\r\n  { id: '1grade', label: 'Higher grade' },\r\n]\r\n\r\nexport const SortItems: FC<SortItemsType> = ({ forCards = false }) => {\r\n  const dispatch = useAppDispatch()\r\n  const packsQueryParams = useAppSelector(state => state.packs.queryParams)\r\n  const packsQueryString = queryString(packsQueryParams, initialPacksQueryParams)\r\n  const selectOptions = forCards ? cardsOptions : packsOptions\r\n  const canIResetSelect =\r\n    Object.keys(packsQueryString).length === 0 || packsQueryString === 'isMyPacks=yes'\r\n  const serverSort = useAppSelector<SortValuesType>(state => {\r\n    return forCards ? state.cards.queryParams.sortCards : state.packs.queryParams.sortPacks\r\n  })\r\n\r\n  const handleSetSort = useCallback((tableOrder: SortValuesType) => {\r\n    if (forCards) {\r\n      dispatch(setCardsQueryParams({ sortCards: tableOrder as CardsSortValuesType }))\r\n    } else {\r\n      dispatch(setPacksQueryParams({ sortPacks: tableOrder as PacksSortValuesType }))\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className={s.packsSortContainer}>\r\n      <p className={s.packsSortTitle}>Sort items</p>\r\n      <CustomSelect\r\n        initValue={serverSort}\r\n        reset={canIResetSelect}\r\n        options={selectOptions}\r\n        selectedOption={handleSetSort}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"filtersConainer\":\"FiltersComponent_filtersConainer__9kYxJ\",\"switcherContainer\":\"FiltersComponent_switcherContainer__uVVPW\"};","import { FC, MutableRefObject, useRef } from 'react'\r\n\r\nimport { PackOwnerSwitcher } from '../../../features/packs/PackOwnerSwitcher/PackOwnerSwitcher'\r\nimport { PackSlider } from '../../../features/packs/PackSlider/PackSlider'\r\nimport { PacksResetFilter } from '../../../features/packs/PacksResetFilter/PacksResetFilter'\r\nimport { useOnClickOutside } from '../../../hooks/useOnClickOutside'\r\nimport { SortItems } from '../SortItems/SortItems'\r\n\r\nimport s from './FiltersComponent.module.scss'\r\n\r\ntype FiltersComponentType = {\r\n  forCards?: boolean\r\n  closeMenu: () => void\r\n}\r\n\r\nexport const FiltersComponent: FC<FiltersComponentType> = ({ forCards = false, closeMenu }) => {\r\n  const filtersRef = useRef() as MutableRefObject<HTMLDivElement>\r\n\r\n  useOnClickOutside(filtersRef, closeMenu)\r\n\r\n  return (\r\n    <div ref={filtersRef} className={s.filtersConainer}>\r\n      {forCards ? (\r\n        <SortItems forCards />\r\n      ) : (\r\n        <>\r\n          <SortItems />\r\n          <PackSlider />\r\n          <div className={s.switcherContainer}>\r\n            <PackOwnerSwitcher />\r\n            <PacksResetFilter />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pageTitleBlockContainer\":\"PageTitleBlock_pageTitleBlockContainer__TZcWP\",\"pageTitleBlock__content\":\"PageTitleBlock_pageTitleBlock__content__XAXrx\",\"pageTitleBlock__titleBlock\":\"PageTitleBlock_pageTitleBlock__titleBlock__-vzA3\",\"pageTitleBlock__title\":\"PageTitleBlock_pageTitleBlock__title__GUU9P\",\"filterButtonContainer\":\"PageTitleBlock_filterButtonContainer__9WveT\",\"filterButton\":\"PageTitleBlock_filterButton__b0oO6\",\"learnButton\":\"PageTitleBlock_learnButton__LWmxa\",\"addButton\":\"PageTitleBlock_addButton__VUmnx\"};","import { FC, memo, useState } from 'react'\r\n\r\nimport { isMyPack } from '../../../app/selectors'\r\nimport { PackActionsMenu } from '../../../features/packs/PackActionsMenu/PackActionsMenu'\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useLocationNoUpdates } from '../../../utils/routerUtils'\r\nimport { BackToPacks } from '../BackToPacks/BackToPacks'\r\nimport { CustomButton } from '../CustomButton/CustomButton'\r\nimport { FiltersComponent } from '../FiltersComponent/FiltersComponent'\r\n\r\nimport s from './PageTitleBlock.module.scss'\r\n\r\ntype PageTitleBlockType = {\r\n  linkToPacks?: boolean\r\n  hasButtons?: boolean\r\n  title?: string\r\n  buttonClick: () => void\r\n}\r\n\r\nexport const PageTitleBlock: FC<PageTitleBlockType> = memo(\r\n  ({ linkToPacks = false, hasButtons = true, title = 'Packs list', buttonClick }) => {\r\n    const location = useLocationNoUpdates()\r\n    const packID = location.pathname.split('/cards/')[1]\r\n    const isTableNotEmpty = useAppSelector(state => state.cards.cardsData.cardsTotalCount)\r\n    const isItMyPack = useAppSelector(isMyPack)\r\n    const [isFilterOpen, setIsFilterOpen] = useState(false)\r\n    const isCards = new RegExp('/cards').test(location.pathname)\r\n    const buttonName = isCards ? `${isItMyPack ? 'Add new card' : 'Learn to pack'}` : 'Add new pack'\r\n\r\n    const handleToggleFilter = () => setIsFilterOpen(prevState => !prevState)\r\n\r\n    return (\r\n      <div className={s.pageTitleBlockContainer}>\r\n        {linkToPacks && <BackToPacks />}\r\n        <div className={s.pageTitleBlock__content}>\r\n          <div className={s.pageTitleBlock__titleBlock}>\r\n            <h2 className={s.pageTitleBlock__title}>{title}</h2>\r\n\r\n            {isItMyPack && (\r\n              <PackActionsMenu\r\n                packID={packID as string}\r\n                packName={title}\r\n                packIsEmpty={!!isTableNotEmpty}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {hasButtons && (\r\n            <>\r\n              <div className={s.filterButtonContainer}>\r\n                {isFilterOpen && (\r\n                  <FiltersComponent closeMenu={handleToggleFilter} forCards={linkToPacks} />\r\n                )}\r\n                <CustomButton className={s.filterButton} onClick={handleToggleFilter}>\r\n                  <p>Add filter</p>\r\n                </CustomButton>\r\n              </div>\r\n\r\n              <CustomButton\r\n                className={buttonName === 'Learn to pack' ? s.learnButton : s.addButton}\r\n                onClick={buttonClick}\r\n              >\r\n                <p>{buttonName}</p>\r\n              </CustomButton>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Message\":\"DeletePack_Message__ZMEqy\",\"ButtonContainer\":\"DeletePack_ButtonContainer__bBf2V\"};","import { FC } from 'react'\r\n\r\nimport Button from '@mui/material/Button'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\n\r\nimport { PATH } from '../../../../constants/routePaths.enum'\r\nimport { useAppDispatch } from '../../../../hooks/reduxHooks'\r\nimport { clearPacksQueryParams, deletePackTC } from '../../packsSlice'\r\n\r\nimport s from './DeletePack.module.scss'\r\n\r\ntype DeletePackType = {\r\n  packData: PackDeleteDataType\r\n  activeModal: (state: boolean) => void\r\n}\r\n\r\nexport const DeletePack: FC<DeletePackType> = ({ packData, activeModal }) => {\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocation()\r\n  const navigate = useNavigate()\r\n\r\n  const handleDeletePacK = async () => {\r\n    await dispatch(deletePackTC(packData.id))\r\n    activeModal(false)\r\n    if (/cards/gi.test(location.pathname)) {\r\n      dispatch(clearPacksQueryParams())\r\n      navigate(PATH.PACKS)\r\n    }\r\n  }\r\n  const handleCloseModal = () => activeModal(false)\r\n\r\n  return (\r\n    <div>\r\n      <p className={s.Message}>\r\n        Are you sure you want to delete Pack: <b>{packData.name}</b> ?\r\n        <br />\r\n        All cards will be deleted.\r\n      </p>\r\n      <div className={s.ButtonContainer}>\r\n        <Button onClick={handleCloseModal} type={'button'} variant=\"outlined\">\r\n          Cancel\r\n        </Button>\r\n        <Button type={'button'} variant=\"contained\" onClick={handleDeletePacK} color={'error'}>\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport type PackDeleteDataType = {\r\n  id: string\r\n  name: string\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"editPackContainer\":\"EditPack_editPackContainer__miFUA\",\"editPack__title\":\"EditPack_editPack__title__MiFAm\"};","import { ChangeEvent, FC, useState } from 'react'\r\n\r\nimport { TextField } from '@mui/material'\r\nimport Button from '@mui/material/Button'\r\nimport { useFormik } from 'formik'\r\n\r\nimport cover from '../../../../assets/img/cover.png'\r\nimport cs from '../../../../common/styles/modalStyles/ModalStyles.module.scss'\r\nimport { useAppDispatch } from '../../../../hooks/reduxHooks'\r\nimport { updatePackTC } from '../../packsSlice'\r\n\r\nimport s from './EditPack.module.scss'\r\n\r\ntype EditPackType = {\r\n  activeModal: (state: boolean) => void\r\n  data: {\r\n    id: string\r\n    name: string\r\n    deckCover: string\r\n  }\r\n}\r\n\r\ntype formikErrorType = {\r\n  name?: string\r\n}\r\n\r\nexport const EditPack: FC<EditPackType> = ({ data, activeModal }) => {\r\n  const dispatch = useAppDispatch()\r\n  const [errors, setErrors] = useState<formikErrorType>({ name: '' })\r\n  const [image, setImage] = useState(data.deckCover)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: data.name,\r\n    },\r\n    validate: values => {\r\n      if (!values.name) {\r\n        setErrors({ name: 'name is required' })\r\n      } else if (values.name.length > 50) {\r\n        setErrors({ name: 'name should be less then 50 characters' })\r\n      } else {\r\n        setErrors({ name: '' })\r\n      }\r\n    },\r\n    onSubmit: values => {\r\n      if (data.name !== values.name || data.deckCover !== image) {\r\n        dispatch(updatePackTC({ id: data.id, name: formik.values.name, deckCover: image }))\r\n      }\r\n      activeModal(false)\r\n      formik.resetForm()\r\n    },\r\n  })\r\n\r\n  //to be refactored as util function\r\n  const handleCoverInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files.length) {\r\n      const file = e.target.files[0]\r\n\r\n      if (file.size < 4000000 && file.type.includes('image')) {\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = () => {\r\n          const file64 = reader.result as string\r\n\r\n          setImage(file64)\r\n        }\r\n\r\n        reader.readAsDataURL(file)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={s.editPackContainer}>\r\n      <h3 className={s.editPack__title}>Edit pack</h3>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className={s.PackDataBlock}>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Name\"\r\n            size={'small'}\r\n            {...formik.getFieldProps('name')}\r\n          />\r\n\r\n          <div\r\n            className={\r\n              formik.touched.name && errors.name ? `${s.Error} ${s.Error__active}` : `${s.Error}`\r\n            }\r\n          >\r\n            {errors.name}\r\n          </div>\r\n\r\n          <div className={cs.ImageContainer}>\r\n            <img\r\n              src={image}\r\n              alt=\"cover\"\r\n              className={cs.Image}\r\n              onError={({ currentTarget }) => {\r\n                currentTarget.onerror = null // prevents looping\r\n                currentTarget.src = cover\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <label>\r\n            <input type=\"file\" hidden onChange={handleCoverInput} accept={'image/*'} />\r\n            <Button variant={'contained'} className={cs.FormFields} component={'span'}>\r\n              Add pack cover\r\n            </Button>\r\n          </label>\r\n        </div>\r\n\r\n        <div className={s.Submit}>\r\n          <Button onClick={() => activeModal(false)} type={'button'} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n          <Button disabled={errors.name ? true : false} type={'submit'} variant=\"contained\">\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"menuContainer\":\"PackActionsMenu_menuContainer__H97fe\",\"menu\":\"PackActionsMenu_menu__NWrWg\",\"openMenuRight\":\"PackActionsMenu_openMenuRight__mq36c\",\"openMenuLeft\":\"PackActionsMenu_openMenuLeft__pXSMK\",\"animateWidth\":\"PackActionsMenu_animateWidth__zF-TY\",\"openItemRight\":\"PackActionsMenu_openItemRight__OXx92\",\"openToRight\":\"PackActionsMenu_openToRight__rkHZM\",\"openItemLeft\":\"PackActionsMenu_openItemLeft__M6Ej2\",\"openToLeft\":\"PackActionsMenu_openToLeft__daenw\",\"disableLearn\":\"PackActionsMenu_disableLearn__n5Ffq\",\"menuItem\":\"PackActionsMenu_menuItem__O2h4E\",\"portal\":\"PackActionsMenu_portal__HFPxN\",\"modalsContainer\":\"PackActionsMenu_modalsContainer__Ki89O\"};","import { FC, MutableRefObject, useRef } from 'react'\r\n\r\nimport { useOnClickOutside } from '../../../../hooks/useOnClickOutside'\r\nimport s from '../PackActionsMenu.module.scss'\r\n\r\ntype PackActionsMenuListType = {\r\n  handleLearn: () => void\r\n  handleEdit: () => void\r\n  handleDelete: () => void\r\n  closeMenu: () => void\r\n  packIsEmpty: boolean\r\n  openToLeft: boolean\r\n}\r\n\r\nexport const PackActionsMenuList: FC<PackActionsMenuListType> = ({\r\n  handleLearn,\r\n  handleEdit,\r\n  handleDelete,\r\n  closeMenu,\r\n  packIsEmpty,\r\n  openToLeft,\r\n}) => {\r\n  const listStyle = `${s.menuItem} ${openToLeft ? s.openItemLeft : s.openItemRight}`\r\n  const listRef = useRef() as MutableRefObject<HTMLUListElement>\r\n\r\n  useOnClickOutside(listRef, closeMenu)\r\n\r\n  return (\r\n    <ul ref={listRef} className={s.menu} onClick={closeMenu}>\r\n      <li\r\n        className={`${listStyle} ${packIsEmpty ? '' : s.disableLearn}`}\r\n        onClick={handleLearn}\r\n      ></li>\r\n      <li className={listStyle} onClick={handleEdit}></li>\r\n      <li className={listStyle} onClick={handleDelete}></li>\r\n    </ul>\r\n  )\r\n}\r\n","import { FC, useState } from 'react'\r\n\r\nimport { Portal } from '@mui/material'\r\n\r\nimport { PATH } from '../../../constants/routePaths.enum'\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useNavigateNoUpdates } from '../../../utils/routerUtils'\r\nimport { DeletePack } from '../Modals/DeletePack/DeletePack'\r\nimport { EditPack } from '../Modals/EditPack/EditPack'\r\n\r\nimport s from './PackActionsMenu.module.scss'\r\nimport { PackActionsMenuList } from './PackActionsMenuList/PackActionsMenuList'\r\n\r\ntype PackActionsMenuType = {\r\n  openToLeft?: boolean\r\n  packID: string\r\n  packName: string\r\n  packIsEmpty: boolean\r\n}\r\n\r\nexport const PackActionsMenu: FC<PackActionsMenuType> = ({\r\n  openToLeft = false,\r\n  packID,\r\n  packName,\r\n  packIsEmpty,\r\n}) => {\r\n  const packDeckCover = useAppSelector<string | null>(state => state.cards.cardsData.packDeckCover)\r\n  const navigate = useNavigateNoUpdates()\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n  const menuSheet = isMenuOpen ? `${openToLeft ? s.openMenuLeft : s.openMenuRight}` : ''\r\n  const [openModals, setOpenModals] = useState<number[]>([0, 0])\r\n  const showModals = openModals.reduce((a, b) => a + b, 0)\r\n  const sendData = {\r\n    id: packID,\r\n    name: packName,\r\n    deckCover: packDeckCover || '',\r\n  }\r\n\r\n  const handleToogleMenu = () => setIsMenuOpen(!isMenuOpen)\r\n\r\n  const handleClose = () => {\r\n    setOpenModals([0, 0])\r\n    document.body.style.overflow = 'unset'\r\n  }\r\n\r\n  const handleLearn = () => {\r\n    if (packIsEmpty) {\r\n      navigate(PATH.LEARN + `/${packID}`)\r\n    }\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setOpenModals([1, 0])\r\n    document.body.style.overflow = 'hidden'\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    setOpenModals([0, 1])\r\n    document.body.style.overflow = 'hidden'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Portal>\r\n        <div className={showModals ? s.portal : ''} onClick={handleClose}></div>\r\n        {!!showModals && (\r\n          <div className={s.modalsContainer}>\r\n            {!!openModals[0] && <EditPack data={sendData} activeModal={handleClose} />}\r\n            {!!openModals[1] && <DeletePack packData={sendData} activeModal={handleClose} />}\r\n          </div>\r\n        )}\r\n      </Portal>\r\n\r\n      <div className={`${s.menuContainer} ${menuSheet}`} onClick={handleToogleMenu}>\r\n        {isMenuOpen && (\r\n          <PackActionsMenuList\r\n            handleLearn={handleLearn}\r\n            handleEdit={handleEdit}\r\n            handleDelete={handleDelete}\r\n            closeMenu={handleToogleMenu}\r\n            packIsEmpty={packIsEmpty}\r\n            openToLeft={openToLeft}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"FormFields\":\"ModalStyles_FormFields__RQgHC\",\"InputCoverPack\":\"ModalStyles_InputCoverPack__0CRU2\",\"Image\":\"ModalStyles_Image__pGZSN\",\"ImageContainer\":\"ModalStyles_ImageContainer__vMPDd\"};"],"names":["packsTableLength","createSelector","state","packs","tableData","length","isMyPack","cards","cardsData","packUserId","profile","userData","id","myId","BackToPacks","location","useLocationNoUpdates","packsQueryParams","useAppSelector","queryParams","packsQueryString","pathname","queryString","initParams","className","s","to","PATH","useMediaQuery","query","getMatches","window","matchMedia","matches","useState","setMatches","handleChange","useEffect","addListener","addEventListener","removeListener","removeEventListener","CustomPagination","forCards","dispatch","useAppDispatch","isDataLoading","status","pagePacks","page","pageCards","pageCountPacks","pageCount","pageCountCards","cardsTotalCount","packsTotalCount","cardsCount","cardPacksTotalCount","rowsPerPage","paginationCount","Math","ceil","showTablePagination","matches599","matches472","matches374","dispatchData","data","setCardsQueryParams","setPacksQueryParams","Pagination","disabled","count","shape","color","onChange","event","size","hidePrevButton","hideNextButton","TablePagination","component","labelRowsPerPage","labelDisplayedRows","onPageChange","rowsPerPageOptions","ActionsComponent","onRowsPerPageChange","e","target","value","SelectProps","CustomSearch","allParams","getQueryParams","search","cardQuestion","inputValue","setInputValue","debouncedValue","delay","setDebouncedValue","timer","setTimeout","clearTimeout","useDebounce","useEffectAfterMount","TextField","variant","type","autoComplete","currentTarget","TableBodySkeleton","columnsCount","rowsCount","withActions","cells","Array","fill","map","_","i","animation","height","rows","CustomTableHead","heads","serverSort","sortCards","sortPacks","serverOrder","slice","tableOrderBy","arrowOrderStyle","el","label","scope","CustomModalDialog","active","setActive","children","onClick","document","body","style","overflow","stopPropagation","Close","PackOwnerSwitcher","isMyPacks","ButtonGroup","disableElevation","Button","blue","grey","StyledSlider","styled","SliderUnstyled","theme","palette","mode","sliderUnstyledClasses","alpha","PackSlider","min","max","minCardsCount","maxCardsCount","setValue","newValue","disableSwap","onChangeCommitted","PacksResetFilter","clearPacksQueryParams","CustomSelectList","options","closeMenu","handleClickOption","listRef","useRef","useOnClickOutside","ref","CustomSelect","memo","initValue","reset","selectedOption","initSelect","filter","selected","setSelected","isOpen","setIsOpen","handleToggleSelect","textContent","packsOptions","cardsOptions","SortItems","initialPacksQueryParams","selectOptions","canIResetSelect","Object","keys","handleSetSort","useCallback","tableOrder","FiltersComponent","filtersRef","PageTitleBlock","linkToPacks","hasButtons","title","buttonClick","packID","split","isTableNotEmpty","isItMyPack","isFilterOpen","setIsFilterOpen","buttonName","RegExp","test","handleToggleFilter","prevState","PackActionsMenu","packName","packIsEmpty","CustomButton","DeletePack","packData","activeModal","useLocation","navigate","useNavigate","handleDeletePacK","deletePackTC","name","EditPack","errors","setErrors","deckCover","image","setImage","formik","useFormik","initialValues","validate","values","onSubmit","updatePackTC","resetForm","handleSubmit","autoFocus","margin","getFieldProps","touched","cs","src","alt","onError","onerror","cover","hidden","files","file","includes","reader","FileReader","onload","file64","result","readAsDataURL","accept","PackActionsMenuList","handleLearn","handleEdit","handleDelete","openToLeft","listStyle","packDeckCover","useNavigateNoUpdates","isMenuOpen","setIsMenuOpen","menuSheet","openModals","setOpenModals","showModals","reduce","a","b","sendData","handleToogleMenu","handleClose","Portal"],"sourceRoot":""}