{"version":3,"file":"static/js/253.04daabc1.chunk.js","mappings":"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","sources":["webpack://cards/./src/common/components/BackToPacks/BackToPacks.module.scss?b64e","common/components/BackToPacks/BackToPacks.tsx","common/components/CustomIconButtons/CustomDeleteIconButton.tsx","common/components/CustomIconButtons/CustomEditIconButton.tsx","webpack://cards/./src/common/components/CustomPagination/CustomPagination.module.scss?ffc1","common/components/CustomPagination/CustomPagination.tsx","webpack://cards/./src/common/components/CustomSearch/CustomSearch.module.scss?5655","common/components/CustomSearch/CustomSearch.tsx","hooks/useDebounce.tsx","common/components/CustomSkeletons/TableBodySkeleton/TableBodySkeleton.tsx","webpack://cards/./src/common/components/CustomTableHead/CustomTableHead.module.scss?8448","common/components/CustomTableHead/CustomTableHead.tsx","webpack://cards/./src/common/components/ModalDialog/CustomModalDialog.module.scss?fde9","common/components/ModalDialog/CustomModalDialog.tsx","webpack://cards/./src/common/components/PageTitleBlock/PageTitleBlock.module.scss?b6a9","common/components/PageTitleBlock/PageTitleBlock.tsx","features/packs/PacksTable/PacksTable.tsx","webpack://cards/./src/features/packs/PacksTable/PacksTable.module.scss?aefb","common/components/CustomIconButtons/CustomStudyIconButton.tsx","webpack://cards/./src/features/packs/PacksTable/PacksTableBody/PacksActionCell/PacksActionCell.module.scss?a226","features/packs/PacksTable/PacksTableBody/PacksActionCell/PacksActionCell.tsx","features/packs/PacksTable/PacksTableBody/PacksTableBody.module.scss","features/packs/PacksTable/PacksTableBody/PacksTableBody.tsx","hooks/useGetSearchParams.tsx","utils/extractPacksQueryParams.ts","webpack://cards/./src/common/components/CustomIconButtons/CustomIconButton.module.scss?e7da"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backToPacks__linkPacks\":\"BackToPacks_backToPacks__linkPacks__EiQax\",\"backToPacks__arrow\":\"BackToPacks_backToPacks__arrow__AT0Eb\"};","import { KeyboardBackspace } from '@mui/icons-material'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nimport { PATH } from '../../../constants/routePaths.enum'\r\nimport { initialPacksQueryParams } from '../../../features/packs/packsSlice'\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { extractPacksQueryParams } from '../../../utils/extractPacksQueryParams'\r\n\r\nimport s from './BackToPacks.module.scss'\r\n\r\nexport const BackToPacks = () => {\r\n  const location = useLocation()\r\n  const packsQueryParams = useAppSelector(state => state.packs.queryParams)\r\n  const queryString =\r\n    location.pathname === '/profile'\r\n      ? ''\r\n      : '?' + extractPacksQueryParams(packsQueryParams, initialPacksQueryParams)\r\n\r\n  return (\r\n    <>\r\n      <Link className={s.backToPacks__linkPacks} to={PATH.PACKS + queryString}>\r\n        <KeyboardBackspace className={s.backToPacks__arrow} />\r\n        <p>back to packs list</p>\r\n      </Link>\r\n    </>\r\n  )\r\n}\r\n","import { FC } from 'react'\r\n\r\nimport { IconButton, Tooltip } from '@mui/material'\r\nimport { IconButtonProps } from '@mui/material/IconButton/IconButton'\r\n\r\nimport s from './CustomIconButton.module.scss'\r\n\r\ntype CustomStudyIconButtonPropsType = IconButtonProps & {\r\n  tooltip?: string\r\n}\r\n\r\nexport const CustomDeleteIconButton: FC<CustomStudyIconButtonPropsType> = ({\r\n  tooltip,\r\n  className,\r\n  ...props\r\n}) => {\r\n  const finalClass = `${s.iconBtn} ${className ? className : ''}`\r\n\r\n  return (\r\n    <Tooltip title={tooltip}>\r\n      <span>\r\n        <IconButton className={finalClass} {...props}>\r\n          <div className={s.deleteIcon} />\r\n        </IconButton>\r\n      </span>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { FC } from 'react'\r\n\r\nimport { IconButton, Tooltip } from '@mui/material'\r\nimport { IconButtonProps } from '@mui/material/IconButton/IconButton'\r\n\r\nimport s from './CustomIconButton.module.scss'\r\n\r\ntype CustomStudyIconButtonPropsType = IconButtonProps & {\r\n  tooltip?: string\r\n}\r\n\r\nexport const CustomEditIconButton: FC<CustomStudyIconButtonPropsType> = ({\r\n  tooltip,\r\n  className,\r\n  ...props\r\n}) => {\r\n  const finalClass = `${s.iconBtn} ${className ? className : ''}`\r\n\r\n  return (\r\n    <Tooltip title={tooltip}>\r\n      <span>\r\n        <IconButton className={finalClass} {...props}>\r\n          <div className={s.editIcon} />\r\n        </IconButton>\r\n      </span>\r\n    </Tooltip>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"paginationContainer\":\"CustomPagination_paginationContainer__exkQC\",\"paginationTable\":\"CustomPagination_paginationTable__KmoSG\"};","import { FC, ChangeEvent, useEffect } from 'react'\r\n\r\nimport Pagination from '@mui/material/Pagination'\r\nimport TablePagination from '@mui/material/TablePagination'\r\nimport { useSearchParams } from 'react-router-dom'\r\n\r\nimport { RequestStatusPayloadType } from '../../../app/appSlice'\r\nimport { setCardsQueryParams, updateCardsQueryParamsTC } from '../../../features/cards/cardsSlice'\r\nimport { setPacksQueryParams, updatePacksQueryParamsTC } from '../../../features/packs/packsSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useGetSearchParams } from '../../../hooks/useGetSearchParams'\r\n\r\nimport s from './CustomPagination.module.scss'\r\n\r\ntype CustomPaginationType = {\r\n  cards?: boolean\r\n}\r\n\r\nexport const CustomPagination: FC<CustomPaginationType> = ({ cards }) => {\r\n  const dispatch = useAppDispatch()\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  const allParams = useGetSearchParams()\r\n  const isDataLoading = useAppSelector<RequestStatusPayloadType>(state => state.app.tableStatus)\r\n  const pagePacks = useAppSelector(state => state.packs.queryParams.page)\r\n  const pageCards = useAppSelector(state => state.cards.queryParams.page)\r\n  const pageCountPacks = useAppSelector(state => state.packs.queryParams.pageCount)\r\n  const pageCountCards = useAppSelector(state => state.cards.queryParams.pageCount)\r\n  const cardsTotalCount = useAppSelector(state => state.cards.cardsData.cardsTotalCount)\r\n  const packsTotalCount = useAppSelector(state => state.packs.cardsCount.cardPacksTotalCount)\r\n  const page = cards ? pageCards : pagePacks\r\n  const rowsPerPage = cards ? pageCountCards : pageCountPacks\r\n  const paginationCount = Math.ceil(\r\n    cards ? cardsTotalCount / pageCountCards : packsTotalCount / pageCountPacks\r\n  )\r\n  const showTablePagination = cards ? cardsTotalCount > 4 : packsTotalCount > 4\r\n\r\n  const dispatchData = (data: { [key: string]: number }) => {\r\n    if (cards) {\r\n      dispatch(updateCardsQueryParamsTC(data))\r\n    } else {\r\n      dispatch(updatePacksQueryParamsTC(data))\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event: ChangeEvent<unknown>, page: number) => {\r\n    dispatchData({ page })\r\n\r\n    setSearchParams({ ...allParams, page: page + '' })\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    dispatchData({ pageCount: +e.target.value })\r\n\r\n    setSearchParams({ ...allParams, pageCount: e.target.value })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (allParams.page > paginationCount) {\r\n      setSearchParams({ ...allParams, page: paginationCount })\r\n      if (cards) {\r\n        dispatch(setCardsQueryParams({ page: paginationCount }))\r\n      } else {\r\n        dispatch(setPacksQueryParams({ page: paginationCount }))\r\n      }\r\n    }\r\n  }, [allParams])\r\n\r\n  return (\r\n    <div className={s.paginationContainer}>\r\n      {paginationCount <= 1 ? null : (\r\n        <Pagination\r\n          disabled={isDataLoading === 'loading'}\r\n          count={paginationCount}\r\n          shape=\"rounded\"\r\n          color=\"primary\"\r\n          onChange={handleChangePage}\r\n          page={page}\r\n        />\r\n      )}\r\n      {showTablePagination ? (\r\n        <TablePagination\r\n          className={s.paginationTable}\r\n          component=\"div\"\r\n          labelRowsPerPage={'show'}\r\n          labelDisplayedRows={() => `${cards ? 'cards' : 'packs'} per page`}\r\n          count={101}\r\n          page={page === -1 ? 0 : 1}\r\n          onPageChange={() => {}}\r\n          rowsPerPage={rowsPerPage}\r\n          rowsPerPageOptions={[4, 8, 12, 16, 30, 50, 100]}\r\n          ActionsComponent={() => null}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n          SelectProps={{ disabled: isDataLoading === 'loading' }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"CustomSearch_searchContainer__Hdvwx\",\"search__title\":\"CustomSearch_search__title__lNOyk\",\"search__input\":\"CustomSearch_search__input__SasxG\"};","import { useState, useEffect, FC, ChangeEvent } from 'react'\r\n\r\nimport { TextField } from '@mui/material'\r\nimport { useLocation, useSearchParams } from 'react-router-dom'\r\n\r\nimport { updateCardsQueryParamsTC } from '../../../features/cards/cardsSlice'\r\nimport { updatePacksQueryParamsTC } from '../../../features/packs/packsSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useDebounce } from '../../../hooks/useDebounce'\r\nimport { useGetSearchParams } from '../../../hooks/useGetSearchParams'\r\n\r\nimport s from './CustomSearch.module.scss'\r\n\r\ntype CustomSearchType = {\r\n  cards?: boolean\r\n}\r\n\r\nexport const CustomSearch: FC<CustomSearchType> = ({ cards }) => {\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocation()\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  const allParams = useGetSearchParams('always')\r\n  const initInputValue = allParams.search || allParams.cardQuestion || ''\r\n  const [inputValue, setInputValue] = useState(initInputValue)\r\n  const debouncedValue = useDebounce(inputValue)\r\n  const search = useAppSelector(state => state.packs.queryParams.search)\r\n  const cardQuestion = useAppSelector(state => state.cards.queryParams.cardQuestion)\r\n\r\n  const handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setInputValue(e.currentTarget.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const isItWorthUpdating = () => {\r\n      if (cards) {\r\n        if (cardQuestion !== inputValue) {\r\n          dispatch(updateCardsQueryParamsTC({ cardQuestion: inputValue }))\r\n        }\r\n      } else {\r\n        if (search !== inputValue) {\r\n          dispatch(updatePacksQueryParamsTC({ search: inputValue }))\r\n        }\r\n      }\r\n    }\r\n\r\n    if (inputValue !== search && inputValue !== '') {\r\n      setSearchParams({ ...allParams, [`${cards ? 'cardQuestion' : 'search'}`]: inputValue })\r\n      isItWorthUpdating()\r\n    }\r\n\r\n    if (debouncedValue === '' && initInputValue) {\r\n      cards ? searchParams.delete('cardQuestion') : searchParams.delete('search')\r\n      setSearchParams(searchParams)\r\n      isItWorthUpdating()\r\n    }\r\n  }, [debouncedValue])\r\n\r\n  useEffect(() => {\r\n    setInputValue(initInputValue)\r\n  }, [location.search])\r\n\r\n  return (\r\n    <>\r\n      <div className={s.searchContainer}>\r\n        <p className={s.search__title}>search</p>\r\n        <TextField\r\n          className={s.search__input}\r\n          value={inputValue}\r\n          variant={'outlined'}\r\n          type={'search'}\r\n          autoComplete=\"off\"\r\n          onChange={handleChangeInput}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport const useDebounce = <T,>(value: T, delay?: number): T => {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 700)\r\n\r\n    return () => {\r\n      clearTimeout(timer)\r\n    }\r\n  }, [value, delay])\r\n\r\n  return debouncedValue\r\n}\r\n","import { FC } from 'react'\r\n\r\nimport { Skeleton } from '@mui/material'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableRow from '@mui/material/TableRow'\r\n\r\ntype TableSkeletonPropsType = {\r\n  columnsCount: number\r\n  rowsCount: number\r\n  withActions?: boolean\r\n}\r\n\r\nexport const TableBodySkeleton: FC<TableSkeletonPropsType> = ({\r\n  columnsCount,\r\n  rowsCount,\r\n  withActions = false,\r\n}) => {\r\n  const cells = new Array(withActions ? columnsCount + 1 : columnsCount).fill('').map((_, i) => {\r\n    return (\r\n      <TableCell key={i}>\r\n        <Skeleton animation={'pulse'} height={35} />\r\n      </TableCell>\r\n    )\r\n  })\r\n  const rows = new Array(rowsCount).fill('').map((_, i) => {\r\n    return <TableRow key={i}>{cells}</TableRow>\r\n  })\r\n\r\n  return <TableBody>{rows}</TableBody>\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableHead\":\"CustomTableHead_tableHead__AKhHz\"};","import Box from '@mui/material/Box'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport TableSortLabel from '@mui/material/TableSortLabel'\r\nimport { visuallyHidden } from '@mui/utils'\r\n\r\nimport { TableOrderType } from '../../../features/packs/PacksTable/PacksTable'\r\n\r\nimport s from './CustomTableHead.module.scss'\r\n\r\nexport type HeadType<T> = {\r\n  id: T\r\n  label: string\r\n}\r\n\r\ntype CustomTableHeadPropsType<T> = {\r\n  heads: HeadType<T>[]\r\n  order: TableOrderType\r\n  orderBy: T\r\n  onSetSort: (property: T) => void\r\n  withActions?: boolean\r\n}\r\n\r\nexport const CustomTableHead = <T extends string>({\r\n  order,\r\n  orderBy,\r\n  heads,\r\n  onSetSort,\r\n  withActions = false,\r\n}: CustomTableHeadPropsType<T>) => {\r\n  return (\r\n    <TableHead className={s.tableHead}>\r\n      <TableRow>\r\n        {heads.map(h => (\r\n          <TableCell key={h.id}>\r\n            <TableSortLabel\r\n              active={orderBy === h.id}\r\n              direction={orderBy === h.id ? order : 'asc'}\r\n              onClick={() => onSetSort(h.id)}\r\n            >\r\n              {h.label}\r\n              {orderBy === h.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        {withActions && <TableCell>Actions</TableCell>}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Modal\":\"CustomModalDialog_Modal__lDGUA\",\"Modal__Active\":\"CustomModalDialog_Modal__Active__MQRSM\",\"Content\":\"CustomModalDialog_Content__lWwgO\",\"Content__Active\":\"CustomModalDialog_Content__Active__TLIc9\",\"Close\":\"CustomModalDialog_Close__zn+gr\"};","import { FC } from 'react'\r\n\r\nimport { Close } from '@mui/icons-material'\r\n\r\nimport s from './CustomModalDialog.module.scss'\r\n\r\ntype CustomModalDialogType = {\r\n  active: boolean\r\n  setActive?: (state: boolean) => void\r\n  children: JSX.Element\r\n}\r\n\r\nexport const CustomModalDialog: FC<CustomModalDialogType> = ({ active, setActive, children }) => {\r\n  return (\r\n    <div\r\n      className={active ? `${s.Modal__Active} ${s.Modal}` : s.Modal}\r\n      onClick={setActive ? () => setActive(false) : () => {}}\r\n    >\r\n      <div\r\n        className={active ? `${s.Content__Active} ${s.Content}` : s.Content}\r\n        onClick={e => e.stopPropagation()}\r\n      >\r\n        {setActive ? (\r\n          <div className={s.Close}>\r\n            <Close onClick={setActive ? () => setActive(false) : () => {}} />\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pageTitleBlockContainer\":\"PageTitleBlock_pageTitleBlockContainer__WFAPW\",\"pageTitleBlock__titleBlock\":\"PageTitleBlock_pageTitleBlock__titleBlock__1H8fF\",\"pageTitleBlock__title\":\"PageTitleBlock_pageTitleBlock__title__EuQXF\"};","import { FC, memo } from 'react'\r\n\r\nimport { AddPack } from '../../../features/packs/Modals/AddPack/AddPack'\r\nimport { BackToPacks } from '../BackToPacks/BackToPacks'\r\nimport { CustomButton } from '../CustomButton/CustomButton'\r\nimport { CustomModalDialog } from '../ModalDialog/CustomModalDialog'\r\n\r\nimport s from './PageTitleBlock.module.scss'\r\n\r\ntype PageTitleBlockType = {\r\n  linkToPacks?: boolean\r\n  button: string\r\n  title: string\r\n  buttonClick: (state: boolean) => void\r\n}\r\n\r\nexport const PageTitleBlock: FC<PageTitleBlockType> = memo(\r\n  ({ linkToPacks, button, title, buttonClick }) => {\r\n    const handleClick = () => {\r\n      buttonClick(true)\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={s.pageTitleBlockContainer}>\r\n          {linkToPacks && <BackToPacks />}\r\n          <div className={s.pageTitleBlock__titleBlock}>\r\n            <h2 className={s.pageTitleBlock__title}>{title}</h2>\r\n            {button && (\r\n              <CustomButton onClick={handleClick}>\r\n                <p>{button}</p>\r\n              </CustomButton>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n)\r\n","import { FC, useCallback } from 'react'\r\n\r\nimport Box from '@mui/material/Box'\r\nimport Paper from '@mui/material/Paper'\r\nimport Table from '@mui/material/Table'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport { useSearchParams } from 'react-router-dom'\r\n\r\nimport { RequestStatusPayloadType } from '../../../app/appSlice'\r\nimport { TableBodySkeleton } from '../../../common/components/CustomSkeletons/TableBodySkeleton/TableBodySkeleton'\r\nimport {\r\n  CustomTableHead,\r\n  HeadType,\r\n} from '../../../common/components/CustomTableHead/CustomTableHead'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useGetSearchParams } from '../../../hooks/useGetSearchParams'\r\nimport { PackDeleteDataType } from '../Modals/DeletePack/DeletePack'\r\nimport { SortValuesType, UpdatePackDataType, updatePacksQueryParamsTC } from '../packsSlice'\r\n\r\nimport s from './PacksTable.module.scss'\r\nimport { PacksTableBody } from './PacksTableBody/PacksTableBody'\r\n\r\nexport type PacksOrderByType = 'name' | 'cardsCount' | 'updated' | 'user_name'\r\nexport type ServerOrderType = '0' | '1'\r\n\r\nexport enum TableOrder {\r\n  desc = '0',\r\n  asc = '1',\r\n}\r\n\r\nexport type TableOrderType = 'asc' | 'desc'\r\n\r\nconst heads: HeadType<PacksOrderByType>[] = [\r\n  { id: 'name', label: 'Name' },\r\n  { id: 'cardsCount', label: 'Cards' },\r\n  { id: 'updated', label: 'Last Updated' },\r\n  { id: 'user_name', label: 'Created by' },\r\n]\r\n\r\ntype PacksTablePropsType = {\r\n  openEditModal: (state: boolean) => void\r\n  setEditData: (data: UpdatePackDataType) => void\r\n  openDeleteModal: (state: boolean) => void\r\n  setDeleteData: (data: PackDeleteDataType) => void\r\n}\r\n\r\nexport const PacksTable: FC<PacksTablePropsType> = ({\r\n  openEditModal,\r\n  setEditData,\r\n  openDeleteModal,\r\n  setDeleteData,\r\n}) => {\r\n  const status = useAppSelector<RequestStatusPayloadType>(state => state.app.tableStatus)\r\n  const isDataEmpty = useAppSelector(state => state.packs.tableData).length\r\n  const serverSort = useAppSelector<SortValuesType>(state => state.packs.queryParams.sortPacks)\r\n  const pageCount = useAppSelector(state => state.packs.queryParams.pageCount)\r\n  const dispatch = useAppDispatch()\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  const allParams = useGetSearchParams()\r\n\r\n  // Check current order\r\n  const serverOrder = serverSort.slice(0, 1) as ServerOrderType\r\n  const tableOrderBy = serverSort.slice(1) as PacksOrderByType\r\n  const tableOrder: TableOrderType = serverOrder === TableOrder.asc ? 'asc' : 'desc'\r\n\r\n  const handleSetSort = (property: PacksOrderByType) => {\r\n    const isAsc = tableOrderBy === property && tableOrder === 'asc'\r\n    const newOrder = isAsc ? 'desc' : 'asc'\r\n    const newServerOrder: SortValuesType = `${TableOrder[newOrder]}${property}`\r\n\r\n    setSearchParams({ ...allParams, sortPacks: newServerOrder })\r\n    dispatch(updatePacksQueryParamsTC({ sortPacks: newServerOrder }))\r\n  }\r\n\r\n  const handleOpenEditModal = useCallback(() => openEditModal(true), [openEditModal])\r\n\r\n  return (\r\n    <>\r\n      {isDataEmpty ? (\r\n        <Box>\r\n          <Paper>\r\n            <TableContainer>\r\n              <Table>\r\n                <CustomTableHead\r\n                  heads={heads}\r\n                  order={tableOrder}\r\n                  orderBy={tableOrderBy}\r\n                  onSetSort={handleSetSort}\r\n                  withActions={true}\r\n                />\r\n                {status === 'loading' ? (\r\n                  <TableBodySkeleton columnsCount={heads.length + 1} rowsCount={pageCount} />\r\n                ) : (\r\n                  <PacksTableBody\r\n                    heads={heads}\r\n                    openEditModal={handleOpenEditModal}\r\n                    setEditData={setEditData}\r\n                    openDeleteModal={openDeleteModal}\r\n                    setDeleteData={setDeleteData}\r\n                  />\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Box>\r\n      ) : (\r\n        <p className={s.emptyTable}>no packs found.</p>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"emptyTable\":\"PacksTable_emptyTable__VVjiB\"};","import { FC } from 'react'\r\n\r\nimport { IconButton, Tooltip } from '@mui/material'\r\nimport { IconButtonProps } from '@mui/material/IconButton/IconButton'\r\n\r\nimport s from './CustomIconButton.module.scss'\r\n\r\ntype CustomStudyIconButtonPropsType = IconButtonProps & {\r\n  tooltip?: string\r\n}\r\n\r\nexport const CustomStudyIconButton: FC<CustomStudyIconButtonPropsType> = ({\r\n  tooltip,\r\n  className,\r\n  ...props\r\n}) => {\r\n  const finalClass = `${s.iconBtn} ${className ? className : ''}`\r\n\r\n  return (\r\n    <Tooltip title={tooltip}>\r\n      <span>\r\n        <IconButton className={finalClass} {...props}>\r\n          <div className={s.studyIcon} />\r\n        </IconButton>\r\n      </span>\r\n    </Tooltip>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"span\":\"PacksActionCell_span__qw3MQ\"};","import { FC, MouseEvent } from 'react'\r\n\r\nimport TableCell from '@mui/material/TableCell'\r\n\r\nimport { CustomDeleteIconButton } from '../../../../../common/components/CustomIconButtons/CustomDeleteIconButton'\r\nimport { CustomEditIconButton } from '../../../../../common/components/CustomIconButtons/CustomEditIconButton'\r\nimport { CustomStudyIconButton } from '../../../../../common/components/CustomIconButtons/CustomStudyIconButton'\r\n\r\nimport s from './PacksActionCell.module.scss'\r\n\r\ntype PacksActionCellPropsType = {\r\n  isMine: boolean\r\n  isStudyDisabled: boolean\r\n  isAllDisabled: boolean\r\n  onStudy: () => void\r\n  onEdit: () => void\r\n  onDelete: () => void\r\n}\r\n\r\nexport const PacksActionCell: FC<PacksActionCellPropsType> = ({\r\n  isMine,\r\n  isStudyDisabled,\r\n  isAllDisabled,\r\n  onStudy,\r\n  onEdit,\r\n  onDelete,\r\n}) => {\r\n  const handleSpanClick = (e: MouseEvent<HTMLSpanElement>) => e.stopPropagation()\r\n  const handleStudyClick = () => onStudy()\r\n  const handleEditClick = () => onEdit()\r\n  const handleDeleteClick = () => onDelete()\r\n\r\n  return (\r\n    <TableCell>\r\n      <span className={s.span} onClick={handleSpanClick}>\r\n        <CustomStudyIconButton\r\n          onClick={handleStudyClick}\r\n          disabled={isStudyDisabled || isAllDisabled}\r\n          tooltip={'Study'}\r\n        />\r\n        {isMine && (\r\n          <CustomEditIconButton\r\n            onClick={handleEditClick}\r\n            disabled={isAllDisabled}\r\n            tooltip={'Edit'}\r\n          />\r\n        )}\r\n        {isMine && (\r\n          <CustomDeleteIconButton\r\n            onClick={handleDeleteClick}\r\n            disabled={isAllDisabled}\r\n            tooltip={'Delete'}\r\n          />\r\n        )}\r\n      </span>\r\n    </TableCell>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"PacksTableBody_row__vRMvC\",\"tableCellText\":\"PacksTableBody_tableCellText__tdOGk\"};","import TableBody from '@mui/material/TableBody'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport dayjs from 'dayjs'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { RequestStatusPayloadType } from '../../../../app/appSlice'\r\nimport { HeadType } from '../../../../common/components/CustomTableHead/CustomTableHead'\r\nimport { PATH } from '../../../../constants/routePaths.enum'\r\nimport { useAppSelector } from '../../../../hooks/reduxHooks'\r\nimport { PackDeleteDataType } from '../../Modals/DeletePack/DeletePack'\r\nimport { AppPackType, UpdatePackDataType } from '../../packsSlice'\r\nimport { PacksOrderByType } from '../PacksTable'\r\n\r\nimport { PacksActionCell } from './PacksActionCell/PacksActionCell'\r\nimport s from './PacksTableBody.module.scss'\r\n\r\ntype PacksTableBodyType = {\r\n  heads: HeadType<PacksOrderByType>[]\r\n  openEditModal: () => void\r\n  setEditData: (data: UpdatePackDataType) => void\r\n  openDeleteModal: (state: boolean) => void\r\n  setDeleteData: (data: PackDeleteDataType) => void\r\n}\r\n\r\nexport const PacksTableBody: React.FC<PacksTableBodyType> = ({\r\n  heads,\r\n  setEditData,\r\n  openEditModal,\r\n  openDeleteModal,\r\n  setDeleteData,\r\n}) => {\r\n  const tableData = useAppSelector<AppPackType[]>(state => state.packs.tableData)\r\n  const userId = useAppSelector(state => state.profile.userData.id)\r\n  const navigate = useNavigate()\r\n\r\n  const handleOpenCardPack = (id: string, requestStatus: RequestStatusPayloadType) => {\r\n    if (requestStatus === 'loading') return\r\n    navigate(PATH.CARDS + `/${id}`)\r\n  }\r\n\r\n  const handleStudyCardPack = async (id: string) => {\r\n    navigate(PATH.LEARN + `/${id}`)\r\n  }\r\n  const handleEditCardPack = (data: UpdatePackDataType) => {\r\n    setEditData(data)\r\n    openEditModal()\r\n  }\r\n  const handleDeleteCardPack = (data: PackDeleteDataType) => {\r\n    setDeleteData(data)\r\n    openDeleteModal(true)\r\n  }\r\n\r\n  return (\r\n    <TableBody>\r\n      {tableData.map(row => {\r\n        return (\r\n          <TableRow\r\n            className={s.row}\r\n            key={row._id}\r\n            hover={row.requestStatus === 'idle'}\r\n            onClick={() => handleOpenCardPack(row._id, row.requestStatus)}\r\n          >\r\n            {heads.map(h => {\r\n              return (\r\n                <TableCell key={h.id}>\r\n                  <p className={s.tableCellText}>\r\n                    {h.id === 'updated' ? dayjs(row[h.id]).format('DD.MM.YYYY') : row[h.id]}\r\n                  </p>\r\n                </TableCell>\r\n              )\r\n            })}\r\n            <PacksActionCell\r\n              isMine={row.user_id === userId}\r\n              isStudyDisabled={row.cardsCount === 0}\r\n              isAllDisabled={row.requestStatus === 'loading'}\r\n              onStudy={() => handleStudyCardPack(row._id)}\r\n              onEdit={() => handleEditCardPack({ id: row._id, name: row.name })}\r\n              onDelete={() => handleDeleteCardPack({ id: row._id, name: row.name })}\r\n            />\r\n          </TableRow>\r\n        )\r\n      })}\r\n    </TableBody>\r\n  )\r\n}\r\n","import { useLocation } from 'react-router-dom'\r\n\r\nexport const useGetSearchParams = (always?: string) => {\r\n  const location = always ? useLocation() : null\r\n  const props = always ? location?.search : window.location.toString()\r\n  const paramsArray = props?.split('?')[1]\r\n  let allParams = {} as any\r\n  //  | (PacksQueryParamsType & { cardQuestion?: string })\r\n  //  | URLSearchParamsInit\r\n  //  | ParamKeyValuePair[]\r\n\r\n  if (paramsArray) {\r\n    allParams = Object.fromEntries(\r\n      paramsArray.split('&').map(el => [el.split('=')[0], decodeURIComponent(el.split('=')[1])])\r\n    )\r\n  }\r\n\r\n  return allParams\r\n}\r\n","import { PacksQueryParamsType } from '../features/packs/packsSlice'\r\n\r\nexport const extractPacksQueryParams = (\r\n  stateQueryParams: PacksQueryParamsType,\r\n  initialQueryParams: PacksQueryParamsType\r\n) => {\r\n  let queryString = new URLSearchParams()\r\n  const arr1 = Object.entries(stateQueryParams)\r\n  const arr2 = Object.entries(initialQueryParams)\r\n\r\n  arr1.forEach((entry, i) => {\r\n    if (arr1[i][1] !== arr2[i][1]) {\r\n      queryString.append(arr1[i][0], arr1[i][1].toString())\r\n    }\r\n  })\r\n\r\n  return queryString.toString()\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"iconBtn\":\"CustomIconButton_iconBtn__Hioty\",\"studyIcon\":\"CustomIconButton_studyIcon__2QFg5\",\"editIcon\":\"CustomIconButton_editIcon__p44wL\",\"deleteIcon\":\"CustomIconButton_deleteIcon__VEem7\"};"],"names":["BackToPacks","location","useLocation","packsQueryParams","useAppSelector","state","packs","queryParams","queryString","pathname","extractPacksQueryParams","initialPacksQueryParams","className","s","to","PATH","KeyboardBackspace","CustomDeleteIconButton","tooltip","props","finalClass","title","CustomEditIconButton","CustomPagination","cards","dispatch","useAppDispatch","useSearchParams","setSearchParams","allParams","useGetSearchParams","isDataLoading","app","tableStatus","pagePacks","page","pageCards","pageCountPacks","pageCount","pageCountCards","cardsTotalCount","cardsData","packsTotalCount","cardsCount","cardPacksTotalCount","rowsPerPage","paginationCount","Math","ceil","showTablePagination","dispatchData","data","updateCardsQueryParamsTC","updatePacksQueryParamsTC","useEffect","setCardsQueryParams","setPacksQueryParams","Pagination","disabled","count","shape","color","onChange","event","TablePagination","component","labelRowsPerPage","labelDisplayedRows","onPageChange","rowsPerPageOptions","ActionsComponent","onRowsPerPageChange","e","target","value","SelectProps","CustomSearch","searchParams","initInputValue","search","cardQuestion","useState","inputValue","setInputValue","debouncedValue","delay","setDebouncedValue","timer","setTimeout","clearTimeout","useDebounce","isItWorthUpdating","delete","TextField","variant","type","autoComplete","currentTarget","TableBodySkeleton","columnsCount","rowsCount","withActions","cells","Array","fill","map","_","i","animation","height","rows","CustomTableHead","order","orderBy","heads","onSetSort","TableHead","TableRow","h","TableCell","TableSortLabel","active","id","direction","onClick","label","Box","sx","visuallyHidden","CustomModalDialog","setActive","children","stopPropagation","Close","PageTitleBlock","memo","linkToPacks","button","buttonClick","CustomButton","TableOrder","CustomStudyIconButton","Tooltip","IconButton","PacksActionCell","isMine","isStudyDisabled","isAllDisabled","onStudy","onEdit","onDelete","PacksTableBody","setEditData","openEditModal","openDeleteModal","setDeleteData","tableData","userId","profile","userData","navigate","useNavigate","handleStudyCardPack","TableBody","row","hover","requestStatus","_id","dayjs","format","user_id","name","PacksTable","status","isDataEmpty","length","serverSort","sortPacks","serverOrder","slice","tableOrderBy","tableOrder","asc","handleOpenEditModal","useCallback","Paper","TableContainer","Table","property","newServerOrder","always","window","toString","paramsArray","split","Object","fromEntries","el","decodeURIComponent","stateQueryParams","initialQueryParams","URLSearchParams","arr1","entries","arr2","forEach","entry","append"],"sourceRoot":""}