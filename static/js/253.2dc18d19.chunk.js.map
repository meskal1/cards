{"version":3,"file":"static/js/253.2dc18d19.chunk.js","mappings":"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","sources":["app/selectors.ts","webpack://cards/./src/common/components/BackToPacks/BackToPacks.module.scss?b64e","common/components/BackToPacks/BackToPacks.tsx","common/components/CustomIconButtons/CustomDeleteIconButton.tsx","common/components/CustomIconButtons/CustomEditIconButton.tsx","webpack://cards/./src/common/components/CustomPagination/CustomPagination.module.scss?ffc1","common/components/CustomPagination/CustomPagination.tsx","webpack://cards/./src/common/components/CustomSearch/CustomSearch.module.scss?5655","common/components/CustomSearch/CustomSearch.tsx","hooks/useDebounce.tsx","common/components/CustomSkeletons/TableBodySkeleton/TableBodySkeleton.tsx","webpack://cards/./src/common/components/CustomTableHead/CustomTableHead.module.scss?8448","common/components/CustomTableHead/CustomTableHead.tsx","webpack://cards/./src/common/components/ModalDialog/CustomModalDialog.module.scss?fde9","common/components/ModalDialog/CustomModalDialog.tsx","webpack://cards/./src/common/components/PageTitleBlock/PageTitleBlock.module.scss?b6a9","common/components/PageTitleBlock/PageTitleBlock.tsx","webpack://cards/./src/features/packs/Modals/DeletePack/DeletePack.module.scss?365e","features/packs/Modals/DeletePack/DeletePack.tsx","webpack://cards/./src/features/packs/Modals/EditPack/EditPack.module.scss?6d64","features/packs/Modals/EditPack/EditPack.tsx","features/packs/PacksTable/PacksTable.tsx","webpack://cards/./src/features/packs/PacksTable/PacksTable.module.scss?aefb","common/components/CustomIconButtons/CustomStudyIconButton.tsx","webpack://cards/./src/features/packs/PacksTable/PacksTableBody/PacksActionCell/PacksActionCell.module.scss?a226","features/packs/PacksTable/PacksTableBody/PacksActionCell/PacksActionCell.tsx","webpack://cards/./src/features/packs/PacksTable/PacksTableBody/PacksTableBody.module.scss?7e94","features/packs/PacksTable/PacksTableBody/PacksTableBody.tsx","webpack://cards/./src/common/components/CustomIconButtons/CustomIconButton.module.scss?e7da","webpack://cards/./src/common/styles/modalStyles/ModalStyles.module.scss?4628"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit'\r\n\r\nimport { RootStateType } from './store'\r\n\r\nconst packsTableData = (state: RootStateType) => state.packs.tableData\r\nconst cardsTableData = (state: RootStateType) => state.cards.tableData\r\nconst packUserId = (state: RootStateType) => state.cards.cardsData.packUserId\r\nconst myId = (state: RootStateType) => state.profile.userData.id\r\n\r\nexport const packsTableLength = createSelector(packsTableData, tableData => {\r\n  return tableData.length > 0\r\n})\r\n\r\nexport const cardsTableLength = createSelector(cardsTableData, tableData => {\r\n  return tableData.length > 0\r\n})\r\n\r\nexport const isMyPack = createSelector([packUserId, myId], (packUserId, myId) => {\r\n  return packUserId === myId\r\n})\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backToPacks__linkPacks\":\"BackToPacks_backToPacks__linkPacks__ez79f\",\"backToPacks__arrow\":\"BackToPacks_backToPacks__arrow__L0n+Y\"};","import { KeyboardBackspace } from '@mui/icons-material'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { PATH } from '../../../constants/routePaths.enum'\r\nimport { initialPacksQueryParams as initParams } from '../../../features/packs/packsSlice'\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { queryString } from '../../../utils/queryString'\r\nimport { useLocationNoUpdates } from '../../../utils/routerUtils'\r\n\r\nimport s from './BackToPacks.module.scss'\r\n\r\nexport const BackToPacks = () => {\r\n  const location = useLocationNoUpdates()\r\n  const packsQueryParams = useAppSelector(state => state.packs.queryParams)\r\n  const packsQueryString =\r\n    location.pathname === '/profile' ? '' : '?' + queryString(packsQueryParams, initParams)\r\n\r\n  return (\r\n    <>\r\n      <Link className={s.backToPacks__linkPacks} to={PATH.PACKS + packsQueryString}>\r\n        <KeyboardBackspace className={s.backToPacks__arrow} />\r\n        <p>back to packs list</p>\r\n      </Link>\r\n    </>\r\n  )\r\n}\r\n","import { FC } from 'react'\r\n\r\nimport { IconButton, Tooltip } from '@mui/material'\r\nimport { IconButtonProps } from '@mui/material/IconButton/IconButton'\r\n\r\nimport s from './CustomIconButton.module.scss'\r\n\r\ntype CustomStudyIconButtonPropsType = IconButtonProps & {\r\n  tooltip?: string\r\n}\r\n\r\nexport const CustomDeleteIconButton: FC<CustomStudyIconButtonPropsType> = ({\r\n  tooltip,\r\n  className,\r\n  ...props\r\n}) => {\r\n  const finalClass = `${s.iconBtn} ${className ? className : ''}`\r\n\r\n  return (\r\n    <Tooltip title={tooltip}>\r\n      <span>\r\n        <IconButton className={finalClass} {...props}>\r\n          <div className={s.deleteIcon} />\r\n        </IconButton>\r\n      </span>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { FC } from 'react'\r\n\r\nimport { IconButton, Tooltip } from '@mui/material'\r\nimport { IconButtonProps } from '@mui/material/IconButton/IconButton'\r\n\r\nimport s from './CustomIconButton.module.scss'\r\n\r\ntype CustomStudyIconButtonPropsType = IconButtonProps & {\r\n  tooltip?: string\r\n}\r\n\r\nexport const CustomEditIconButton: FC<CustomStudyIconButtonPropsType> = ({\r\n  tooltip,\r\n  className,\r\n  ...props\r\n}) => {\r\n  const finalClass = `${s.iconBtn} ${className ? className : ''}`\r\n\r\n  return (\r\n    <Tooltip title={tooltip}>\r\n      <span>\r\n        <IconButton className={finalClass} {...props}>\r\n          <div className={s.editIcon} />\r\n        </IconButton>\r\n      </span>\r\n    </Tooltip>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"paginationContainer\":\"CustomPagination_paginationContainer__0Y+sw\",\"paginationTable\":\"CustomPagination_paginationTable__htEVR\"};","import { ChangeEvent, FC, useEffect } from 'react'\r\n\r\nimport Pagination from '@mui/material/Pagination'\r\nimport TablePagination from '@mui/material/TablePagination'\r\n\r\nimport { RequestStatusType } from '../../../app/appSlice'\r\nimport { setCardsQueryParams } from '../../../features/cards/cardsSlice'\r\nimport { setPacksQueryParams } from '../../../features/packs/packsSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { getQueryParams } from '../../../utils/getQueryParams'\r\n\r\nimport s from './CustomPagination.module.scss'\r\n\r\ntype CustomPaginationType = {\r\n  cards?: boolean\r\n}\r\n\r\nexport const CustomPagination: FC<CustomPaginationType> = ({ cards }) => {\r\n  const dispatch = useAppDispatch()\r\n  const allParams = getQueryParams()\r\n  const isDataLoading = useAppSelector<RequestStatusType>(state => state.app.tableStatus)\r\n  const pagePacks = useAppSelector(state => state.packs.queryParams.page)\r\n  const pageCards = useAppSelector(state => state.cards.queryParams.page)\r\n  const pageCountPacks = useAppSelector(state => state.packs.queryParams.pageCount)\r\n  const pageCountCards = useAppSelector(state => state.cards.queryParams.pageCount)\r\n  const cardsTotalCount = useAppSelector(state => state.cards.cardsData.cardsTotalCount)\r\n  const packsTotalCount = useAppSelector(state => state.packs.cardsCount.cardPacksTotalCount)\r\n  const page = cards ? pageCards : pagePacks\r\n  const rowsPerPage = cards ? pageCountCards : pageCountPacks\r\n  const paginationCount = Math.ceil(\r\n    cards ? cardsTotalCount / pageCountCards : packsTotalCount / pageCountPacks\r\n  )\r\n  const showTablePagination = cards ? cardsTotalCount > 4 : packsTotalCount > 4\r\n\r\n  const dispatchData = (data: { [key: string]: number }) => {\r\n    if (cards) {\r\n      dispatch(setCardsQueryParams(data))\r\n    } else {\r\n      dispatch(setPacksQueryParams(data))\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event: ChangeEvent<unknown>, page: number) => dispatchData({ page })\r\n\r\n  const handleChangeRowsPerPage = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    dispatchData({ pageCount: +e.target.value })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (paginationCount && allParams.page > paginationCount) {\r\n      if (cards) {\r\n        dispatch(setCardsQueryParams({ page: paginationCount }))\r\n      } else {\r\n        dispatch(setPacksQueryParams({ page: paginationCount }))\r\n      }\r\n    }\r\n  }, [allParams])\r\n\r\n  return (\r\n    <div className={s.paginationContainer}>\r\n      {paginationCount <= 1 ? null : (\r\n        <Pagination\r\n          disabled={isDataLoading === 'loading'}\r\n          count={paginationCount}\r\n          shape=\"rounded\"\r\n          color=\"primary\"\r\n          onChange={handleChangePage}\r\n          page={page}\r\n        />\r\n      )}\r\n      {showTablePagination ? (\r\n        <TablePagination\r\n          className={s.paginationTable}\r\n          component=\"div\"\r\n          labelRowsPerPage={'show'}\r\n          labelDisplayedRows={() => `${cards ? 'cards' : 'packs'} per page`}\r\n          count={101}\r\n          page={page === -1 ? 0 : 1}\r\n          onPageChange={() => {}}\r\n          rowsPerPage={rowsPerPage}\r\n          rowsPerPageOptions={[4, 8, 12, 16, 30, 50, 100]}\r\n          ActionsComponent={() => null}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n          SelectProps={{ disabled: isDataLoading === 'loading' }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"CustomSearch_searchContainer__i+W9a\",\"search__title\":\"CustomSearch_search__title__LaF4+\",\"search__input\":\"CustomSearch_search__input__XRkjf\"};","import { useState, FC, ChangeEvent } from 'react'\r\n\r\nimport { TextField } from '@mui/material'\r\n\r\nimport { setCardsQueryParams } from '../../../features/cards/cardsSlice'\r\nimport { setPacksQueryParams } from '../../../features/packs/packsSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useDebounce } from '../../../hooks/useDebounce'\r\nimport { useEffectAfterMount } from '../../../hooks/useEffectAfterMount'\r\nimport { getQueryParams } from '../../../utils/getQueryParams'\r\n\r\nimport s from './CustomSearch.module.scss'\r\n\r\ntype CustomSearchType = {\r\n  cards?: boolean\r\n}\r\n\r\nexport const CustomSearch: FC<CustomSearchType> = ({ cards }) => {\r\n  const dispatch = useAppDispatch()\r\n  const allParams = getQueryParams()\r\n  const search = useAppSelector(state => state.packs.queryParams.search)\r\n  const cardQuestion = useAppSelector(state => state.cards.queryParams.cardQuestion)\r\n  const [inputValue, setInputValue] = useState(allParams.search || allParams.cardQuestion || '')\r\n  const debouncedValue = useDebounce(inputValue)\r\n\r\n  const handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setInputValue(e.currentTarget.value)\r\n  }\r\n\r\n  useEffectAfterMount(() => {\r\n    if (cards) {\r\n      if (cardQuestion !== inputValue) {\r\n        dispatch(setCardsQueryParams({ cardQuestion: inputValue }))\r\n      }\r\n    } else if (search !== inputValue) {\r\n      dispatch(setPacksQueryParams({ search: inputValue }))\r\n    }\r\n  }, [debouncedValue])\r\n\r\n  useEffectAfterMount(() => {\r\n    setInputValue(allParams.search || allParams.cardQuestion || '')\r\n  }, [allParams.search, allParams.cardQuestion])\r\n\r\n  useEffectAfterMount(() => {\r\n    if (!search) {\r\n      setInputValue('')\r\n    }\r\n  }, [search])\r\n\r\n  return (\r\n    <>\r\n      <div className={s.searchContainer}>\r\n        <p className={s.search__title}>search</p>\r\n        <TextField\r\n          className={s.search__input}\r\n          value={inputValue}\r\n          variant={'outlined'}\r\n          type={'search'}\r\n          autoComplete=\"off\"\r\n          onChange={handleChangeInput}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport const useDebounce = <T,>(value: T, delay?: number): T => {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 700)\r\n\r\n    return () => {\r\n      clearTimeout(timer)\r\n    }\r\n  }, [value, delay])\r\n\r\n  return debouncedValue\r\n}\r\n","import { FC } from 'react'\r\n\r\nimport { Skeleton } from '@mui/material'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableRow from '@mui/material/TableRow'\r\n\r\ntype TableSkeletonPropsType = {\r\n  columnsCount: number\r\n  rowsCount: number\r\n  withActions?: boolean\r\n}\r\n\r\nexport const TableBodySkeleton: FC<TableSkeletonPropsType> = ({\r\n  columnsCount,\r\n  rowsCount,\r\n  withActions = false,\r\n}) => {\r\n  const cells = new Array(withActions ? columnsCount + 1 : columnsCount).fill('').map((_, i) => {\r\n    return (\r\n      <TableCell key={i}>\r\n        <Skeleton animation={'pulse'} height={35} />\r\n      </TableCell>\r\n    )\r\n  })\r\n  const rows = new Array(rowsCount).fill('').map((_, i) => {\r\n    return <TableRow key={i}>{cells}</TableRow>\r\n  })\r\n\r\n  return <TableBody>{rows}</TableBody>\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableHead\":\"CustomTableHead_tableHead__wqXGD\"};","import Box from '@mui/material/Box'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport TableSortLabel from '@mui/material/TableSortLabel'\r\nimport { visuallyHidden } from '@mui/utils'\r\n\r\nimport { TableOrderType } from '../../../features/packs/PacksTable/PacksTable'\r\n\r\nimport s from './CustomTableHead.module.scss'\r\n\r\nexport type HeadType<T> = {\r\n  id: T\r\n  label: string\r\n}\r\n\r\ntype CustomTableHeadPropsType<T> = {\r\n  heads: HeadType<T>[]\r\n  order: TableOrderType\r\n  orderBy: T\r\n  onSetSort: (property: T) => void\r\n  withActions?: boolean\r\n}\r\n\r\nexport const CustomTableHead = <T extends string>({\r\n  order,\r\n  orderBy,\r\n  heads,\r\n  onSetSort,\r\n  withActions = false,\r\n}: CustomTableHeadPropsType<T>) => {\r\n  return (\r\n    <TableHead className={s.tableHead}>\r\n      <TableRow>\r\n        {heads.map(h => (\r\n          <TableCell key={h.id}>\r\n            <TableSortLabel\r\n              active={orderBy === h.id}\r\n              direction={orderBy === h.id ? order : 'asc'}\r\n              onClick={() => onSetSort(h.id)}\r\n            >\r\n              {h.label}\r\n              {orderBy === h.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        {withActions && <TableCell>Actions</TableCell>}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Modal\":\"CustomModalDialog_Modal__SpffU\",\"Modal__Active\":\"CustomModalDialog_Modal__Active__AUQMT\",\"Content\":\"CustomModalDialog_Content__ABBkh\",\"Content__Active\":\"CustomModalDialog_Content__Active__6qZH1\",\"Close\":\"CustomModalDialog_Close__-rl3E\"};","import { FC } from 'react'\r\n\r\nimport { Close } from '@mui/icons-material'\r\n\r\nimport s from './CustomModalDialog.module.scss'\r\n\r\ntype CustomModalDialogType = {\r\n  active: boolean\r\n  setActive?: (state: boolean) => void\r\n  children: JSX.Element\r\n}\r\n\r\nexport const CustomModalDialog: FC<CustomModalDialogType> = ({ active, setActive, children }) => {\r\n  const handleCloseModal = () => {\r\n    setActive && setActive(false)\r\n    document.body.style.overflow = 'unset'\r\n  }\r\n\r\n  return (\r\n    <div className={active ? `${s.Modal__Active} ${s.Modal}` : s.Modal} onClick={handleCloseModal}>\r\n      <div\r\n        className={active ? `${s.Content__Active} ${s.Content}` : s.Content}\r\n        onClick={e => e.stopPropagation()}\r\n      >\r\n        {setActive ? (\r\n          <div className={s.Close}>\r\n            <Close onClick={setActive ? () => setActive(false) : () => {}} />\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pageTitleBlockContainer\":\"PageTitleBlock_pageTitleBlockContainer__TZcWP\",\"pageTitleBlock__titleBlock\":\"PageTitleBlock_pageTitleBlock__titleBlock__-vzA3\",\"pageTitleBlock__title\":\"PageTitleBlock_pageTitleBlock__title__GUU9P\",\"pageTitleBlock__menuContainer\":\"PageTitleBlock_pageTitleBlock__menuContainer__D59ai\",\"pageTitleBlock__menuSheet\":\"PageTitleBlock_pageTitleBlock__menuSheet__PvgYo\",\"animateWidth\":\"PageTitleBlock_animateWidth__zzYdS\",\"pageTitleBlock__menu\":\"PageTitleBlock_pageTitleBlock__menu__APDTH\",\"pageTitleBlock__menuItemStyle\":\"PageTitleBlock_pageTitleBlock__menuItemStyle__9PpB-\",\"animateMenuOpen\":\"PageTitleBlock_animateMenuOpen__cBVMD\",\"disabled\":\"PageTitleBlock_disabled__q4u+q\",\"menuItem\":\"PageTitleBlock_menuItem__eXXSI\",\"portal\":\"PageTitleBlock_portal__3L+9Y\",\"portalBgColor\":\"PageTitleBlock_portalBgColor__19A-W\",\"modalsContainer\":\"PageTitleBlock_modalsContainer__Z5Bl-\"};","import { FC, memo, useState } from 'react'\r\n\r\nimport { Portal } from '@mui/base'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { isMyPack } from '../../../app/selectors'\r\nimport { PATH } from '../../../constants/routePaths.enum'\r\nimport { DeletePack } from '../../../features/packs/Modals/DeletePack/DeletePack'\r\nimport { EditPack } from '../../../features/packs/Modals/EditPack/EditPack'\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useNavigateNoUpdates } from '../../../utils/routerUtils'\r\nimport { BackToPacks } from '../BackToPacks/BackToPacks'\r\nimport { CustomButton } from '../CustomButton/CustomButton'\r\n\r\nimport s from './PageTitleBlock.module.scss'\r\n\r\ntype PageTitleBlockType = {\r\n  linkToPacks?: boolean\r\n  button: string\r\n  packDeckCover?: string | null\r\n  title: string\r\n  buttonClick: () => void\r\n}\r\n\r\nexport const PageTitleBlock: FC<PageTitleBlockType> = memo(\r\n  ({ linkToPacks, button, title, buttonClick, packDeckCover }) => {\r\n    const { id } = useParams()\r\n    const cardsTotalCount = useAppSelector(state => state.cards.cardsData.cardsTotalCount)\r\n    const isItMyPack = useAppSelector(isMyPack)\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n    const [openModals, setOpenModals] = useState<number[]>([0, 0])\r\n    const showModals = openModals.reduce((a, b) => a + b, 0)\r\n    const sendData = {\r\n      id: id as string,\r\n      name: title,\r\n      deckCover: packDeckCover ? packDeckCover : '',\r\n    }\r\n    const menuSheet = isMenuOpen ? s.pageTitleBlock__menuSheet : ''\r\n    const menuItemStyle = isMenuOpen ? s.pageTitleBlock__menuItemStyle : ''\r\n    const listStyle = `${s.menuItem} ${menuItemStyle}`\r\n    const portalStyle = isMenuOpen ? s.portal : ''\r\n    const portalStyleBg = showModals ? s.portalBgColor : ''\r\n    const navigate = useNavigateNoUpdates()\r\n\r\n    const handleClickButton = () => buttonClick()\r\n\r\n    const handleToogleMenu = () => setIsMenuOpen(!isMenuOpen)\r\n\r\n    const handleClose = () => {\r\n      setIsMenuOpen(false)\r\n      setOpenModals([0, 0])\r\n      document.body.style.overflow = 'unset'\r\n    }\r\n\r\n    const handleLearn = () => {\r\n      if (cardsTotalCount) {\r\n        navigate(PATH.LEARN + `/${id}`)\r\n      }\r\n    }\r\n\r\n    const handleEdit = () => {\r\n      setOpenModals([1, 0])\r\n      document.body.style.overflow = 'hidden'\r\n    }\r\n\r\n    const handleDelete = () => {\r\n      setOpenModals([0, 1])\r\n      document.body.style.overflow = 'hidden'\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Portal>\r\n          <div className={portalStyle || portalStyleBg} onClick={handleClose}></div>\r\n        </Portal>\r\n\r\n        <div className={s.pageTitleBlockContainer}>\r\n          {linkToPacks && <BackToPacks />}\r\n          <div className={s.pageTitleBlock__titleBlock}>\r\n            <h2 className={s.pageTitleBlock__title}>{title}</h2>\r\n            {isItMyPack && linkToPacks && (\r\n              <div className={`${s.pageTitleBlock__menuContainer} ${menuSheet}`}>\r\n                <ul className={s.pageTitleBlock__menu} onClick={handleToogleMenu}>\r\n                  <li\r\n                    className={`${listStyle} ${cardsTotalCount ? '' : s.disabled}`}\r\n                    onClick={handleLearn}\r\n                  ></li>\r\n                  <li className={listStyle} onClick={handleEdit}></li>\r\n                  <li className={listStyle} onClick={handleDelete}></li>\r\n                </ul>\r\n              </div>\r\n            )}\r\n\r\n            {button && (\r\n              <CustomButton onClick={handleClickButton}>\r\n                <p>{button}</p>\r\n              </CustomButton>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {isItMyPack && !!showModals && (\r\n          <div className={showModals ? s.modalsContainer : ''}>\r\n            {!!openModals[0] && <EditPack data={sendData} activeModal={handleClose} />}\r\n            {!!openModals[1] && <DeletePack packData={sendData} activeModal={handleClose} />}\r\n          </div>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Message\":\"DeletePack_Message__ZMEqy\",\"ButtonContainer\":\"DeletePack_ButtonContainer__bBf2V\"};","import { FC } from 'react'\r\n\r\nimport Button from '@mui/material/Button'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\n\r\nimport { PATH } from '../../../../constants/routePaths.enum'\r\nimport { useAppDispatch } from '../../../../hooks/reduxHooks'\r\nimport { clearPacksQueryParams, deletePackTC } from '../../packsSlice'\r\n\r\nimport s from './DeletePack.module.scss'\r\n\r\ntype DeletePackType = {\r\n  packData: PackDeleteDataType\r\n  activeModal: (state: boolean) => void\r\n}\r\n\r\nexport const DeletePack: FC<DeletePackType> = ({ packData, activeModal }) => {\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocation()\r\n  const navigate = useNavigate()\r\n\r\n  const handleDeletePacK = async () => {\r\n    await dispatch(deletePackTC(packData.id))\r\n    activeModal(false)\r\n    if (/cards/gi.test(location.pathname)) {\r\n      dispatch(clearPacksQueryParams())\r\n      navigate(PATH.PACKS)\r\n    }\r\n  }\r\n  const handleCloseModal = () => activeModal(false)\r\n\r\n  return (\r\n    <div>\r\n      <p className={s.Message}>\r\n        Are you sure you want to delete Pack: <b>{packData.name}</b> ?\r\n        <br />\r\n        All cards will be deleted.\r\n      </p>\r\n      <div className={s.ButtonContainer}>\r\n        <Button onClick={handleCloseModal} type={'button'} variant=\"outlined\">\r\n          Cancel\r\n        </Button>\r\n        <Button type={'button'} variant=\"contained\" onClick={handleDeletePacK} color={'error'}>\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport type PackDeleteDataType = {\r\n  id: string\r\n  name: string\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"EditPack_Container__BsIc7\",\"PackDataBlock\":\"EditPack_PackDataBlock__3v22P\",\"Submit\":\"EditPack_Submit__d2zDt\",\"Title\":\"EditPack_Title__Q2rDu\",\"Error\":\"EditPack_Error__+L0rO\",\"Error__active\":\"EditPack_Error__active__2FH7+\"};","import { ChangeEvent, FC, useState } from 'react'\r\n\r\nimport { TextField } from '@mui/material'\r\nimport Button from '@mui/material/Button'\r\nimport { useFormik } from 'formik'\r\n\r\nimport cover from '../../../../assets/img/cover.png'\r\nimport cs from '../../../../common/styles/modalStyles/ModalStyles.module.scss'\r\nimport { useAppDispatch } from '../../../../hooks/reduxHooks'\r\nimport { updatePackTC } from '../../packsSlice'\r\n\r\nimport s from './EditPack.module.scss'\r\n\r\ntype EditPackType = {\r\n  activeModal: (state: boolean) => void\r\n  data: {\r\n    id: string\r\n    name: string\r\n    deckCover: string\r\n  }\r\n}\r\n\r\ntype formikErrorType = {\r\n  name?: string\r\n}\r\n\r\nexport const EditPack: React.FC<EditPackType> = ({ data, activeModal }) => {\r\n  const dispatch = useAppDispatch()\r\n  const [errors, setErrors] = useState<formikErrorType>({ name: '' })\r\n  const [image, setImage] = useState(data.deckCover)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: data.name,\r\n    },\r\n    validate: values => {\r\n      if (!values.name) {\r\n        setErrors({ name: 'name is required' })\r\n      } else if (values.name.length > 50) {\r\n        setErrors({ name: 'name should be less then 50 characters' })\r\n      } else {\r\n        setErrors({ name: '' })\r\n      }\r\n    },\r\n    onSubmit: values => {\r\n      if (data.name !== values.name || data.deckCover !== image) {\r\n        dispatch(updatePackTC({ id: data.id, name: formik.values.name, deckCover: image }))\r\n      }\r\n      activeModal(false)\r\n      formik.resetForm()\r\n    },\r\n  })\r\n\r\n  //to be refactored as util function\r\n  const handleCoverInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files.length) {\r\n      const file = e.target.files[0]\r\n\r\n      if (file.size < 4000000 && file.type.includes('image')) {\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = () => {\r\n          const file64 = reader.result as string\r\n\r\n          setImage(file64)\r\n        }\r\n\r\n        reader.readAsDataURL(file)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={s.Container}>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className={s.PackDataBlock}>\r\n          <h3 className={s.Title}>Edit Pack</h3>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Name\"\r\n            size={'small'}\r\n            {...formik.getFieldProps('name')}\r\n          />\r\n          {\r\n            <div\r\n              className={\r\n                formik.touched.name && errors.name ? `${s.Error} ${s.Error__active}` : `${s.Error}`\r\n              }\r\n            >\r\n              {errors.name}\r\n            </div>\r\n          }\r\n\r\n          <div className={cs.ImageContainer}>\r\n            <img\r\n              src={image}\r\n              alt=\"cover\"\r\n              className={cs.Image}\r\n              onError={({ currentTarget }) => {\r\n                currentTarget.onerror = null // prevents looping\r\n                currentTarget.src = cover\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <label>\r\n            <input type=\"file\" hidden onChange={handleCoverInput} accept={'image/*'} />\r\n            <Button variant={'contained'} className={cs.FormFields} component={'span'}>\r\n              Add Pack Cover\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <div className={s.Submit}>\r\n          <Button onClick={() => activeModal(false)} type={'button'} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n          <Button disabled={errors.name ? true : false} type={'submit'} variant=\"contained\">\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import { FC, useCallback, useState } from 'react'\r\n\r\nimport { Close } from '@mui/icons-material'\r\nimport Box from '@mui/material/Box'\r\nimport Modal from '@mui/material/Modal'\r\nimport Paper from '@mui/material/Paper'\r\nimport Table from '@mui/material/Table'\r\nimport TableContainer from '@mui/material/TableContainer'\r\n\r\nimport { RequestStatusType } from '../../../app/appSlice'\r\nimport { packsTableLength } from '../../../app/selectors'\r\nimport { TableBodySkeleton } from '../../../common/components/CustomSkeletons/TableBodySkeleton/TableBodySkeleton'\r\nimport {\r\n  CustomTableHead,\r\n  HeadType,\r\n} from '../../../common/components/CustomTableHead/CustomTableHead'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { PackDeleteDataType } from '../Modals/DeletePack/DeletePack'\r\nimport { EditPack } from '../Modals/EditPack/EditPack'\r\nimport { setPacksQueryParams, SortValuesType, UpdatePackDataType } from '../packsSlice'\r\n\r\nimport s from './PacksTable.module.scss'\r\nimport { PacksTableBody } from './PacksTableBody/PacksTableBody'\r\n\r\nexport type PacksOrderByType = 'name' | 'cardsCount' | 'updated' | 'user_name'\r\nexport type ServerOrderType = '0' | '1'\r\n\r\nexport enum TableOrder {\r\n  desc = '0',\r\n  asc = '1',\r\n}\r\n\r\nexport type TableOrderType = 'asc' | 'desc'\r\n\r\nconst heads: HeadType<PacksOrderByType>[] = [\r\n  { id: 'name', label: 'Name' },\r\n  { id: 'cardsCount', label: 'Cards' },\r\n  { id: 'updated', label: 'Last Updated' },\r\n  { id: 'user_name', label: 'Created by' },\r\n]\r\n\r\ntype PacksTablePropsType = {\r\n  openDeleteModal: (state: boolean) => void\r\n  setDeleteData: (data: PackDeleteDataType) => void\r\n}\r\n\r\nexport const PacksTable: FC<PacksTablePropsType> = ({ openDeleteModal, setDeleteData }) => {\r\n  const status = useAppSelector<RequestStatusType>(state => state.app.tableStatus)\r\n  const isDataNotEmpty = useAppSelector(packsTableLength)\r\n  const serverSort = useAppSelector<SortValuesType>(state => state.packs.queryParams.sortPacks)\r\n  const pageCount = useAppSelector(state => state.packs.queryParams.pageCount)\r\n  const dispatch = useAppDispatch()\r\n  const [editData, setEditData] = useState<UpdatePackDataType>({ id: '', name: '', deckCover: '' })\r\n  const [openEditModal, setOpenEditModal] = useState(false)\r\n  const handleOpen = () => setOpenEditModal(true)\r\n  const handleClose = () => setOpenEditModal(false)\r\n\r\n  // Check current order\r\n  const serverOrder = serverSort.slice(0, 1) as ServerOrderType\r\n  const tableOrderBy = serverSort.slice(1) as PacksOrderByType\r\n  const tableOrder: TableOrderType = serverOrder === TableOrder.asc ? 'asc' : 'desc'\r\n\r\n  const handleSetSort = (property: PacksOrderByType) => {\r\n    const isAsc = tableOrderBy === property && tableOrder === 'asc'\r\n    const newOrder = isAsc ? 'desc' : 'asc'\r\n    const newServerOrder: SortValuesType = `${TableOrder[newOrder]}${property}`\r\n\r\n    dispatch(setPacksQueryParams({ sortPacks: newServerOrder }))\r\n  }\r\n\r\n  const handleOpenEditModal = useCallback(() => handleOpen(), [openEditModal])\r\n\r\n  const handleSetEditData = useCallback(\r\n    (data: UpdatePackDataType) => setEditData(data),\r\n    [setEditData]\r\n  )\r\n\r\n  console.log('RENDER TABLE isDataNotEmpty: ', isDataNotEmpty)\r\n\r\n  return (\r\n    <>\r\n      {isDataNotEmpty || status === 'loading' ? (\r\n        <Box>\r\n          <Paper>\r\n            <TableContainer>\r\n              <Table>\r\n                <CustomTableHead\r\n                  heads={heads}\r\n                  order={tableOrder}\r\n                  orderBy={tableOrderBy}\r\n                  onSetSort={handleSetSort}\r\n                  withActions={true}\r\n                />\r\n                {status === 'loading' ? (\r\n                  <TableBodySkeleton columnsCount={heads.length + 1} rowsCount={pageCount} />\r\n                ) : (\r\n                  <PacksTableBody\r\n                    heads={heads}\r\n                    openEditModal={handleOpenEditModal}\r\n                    setEditData={setEditData}\r\n                    openDeleteModal={openDeleteModal}\r\n                    setDeleteData={setDeleteData}\r\n                  />\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Box>\r\n      ) : (\r\n        <p className={s.emptyTable}>no packs found.</p>\r\n      )}\r\n      {openEditModal && (\r\n        <div>\r\n          <Modal\r\n            keepMounted\r\n            open={openEditModal}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"keep-mounted-modal-title\"\r\n            aria-describedby=\"keep-mounted-modal-description\"\r\n          >\r\n            <Box className={s.ChildrenContainer}>\r\n              <div className={s.Close}>\r\n                <Close onClick={handleClose} />\r\n              </div>\r\n              <EditPack data={editData} activeModal={setOpenEditModal} />\r\n            </Box>\r\n          </Modal>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"emptyTable\":\"PacksTable_emptyTable__QlIvF\",\"ChildrenContainer\":\"PacksTable_ChildrenContainer__EzqPD\",\"Close\":\"PacksTable_Close__yf0gl\"};","import { FC } from 'react'\r\n\r\nimport { IconButton, Tooltip } from '@mui/material'\r\nimport { IconButtonProps } from '@mui/material/IconButton/IconButton'\r\n\r\nimport s from './CustomIconButton.module.scss'\r\n\r\ntype CustomStudyIconButtonPropsType = IconButtonProps & {\r\n  tooltip?: string\r\n}\r\n\r\nexport const CustomStudyIconButton: FC<CustomStudyIconButtonPropsType> = ({\r\n  tooltip,\r\n  className,\r\n  ...props\r\n}) => {\r\n  const finalClass = `${s.iconBtn} ${className ? className : ''}`\r\n\r\n  return (\r\n    <Tooltip title={tooltip}>\r\n      <span>\r\n        <IconButton className={finalClass} {...props}>\r\n          <div className={s.studyIcon} />\r\n        </IconButton>\r\n      </span>\r\n    </Tooltip>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"span\":\"PacksActionCell_span__70aXa\"};","import { FC, MouseEvent } from 'react'\r\n\r\nimport TableCell from '@mui/material/TableCell'\r\n\r\nimport { CustomDeleteIconButton } from '../../../../../common/components/CustomIconButtons/CustomDeleteIconButton'\r\nimport { CustomEditIconButton } from '../../../../../common/components/CustomIconButtons/CustomEditIconButton'\r\nimport { CustomStudyIconButton } from '../../../../../common/components/CustomIconButtons/CustomStudyIconButton'\r\n\r\nimport s from './PacksActionCell.module.scss'\r\n\r\ntype PacksActionCellPropsType = {\r\n  isMine: boolean\r\n  isStudyDisabled: boolean\r\n  isAllDisabled: boolean\r\n  onStudy: () => void\r\n  onEdit: () => void\r\n  onDelete: () => void\r\n}\r\n\r\nexport const PacksActionCell: FC<PacksActionCellPropsType> = ({\r\n  isMine,\r\n  isStudyDisabled,\r\n  isAllDisabled,\r\n  onStudy,\r\n  onEdit,\r\n  onDelete,\r\n}) => {\r\n  const handleSpanClick = (e: MouseEvent<HTMLSpanElement>) => e.stopPropagation()\r\n\r\n  const handleStudyClick = () => onStudy()\r\n\r\n  const handleEditClick = () => onEdit()\r\n\r\n  const handleDeleteClick = () => onDelete()\r\n\r\n  return (\r\n    <TableCell>\r\n      <span className={s.span} onClick={handleSpanClick}>\r\n        <CustomStudyIconButton\r\n          onClick={handleStudyClick}\r\n          disabled={isStudyDisabled || isAllDisabled}\r\n          tooltip={'Study'}\r\n        />\r\n        {isMine && (\r\n          <CustomEditIconButton\r\n            onClick={handleEditClick}\r\n            disabled={isAllDisabled}\r\n            tooltip={'Edit'}\r\n          />\r\n        )}\r\n        {isMine && (\r\n          <CustomDeleteIconButton\r\n            onClick={handleDeleteClick}\r\n            disabled={isAllDisabled}\r\n            tooltip={'Delete'}\r\n          />\r\n        )}\r\n      </span>\r\n    </TableCell>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"PacksTableBody_row__kezyR\",\"image\":\"PacksTableBody_image__2ccks\",\"tableCellText\":\"PacksTableBody_tableCellText__G0Opy\",\"packImageWrapper\":\"PacksTableBody_packImageWrapper__igyw8\",\"packName\":\"PacksTableBody_packName__5R5ye\",\"packImage\":\"PacksTableBody_packImage__PyUN8\",\"cellContainer\":\"PacksTableBody_cellContainer__gBorm\",\"tableCell\":\"PacksTableBody_tableCell__-aqw-\"};","import { FC } from 'react'\r\n\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport dayjs from 'dayjs'\r\n\r\nimport { RequestStatusType } from '../../../../app/appSlice'\r\nimport cover from '../../../../assets/img/cover.png'\r\nimport { HeadType } from '../../../../common/components/CustomTableHead/CustomTableHead'\r\nimport { PATH } from '../../../../constants/routePaths.enum'\r\nimport { useAppDispatch, useAppSelector } from '../../../../hooks/reduxHooks'\r\nimport { useNavigateNoUpdates } from '../../../../utils/routerUtils'\r\nimport { PackDeleteDataType } from '../../Modals/DeletePack/DeletePack'\r\nimport { AppPackType, setBrokenImages, UpdatePackDataType } from '../../packsSlice'\r\nimport { PacksOrderByType } from '../PacksTable'\r\n\r\nimport { PacksActionCell } from './PacksActionCell/PacksActionCell'\r\nimport s from './PacksTableBody.module.scss'\r\n\r\ntype PacksTableBodyType = {\r\n  heads: HeadType<PacksOrderByType>[]\r\n  openEditModal: () => void\r\n  setEditData: (data: UpdatePackDataType) => void\r\n  openDeleteModal: (state: boolean) => void\r\n  setDeleteData: (data: PackDeleteDataType) => void\r\n}\r\n\r\nexport const PacksTableBody: FC<PacksTableBodyType> = ({\r\n  heads,\r\n  setEditData,\r\n  openEditModal,\r\n  openDeleteModal,\r\n  setDeleteData,\r\n}) => {\r\n  const tableData = useAppSelector<AppPackType[]>(state => state.packs.tableData)\r\n  const userId = useAppSelector(state => state.profile.userData.id)\r\n  const brokenImages = useAppSelector(state => state.packs.brokenImages)\r\n  const dispatch = useAppDispatch()\r\n  const navigate = useNavigateNoUpdates()\r\n\r\n  const handleOpenCardPack = (id: string, requestStatus: RequestStatusType) => {\r\n    if (requestStatus === 'loading') return\r\n    navigate(PATH.CARDS + `/${id}`)\r\n  }\r\n\r\n  const handleStudyCardPack = (id: string) => navigate(PATH.LEARN + `/${id}`)\r\n\r\n  const handleEditCardPack = (data: UpdatePackDataType) => {\r\n    setEditData(data)\r\n    openEditModal()\r\n  }\r\n\r\n  const handleDeleteCardPack = (data: PackDeleteDataType) => {\r\n    setDeleteData(data)\r\n    openDeleteModal(true)\r\n  }\r\n\r\n  return (\r\n    <TableBody>\r\n      {tableData.map(row => {\r\n        return (\r\n          <TableRow\r\n            className={s.row}\r\n            key={row._id}\r\n            hover={row.requestStatus === 'idle'}\r\n            onClick={() => handleOpenCardPack(row._id, row.requestStatus)}\r\n          >\r\n            {heads.map(h => {\r\n              return (\r\n                <TableCell className={s.tableCell} key={h.id}>\r\n                  <div className={`${s.cellContainer} ${s.tableCellText}`}>\r\n                    {h.id === 'name' &&\r\n                      !!row.deckCover &&\r\n                      !brokenImages.includes(row.deckCover) && (\r\n                        <div className={s.packImageWrapper}>\r\n                          <img\r\n                            src={row.deckCover ? row.deckCover : cover}\r\n                            alt=\"deckCover\"\r\n                            className={s.packImage}\r\n                            onError={({}) => {\r\n                              dispatch(setBrokenImages(row.deckCover))\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    {h.id === 'updated' ? (\r\n                      <p>{dayjs(row[h.id]).format('DD.MM.YYYY')}</p>\r\n                    ) : (\r\n                      <p\r\n                        className={\r\n                          h.id === 'name' && row.deckCover && !brokenImages.includes(row.deckCover)\r\n                            ? s.packName\r\n                            : undefined\r\n                        }\r\n                      >\r\n                        {row[h.id]}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </TableCell>\r\n              )\r\n            })}\r\n            <PacksActionCell\r\n              isMine={row.user_id === userId}\r\n              isStudyDisabled={row.cardsCount === 0}\r\n              isAllDisabled={row.requestStatus === 'loading'}\r\n              onStudy={() => handleStudyCardPack(row._id)}\r\n              onEdit={() =>\r\n                handleEditCardPack({\r\n                  id: row._id,\r\n                  name: row.name,\r\n                  deckCover: row.deckCover ? row.deckCover : '',\r\n                })\r\n              }\r\n              onDelete={() => handleDeleteCardPack({ id: row._id, name: row.name })}\r\n            />\r\n          </TableRow>\r\n        )\r\n      })}\r\n    </TableBody>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"iconBtn\":\"CustomIconButton_iconBtn__NGN0a\",\"studyIcon\":\"CustomIconButton_studyIcon__t0xPI\",\"editIcon\":\"CustomIconButton_editIcon__0Bolq\",\"deleteIcon\":\"CustomIconButton_deleteIcon__2PCCF\"};","// extracted by mini-css-extract-plugin\nexport default {\"FormFields\":\"ModalStyles_FormFields__RQgHC\",\"InputCoverPack\":\"ModalStyles_InputCoverPack__0CRU2\",\"Image\":\"ModalStyles_Image__pGZSN\",\"ImageContainer\":\"ModalStyles_ImageContainer__vMPDd\"};"],"names":["packsTableLength","createSelector","state","packs","tableData","length","cardsTableLength","cards","isMyPack","cardsData","packUserId","profile","userData","id","myId","BackToPacks","location","useLocationNoUpdates","packsQueryParams","useAppSelector","queryParams","packsQueryString","pathname","queryString","initParams","className","s","to","PATH","KeyboardBackspace","CustomDeleteIconButton","tooltip","props","finalClass","title","CustomEditIconButton","CustomPagination","dispatch","useAppDispatch","allParams","getQueryParams","isDataLoading","app","tableStatus","pagePacks","page","pageCards","pageCountPacks","pageCount","pageCountCards","cardsTotalCount","packsTotalCount","cardsCount","cardPacksTotalCount","rowsPerPage","paginationCount","Math","ceil","showTablePagination","dispatchData","data","setCardsQueryParams","setPacksQueryParams","useEffect","Pagination","disabled","count","shape","color","onChange","event","TablePagination","component","labelRowsPerPage","labelDisplayedRows","onPageChange","rowsPerPageOptions","ActionsComponent","onRowsPerPageChange","e","target","value","SelectProps","CustomSearch","search","cardQuestion","useState","inputValue","setInputValue","debouncedValue","delay","setDebouncedValue","timer","setTimeout","clearTimeout","useDebounce","useEffectAfterMount","TextField","variant","type","autoComplete","currentTarget","TableBodySkeleton","columnsCount","rowsCount","withActions","cells","Array","fill","map","_","i","animation","height","rows","CustomTableHead","order","orderBy","heads","onSetSort","TableHead","TableRow","h","TableCell","TableSortLabel","active","direction","onClick","label","Box","sx","visuallyHidden","CustomModalDialog","setActive","children","document","body","style","overflow","stopPropagation","Close","PageTitleBlock","memo","linkToPacks","button","buttonClick","packDeckCover","useParams","isItMyPack","isMenuOpen","setIsMenuOpen","openModals","setOpenModals","showModals","reduce","a","b","sendData","name","deckCover","menuSheet","menuItemStyle","listStyle","portalStyle","portalStyleBg","navigate","useNavigateNoUpdates","handleClose","Portal","CustomButton","EditPack","activeModal","DeletePack","packData","useLocation","useNavigate","handleDeletePacK","deletePackTC","test","clearPacksQueryParams","Button","errors","setErrors","image","setImage","formik","useFormik","initialValues","validate","values","onSubmit","updatePackTC","resetForm","handleSubmit","autoFocus","margin","size","getFieldProps","touched","cs","src","alt","onError","onerror","cover","hidden","files","file","includes","reader","FileReader","onload","file64","result","readAsDataURL","accept","TableOrder","CustomStudyIconButton","Tooltip","IconButton","PacksActionCell","isMine","isStudyDisabled","isAllDisabled","onStudy","onEdit","onDelete","PacksTableBody","setEditData","openEditModal","openDeleteModal","setDeleteData","userId","brokenImages","TableBody","row","hover","requestStatus","_id","setBrokenImages","dayjs","format","undefined","user_id","PacksTable","status","isDataNotEmpty","serverSort","sortPacks","editData","setOpenEditModal","serverOrder","slice","tableOrderBy","tableOrder","asc","handleOpenEditModal","useCallback","console","log","Paper","TableContainer","Table","property","newServerOrder","Modal","keepMounted","open","onClose"],"sourceRoot":""}