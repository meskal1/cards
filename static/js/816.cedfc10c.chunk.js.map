{"version":3,"file":"static/js/816.cedfc10c.chunk.js","mappings":"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","sources":["webpack://cards/./src/common/components/BackToPacks/BackToPacks.module.scss?b64e","common/components/BackToPacks/BackToPacks.tsx","webpack://cards/./src/common/components/CustomInput/CustomInput.module.scss?ad3d","common/components/CustomInput/CustomInput.tsx","../node_modules/@mui/icons-material/esm/CameraAlt.js","../node_modules/@mui/icons-material/esm/Send.js","../node_modules/@mui/icons-material/esm/BorderColor.js","webpack://cards/./src/common/components/EditableSpan/EditableSpan.module.scss?b028","common/components/EditableSpan/EditableSpan.tsx","webpack://cards/./src/features/profile/Profile.module.scss?6070","features/profile/Profile.tsx","utils/extractPacksQueryParams.ts","../node_modules/@mui/icons-material/esm/KeyboardBackspace.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backToPacks__linkPacks\":\"BackToPacks_backToPacks__linkPacks__EiQax\",\"backToPacks__arrow\":\"BackToPacks_backToPacks__arrow__AT0Eb\"};","import { KeyboardBackspace } from '@mui/icons-material'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nimport { PATH } from '../../../constants/routePaths.enum'\r\nimport { initialPacksQueryParams } from '../../../features/packs/packsSlice'\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { extractPacksQueryParams } from '../../../utils/extractPacksQueryParams'\r\n\r\nimport s from './BackToPacks.module.scss'\r\n\r\nexport const BackToPacks = () => {\r\n  const location = useLocation()\r\n  const packsQueryParams = useAppSelector(state => state.packs.queryParams)\r\n  const queryString =\r\n    location.pathname === '/profile'\r\n      ? ''\r\n      : '?' + extractPacksQueryParams(packsQueryParams, initialPacksQueryParams)\r\n\r\n  return (\r\n    <>\r\n      <Link className={s.backToPacks__linkPacks} to={PATH.PACKS + queryString}>\r\n        <KeyboardBackspace className={s.backToPacks__arrow} />\r\n        <p>back to packs list</p>\r\n      </Link>\r\n    </>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"CustomInput_input__ab1ub\"};","import { FC } from 'react'\r\n\r\nimport { TextField, TextFieldProps } from '@mui/material'\r\n\r\nimport s from './CustomInput.module.scss'\r\n\r\ntype CustomInputPropsType = TextFieldProps & {\r\n  value: string //Use our value to control input and also because value in MUI has unknown type\r\n}\r\n\r\nexport const CustomInput: FC<CustomInputPropsType> = ({ className, helperText, ...props }) => {\r\n  const finalClass = `${s.input} ${className ? className : ''}`\r\n  const errorText = helperText ? helperText : ' '\r\n\r\n  return (\r\n    <TextField\r\n      className={finalClass}\r\n      variant={props.variant || 'standard'}\r\n      type={props.type || 'text'}\r\n      fullWidth={props.fullWidth || true}\r\n      {...props}\r\n      helperText={errorText}\r\n    />\r\n  )\r\n}\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n}, \"1\")], 'CameraAlt');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 24H2v-4h20v4zM13.06 5.19l3.75 3.75L7.75 18H4v-3.75l9.06-9.06zm4.82 2.68-3.75-3.75 1.83-1.83c.39-.39 1.02-.39 1.41 0l2.34 2.34c.39.39.39 1.02 0 1.41l-1.83 1.83z\"\n}), 'BorderColor');","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"EditableSpan_inputContainer__lMUS2\",\"sendButton\":\"EditableSpan_sendButton__jrOoo\",\"userName\":\"EditableSpan_userName__9F7r3\",\"marker\":\"EditableSpan_marker__cqa21\",\"errorButton\":\"EditableSpan_errorButton__sIari\",\"animateErrorButton\":\"EditableSpan_animateErrorButton__tZoUq\"};","import { memo, useState, MouseEvent, ChangeEvent, KeyboardEvent, FC } from 'react'\r\n\r\nimport { BorderColor, Send } from '@mui/icons-material'\r\n\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { CustomInput } from '../CustomInput/CustomInput'\r\n\r\nimport s from './EditableSpan.module.scss'\r\n\r\ntype EditableSpanType = {\r\n  changeName: (name: string) => void\r\n}\r\n\r\nexport const EditableSpan: FC<EditableSpanType> = memo(({ changeName }) => {\r\n  const name = useAppSelector(state => state.profile.userData.name)\r\n  const [inputValue, setInputValue] = useState(name)\r\n  const [isInEditMode, setIsInEditMode] = useState(false)\r\n  const [errorEmptyField, setErrorEmptyField] = useState(false)\r\n  const [errorStyleButton, setErrorStyleButton] = useState('')\r\n\r\n  const handleAnimationEndError = () => {\r\n    setErrorStyleButton('')\r\n  }\r\n\r\n  const handleErrorSetNewName = () => {\r\n    if (errorEmptyField) {\r\n      setErrorStyleButton(s.errorButton)\r\n    }\r\n  }\r\n\r\n  const handleEditMode = () => {\r\n    setInputValue(inputValue.trim())\r\n    setIsInEditMode(true)\r\n  }\r\n\r\n  const handleSetNewName = (e?: MouseEvent<SVGSVGElement>) => {\r\n    e?.preventDefault()\r\n    if (inputValue.trim() === '') {\r\n      setErrorEmptyField(true)\r\n      setErrorStyleButton(s.errorButton)\r\n\r\n      return\r\n    } else {\r\n      setIsInEditMode(false)\r\n    }\r\n\r\n    if (inputValue.trim() !== name) {\r\n      changeName(inputValue.trim())\r\n    }\r\n  }\r\n\r\n  const onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.value.trim() !== '') {\r\n      setErrorEmptyField(false)\r\n    }\r\n    setInputValue(e.currentTarget.value)\r\n  }\r\n\r\n  const onBlurInput = () => {\r\n    setInputValue(name)\r\n    setIsInEditMode(false)\r\n    setErrorEmptyField(false)\r\n  }\r\n\r\n  const onKeyDownInputHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      handleSetNewName()\r\n    }\r\n\r\n    if (e.key === 'Escape') {\r\n      onBlurInput()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isInEditMode ? (\r\n        <div className={s.inputContainer}>\r\n          <CustomInput\r\n            value={inputValue}\r\n            onBlur={onBlurInput}\r\n            onKeyDown={onKeyDownInputHandler}\r\n            onChange={onChangeInputHandler}\r\n            autoFocus={true}\r\n            autoComplete={'new-password'}\r\n            error={errorEmptyField}\r\n            InputProps={{\r\n              inputProps: { style: { textAlign: 'center' } },\r\n            }}\r\n          />\r\n          <Send\r\n            className={`${s.sendButton} ${errorStyleButton}`}\r\n            onMouseDown={handleSetNewName}\r\n            onClick={handleErrorSetNewName}\r\n            onAnimationEnd={handleAnimationEndError}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <span className={s.userName}>\r\n          {name}\r\n          <BorderColor className={s.marker} onClick={handleEditMode} />\r\n        </span>\r\n      )}\r\n    </>\r\n  )\r\n})\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileContainer\":\"Profile_profileContainer__VNrHG\",\"profile__content\":\"Profile_profile__content__xZ49v\",\"profile__linkPacks\":\"Profile_profile__linkPacks__4QeLM\",\"profile__arrow\":\"Profile_profile__arrow__v9ws9\",\"profile__title\":\"Profile_profile__title__2YhVv\",\"profile__form\":\"Profile_profile__form__vTp8B\",\"profile__avatarBlock\":\"Profile_profile__avatarBlock__bobou\",\"profile__pic\":\"Profile_profile__pic__Iooyr\",\"profile__img\":\"Profile_profile__img__-of7+\",\"profile__avatarIcon\":\"Profile_profile__avatarIcon__Ygsj7\",\"profile__userName\":\"Profile_profile__userName__ewB6S\",\"profile__marker\":\"Profile_profile__marker__1kbw4\",\"profile__userEmail\":\"Profile_profile__userEmail__7uOy4\",\"profile__button\":\"Profile_profile__button__wQrHD\",\"profile__buttonIcon\":\"Profile_profile__buttonIcon__6ozQW\"};","import { useCallback, useEffect } from 'react'\r\n\r\nimport { CameraAlt } from '@mui/icons-material'\r\n\r\nimport avatarLocal from '../../assets/img/avatar.jpg'\r\nimport logout from '../../assets/img/icons/logout.svg'\r\nimport { BackToPacks } from '../../common/components/BackToPacks/BackToPacks'\r\nimport { CustomButton } from '../../common/components/CustomButton/CustomButton'\r\nimport { EditableSpan } from '../../common/components/EditableSpan/EditableSpan'\r\nimport { useAppDispatch, useAppSelector } from '../../hooks/reduxHooks'\r\nimport { logOutTC } from '../auth/authSlice'\r\nimport { clearPacksQueryParams } from '../packs/packsSlice'\r\n\r\nimport s from './Profile.module.scss'\r\nimport { newUserDataTC } from './profileSlice'\r\n\r\nexport const Profile = () => {\r\n  const dispatch = useAppDispatch()\r\n  const email = useAppSelector(state => state.profile.userData.email)\r\n  const avatar = useAppSelector(state => state.profile.userData.avatar)\r\n\r\n  const onLogOutHandler = () => {\r\n    dispatch(logOutTC())\r\n  }\r\n\r\n  const setNewAvatar = () => alert('add photo')\r\n\r\n  const changeUserName = useCallback(\r\n    (newName: string) => {\r\n      dispatch(newUserDataTC({ name: newName, avatar }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearPacksQueryParams())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={s.profileContainer}>\r\n        <BackToPacks />\r\n        <div className={s.profile__content}>\r\n          <h2 className={s.profile__title}>personal information</h2>\r\n          <div className={s.profile__avatarBlock} onClick={setNewAvatar}>\r\n            <div className={s.profile__pic}>\r\n              <img className={s.profile__img} src={avatarLocal || avatar} alt=\"avatar\" />\r\n            </div>\r\n            <CameraAlt className={s.profile__avatarIcon} />\r\n          </div>\r\n          <div className={s.profile__userName}>\r\n            <EditableSpan changeName={changeUserName} />\r\n          </div>\r\n          <p className={s.profile__userEmail}>{email}</p>\r\n          <CustomButton className={s.profile__button} onClick={onLogOutHandler}>\r\n            <img className={s.profile__buttonIcon} src={logout} alt=\"logout\" />\r\n            <p>log out</p>\r\n          </CustomButton>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { PacksQueryParamsType } from '../features/packs/packsSlice'\r\n\r\nexport const extractPacksQueryParams = (\r\n  stateQueryParams: PacksQueryParamsType,\r\n  initialQueryParams: PacksQueryParamsType\r\n) => {\r\n  let queryString = new URLSearchParams()\r\n  const arr1 = Object.entries(stateQueryParams)\r\n  const arr2 = Object.entries(initialQueryParams)\r\n\r\n  arr1.forEach((entry, i) => {\r\n    if (arr1[i][1] !== arr2[i][1]) {\r\n      queryString.append(arr1[i][0], arr1[i][1].toString())\r\n    }\r\n  })\r\n\r\n  return queryString.toString()\r\n}\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z\"\n}), 'KeyboardBackspace');"],"names":["BackToPacks","location","useLocation","packsQueryParams","useAppSelector","state","packs","queryParams","queryString","pathname","extractPacksQueryParams","initialPacksQueryParams","className","s","to","PATH","KeyboardBackspace","CustomInput","helperText","props","finalClass","errorText","TextField","variant","type","fullWidth","createSvgIcon","_jsx","cx","cy","r","d","EditableSpan","memo","changeName","name","profile","userData","useState","inputValue","setInputValue","isInEditMode","setIsInEditMode","errorEmptyField","setErrorEmptyField","errorStyleButton","setErrorStyleButton","handleSetNewName","e","preventDefault","trim","onBlurInput","value","onBlur","onKeyDown","key","onChange","currentTarget","autoFocus","autoComplete","error","InputProps","inputProps","style","textAlign","Send","onMouseDown","onClick","onAnimationEnd","BorderColor","Profile","dispatch","useAppDispatch","email","avatar","changeUserName","useCallback","newName","newUserDataTC","useEffect","clearPacksQueryParams","alert","src","avatarLocal","alt","CameraAlt","CustomButton","logOutTC","logout","stateQueryParams","initialQueryParams","URLSearchParams","arr1","Object","entries","arr2","forEach","entry","i","append","toString"],"sourceRoot":""}