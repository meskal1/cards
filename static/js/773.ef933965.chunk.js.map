{"version":3,"file":"static/js/773.ef933965.chunk.js","mappings":"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","sources":["app/selectors.ts","webpack://cards/./src/common/components/BackToPacks/BackToPacks.module.scss?b64e","common/components/BackToPacks/BackToPacks.tsx","webpack://cards/./src/common/components/CustomInput/CustomInput.module.scss?ad3d","common/components/CustomInput/CustomInput.tsx","hooks/useMediaQuery.ts","webpack://cards/./src/common/components/CustomPagination/CustomPagination.module.scss?ffc1","common/components/CustomPagination/CustomPagination.tsx","webpack://cards/./src/common/components/CustomSearch/CustomSearch.module.scss?5655","common/components/CustomSearch/CustomSearch.tsx","hooks/useDebounce.ts","webpack://cards/./src/common/components/CustomSelect/CustomSelect.module.scss?2cfc","common/components/CustomSelect/CustomSelectList/CustomSelectList.tsx","common/components/CustomSelect/CustomSelect.tsx","common/components/CustomSkeletons/TableBodySkeleton/TableBodySkeleton.tsx","webpack://cards/./src/common/components/CustomTableHead/CustomTableHead.module.scss?8448","common/components/CustomTableHead/CustomTableHead.tsx","webpack://cards/./src/features/packs/PackOwnerSwitcher/PackOwnerSwitcher.module.scss?8d33","features/packs/PackOwnerSwitcher/PackOwnerSwitcher.tsx","features/packs/PackSlider/CustomStyledSlider/CustomStyledSlider.ts","webpack://cards/./src/features/packs/PackSlider/PackSlider.module.scss?6b9a","features/packs/PackSlider/PackSlider.tsx","webpack://cards/./src/features/packs/PacksResetFilter/PacksResetFilter.module.scss?bb10","features/packs/PacksResetFilter/PacksResetFilter.tsx","webpack://cards/./src/common/components/SortTableItems/SortTableItems.module.scss?bdd7","common/components/SortTableItems/SortTableItems.tsx","webpack://cards/./src/common/components/FiltersComponent/FiltersComponent.module.scss?a7a7","common/components/FiltersComponent/FiltersComponent.tsx","webpack://cards/./src/common/components/PageTitleBlock/PageTitleBlock.module.scss?b6a9","common/components/PageTitleBlock/PageTitleBlock.tsx","webpack://cards/./src/common/components/Popups/Dialog/Dialog.module.scss?a261","common/components/Popups/Dialog/Dialog.tsx","webpack://cards/./src/common/components/Popups/FooterModal/FooterModal.module.scss?ec0a","common/components/Popups/FooterModal/FooterModal.tsx","webpack://cards/./src/common/components/Popups/HeaderModal/HeaderModal.module.scss?c1d7","common/components/Popups/HeaderModal/HeaderModal.tsx","webpack://cards/./src/common/components/Popups/MainPopup/MainPopup.module.scss?2e66","common/components/Popups/MainPopup/MainPopup.tsx","common/components/Popups/Portal/Portal.tsx","webpack://cards/./src/common/components/Popups/OverlayingPopup/OverlayingPopup.module.scss?33c8","common/components/Popups/OverlayingPopup/OverlayingPopup.tsx","webpack://cards/./src/features/packs/Modals/AddEditPack/AddEditPack.module.scss?24c7","features/packs/Modals/AddEditPack/AddEditPack.tsx","features/packs/Modals/DeletePack/DeletePack.tsx","webpack://cards/./src/features/packs/PackActionsMenu/PackActionsMenu.module.scss?9b50","features/packs/PackActionsMenu/PackActionsMenuList/PackActionsMenuList.tsx","features/packs/PackActionsMenu/PackActionsMenu.tsx","hooks/useEnterKey.ts","utils/base64Converter.ts","utils/validationSchema.ts","webpack://cards/./src/features/packs/PacksTable/PacksTableBody/PacksTableBody.module.scss?7e94"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit'\r\n\r\nimport { RootStateType } from './store'\r\n\r\nconst packsTableData = (state: RootStateType) => state.packs.tableData\r\nconst packUserId = (state: RootStateType) => state.cards.cardsData.packUserId\r\nconst myId = (state: RootStateType) => state.profile.userData.id\r\n\r\nexport const packsTableLength = createSelector(packsTableData, tableData => {\r\n  return tableData.length > 0\r\n})\r\n\r\nexport const isMyPack = createSelector([packUserId, myId], (packUserId, myId) => {\r\n  return packUserId === myId\r\n})\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backToPacks__linkPacks\":\"BackToPacks_backToPacks__linkPacks__ez79f\"};","import { Link } from 'react-router-dom'\r\n\r\nimport { PATH } from '../../../constants/routePaths.enum'\r\nimport {\r\n  getPacksTC,\r\n  initialPacksQueryParams as initParams,\r\n} from '../../../features/packs/packsSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { queryString } from '../../../utils/queryString'\r\nimport { useLocationNoUpdates } from '../../../utils/routerUtils'\r\n\r\nimport s from './BackToPacks.module.scss'\r\n\r\nexport const BackToPacks = () => {\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocationNoUpdates()\r\n  const cardsPack_id = useAppSelector(state => state.cards.queryParams.cardsPack_id)\r\n  const packsQueryParams = useAppSelector(state => state.packs.queryParams)\r\n  const packsQueryString =\r\n    location.pathname === '/profile' ? '' : '?' + queryString(packsQueryParams, initParams)\r\n  const isMyPacks = new RegExp('isMyPacks=yes').test(queryString(packsQueryParams, initParams))\r\n\r\n  const handleLink = () => {\r\n    if (location.pathname === '/cards/' + cardsPack_id && isMyPacks) {\r\n      dispatch(getPacksTC())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      className={s.backToPacks__linkPacks}\r\n      to={PATH.PACKS + packsQueryString}\r\n      onClick={handleLink}\r\n    >\r\n      Packs\r\n    </Link>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"CustomInput_input__4vgJw\"};","import { FC } from 'react'\r\n\r\nimport { TextField, TextFieldProps } from '@mui/material'\r\n\r\nimport s from './CustomInput.module.scss'\r\n\r\ntype CustomInputPropsType = TextFieldProps & {\r\n  value: string //Use our value to control input and also because value in MUI has unknown type\r\n}\r\n\r\nexport const CustomInput: FC<CustomInputPropsType> = ({ className, helperText, ...props }) => {\r\n  const finalClass = `${s.input} ${className ? className : ''}`\r\n  const errorText = helperText ? helperText : ' '\r\n\r\n  return (\r\n    <TextField\r\n      className={finalClass}\r\n      variant={props.variant || 'standard'}\r\n      type={props.type || 'text'}\r\n      fullWidth={props.fullWidth || true}\r\n      {...props}\r\n      helperText={errorText}\r\n    />\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport const useMediaQuery = (query: string): boolean => {\r\n  const getMatches = (query: string): boolean => {\r\n    // Prevents SSR issues\r\n    if (typeof window !== 'undefined') {\r\n      return window.matchMedia(query).matches\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  const [matches, setMatches] = useState<boolean>(getMatches(query))\r\n\r\n  function handleChange() {\r\n    setMatches(getMatches(query))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const matchMedia = window.matchMedia(query)\r\n\r\n    // Triggered at the first client-side load and if query changes\r\n    handleChange()\r\n\r\n    // Listen matchMedia\r\n    if (matchMedia.addListener) {\r\n      matchMedia.addListener(handleChange)\r\n    } else {\r\n      matchMedia.addEventListener('change', handleChange)\r\n    }\r\n\r\n    return () => {\r\n      if (matchMedia.removeListener) {\r\n        matchMedia.removeListener(handleChange)\r\n      } else {\r\n        matchMedia.removeEventListener('change', handleChange)\r\n      }\r\n    }\r\n  }, [query])\r\n\r\n  return matches\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"paginationContainer\":\"CustomPagination_paginationContainer__0Y+sw\",\"paginationTable\":\"CustomPagination_paginationTable__htEVR\"};","import { ChangeEvent, FC } from 'react'\r\n\r\nimport Pagination from '@mui/material/Pagination'\r\nimport TablePagination from '@mui/material/TablePagination'\r\n\r\nimport { RequestStatusType } from '../../../app/appSlice'\r\nimport { setCardsQueryParams } from '../../../features/cards/cardsSlice'\r\nimport { setPacksQueryParams } from '../../../features/packs/packsSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useMediaQuery } from '../../../hooks/useMediaQuery'\r\n\r\nimport s from './CustomPagination.module.scss'\r\n\r\ntype CustomPaginationType = {\r\n  forCards?: boolean\r\n}\r\n\r\nexport const CustomPagination: FC<CustomPaginationType> = ({ forCards = false }) => {\r\n  const dispatch = useAppDispatch()\r\n  const isDataLoading = useAppSelector<RequestStatusType>(state =>\r\n    forCards ? state.cards.status : state.packs.status\r\n  )\r\n  const pagePacks = useAppSelector(state => state.packs.queryParams.page)\r\n  const pageCards = useAppSelector(state => state.cards.queryParams.page)\r\n  const pageCountPacks = useAppSelector(state => state.packs.queryParams.pageCount)\r\n  const pageCountCards = useAppSelector(state => state.cards.queryParams.pageCount)\r\n  const cardsTotalCount = useAppSelector(state => state.cards.cardsData.cardsTotalCount)\r\n  const packsTotalCount = useAppSelector(state => state.packs.packsData.cardPacksTotalCount)\r\n  const page = forCards ? pageCards : pagePacks\r\n  const rowsPerPage = forCards ? pageCountCards : pageCountPacks\r\n  const paginationCount = Math.ceil(\r\n    forCards ? cardsTotalCount / pageCountCards : packsTotalCount / pageCountPacks\r\n  )\r\n  const showTablePagination = forCards ? cardsTotalCount > 4 : packsTotalCount > 4\r\n  const matches599 = useMediaQuery('(max-width: 599px)')\r\n  const matches472 = useMediaQuery('(max-width: 472px)')\r\n  const matches374 = useMediaQuery('(max-width: 374px)')\r\n\r\n  const dispatchData = (data: { [key: string]: number }) => {\r\n    if (forCards) {\r\n      dispatch(setCardsQueryParams(data))\r\n    } else {\r\n      dispatch(setPacksQueryParams(data))\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event: ChangeEvent<unknown>, page: number) => dispatchData({ page })\r\n\r\n  const handleChangeRowsPerPage = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    dispatchData({ pageCount: +e.target.value, page: 1 })\r\n  }\r\n\r\n  return (\r\n    <div className={s.paginationContainer}>\r\n      {paginationCount <= 1 ? null : (\r\n        <Pagination\r\n          disabled={isDataLoading === 'loading'}\r\n          count={paginationCount}\r\n          shape=\"circular\"\r\n          color=\"primary\"\r\n          onChange={handleChangePage}\r\n          page={page}\r\n          size={matches374 ? 'small' : 'medium'}\r\n          hidePrevButton={matches599}\r\n          hideNextButton={matches599}\r\n        />\r\n      )}\r\n      {showTablePagination ? (\r\n        <TablePagination\r\n          className={s.paginationTable}\r\n          component=\"div\"\r\n          labelRowsPerPage={matches472 ? '' : 'Rows per page'}\r\n          labelDisplayedRows={() => ``}\r\n          count={101}\r\n          page={page === -1 ? 0 : 1}\r\n          onPageChange={() => {}}\r\n          rowsPerPage={rowsPerPage}\r\n          rowsPerPageOptions={[4, 8, 12, 16, 30, 50, 100]}\r\n          ActionsComponent={() => null}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n          SelectProps={{ disabled: isDataLoading === 'loading' }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"CustomSearch_searchContainer__i+W9a\",\"search__placeholder\":\"CustomSearch_search__placeholder__O+aX4\",\"search__placeholderAnimate\":\"CustomSearch_search__placeholderAnimate__GVaMc\",\"search__input\":\"CustomSearch_search__input__XRkjf\"};","import { useState, FC, ChangeEvent } from 'react'\r\n\r\nimport { TextField } from '@mui/material'\r\n\r\nimport { setCardsQueryParams } from '../../../features/cards/cardsSlice'\r\nimport { setPacksQueryParams } from '../../../features/packs/packsSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useDebounce } from '../../../hooks/useDebounce'\r\nimport { useEffectAfterMount } from '../../../hooks/useEffectAfterMount'\r\nimport { getQueryParams } from '../../../utils/getQueryParams'\r\n\r\nimport s from './CustomSearch.module.scss'\r\n\r\ntype CustomSearchType = {\r\n  forCards?: boolean\r\n}\r\n\r\nexport const CustomSearch: FC<CustomSearchType> = ({ forCards = false }) => {\r\n  const dispatch = useAppDispatch()\r\n  const allParams = getQueryParams()\r\n  const search = useAppSelector(state => state.packs.queryParams.search)\r\n  const cardQuestion = useAppSelector(state => state.cards.queryParams.cardQuestion)\r\n  const [inputValue, setInputValue] = useState(allParams.search || allParams.cardQuestion || '')\r\n  const debouncedValue = useDebounce(inputValue)\r\n\r\n  const handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setInputValue(e.currentTarget.value)\r\n  }\r\n\r\n  useEffectAfterMount(() => {\r\n    if (forCards) {\r\n      if (cardQuestion !== inputValue) {\r\n        dispatch(setCardsQueryParams({ cardQuestion: inputValue }))\r\n      }\r\n    } else if (search !== inputValue) {\r\n      dispatch(setPacksQueryParams({ search: inputValue }))\r\n    }\r\n  }, [debouncedValue])\r\n\r\n  useEffectAfterMount(() => {\r\n    setInputValue(allParams.search || allParams.cardQuestion || '')\r\n  }, [allParams.search, allParams.cardQuestion])\r\n\r\n  useEffectAfterMount(() => {\r\n    if (!search) {\r\n      setInputValue('')\r\n    }\r\n  }, [search])\r\n\r\n  return (\r\n    <label className={s.searchContainer}>\r\n      <p className={`${s.search__placeholder} ${inputValue ? s.search__placeholderAnimate : ''}`}>\r\n        {forCards ? 'Search by question' : 'Search by name'}\r\n      </p>\r\n      <TextField\r\n        className={s.search__input}\r\n        value={inputValue}\r\n        variant={'outlined'}\r\n        type={'search'}\r\n        autoComplete=\"off\"\r\n        onChange={handleChangeInput}\r\n      />\r\n    </label>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport const useDebounce = <T>(value: T, delay?: number): T => {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 700)\r\n\r\n    return () => {\r\n      clearTimeout(timer)\r\n    }\r\n  }, [value, delay])\r\n\r\n  return debouncedValue\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"CustomSelect_select__fjUBm\",\"selected\":\"CustomSelect_selected__nAJle\",\"opened\":\"CustomSelect_opened__d1kj8\",\"options\":\"CustomSelect_options__6baiE\",\"optionsLeft\":\"CustomSelect_optionsLeft__GpfKK\",\"option\":\"CustomSelect_option__jHXSW\"};","import { FC, MouseEvent, MutableRefObject, useRef } from 'react'\r\n\r\nimport { useOnClickOutside } from '../../../../hooks/useOnClickOutside'\r\nimport { SelectType } from '../../SortTableItems/SortTableItems'\r\nimport s from '../CustomSelect.module.scss'\r\n\r\ntype CustomSelectListType = {\r\n  parentRef: MutableRefObject<HTMLDivElement>\r\n  positionOptions?: 'left' | 'center'\r\n  options: SelectType<string>[]\r\n  handleClickOption: (e: MouseEvent<HTMLLIElement>, id: string) => void\r\n  closeMenu: () => void\r\n}\r\n\r\nexport const CustomSelectList: FC<CustomSelectListType> = ({\r\n  parentRef,\r\n  options,\r\n  closeMenu,\r\n  handleClickOption,\r\n  positionOptions,\r\n}) => {\r\n  const listRef = useRef() as MutableRefObject<HTMLUListElement>\r\n\r\n  useOnClickOutside(closeMenu, listRef, parentRef)\r\n\r\n  return (\r\n    <ul\r\n      ref={listRef}\r\n      className={positionOptions === 'left' ? s.optionsLeft : s.options}\r\n      onClick={closeMenu}\r\n    >\r\n      {options.map((el, i) => {\r\n        return (\r\n          <li key={i} onMouseDown={e => handleClickOption(e, el.id)} className={s.option}>\r\n            {el.label}\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n","import { FC, useState, memo, MouseEvent, KeyboardEvent, useRef, MutableRefObject } from 'react'\r\n\r\nimport { useEffectAfterMount } from '../../../hooks/useEffectAfterMount'\r\nimport { SelectType } from '../SortTableItems/SortTableItems'\r\n\r\nimport s from './CustomSelect.module.scss'\r\nimport { CustomSelectList } from './CustomSelectList/CustomSelectList'\r\n\r\ntype CustomSelectType = {\r\n  positionOptions?: 'left' | 'center'\r\n  initValue: string\r\n  reset?: boolean\r\n  options: SelectType<string>[]\r\n  selectedOption: (option: string) => void\r\n}\r\n\r\nexport const CustomSelect: FC<CustomSelectType> = memo(\r\n  ({ initValue, reset = false, options, selectedOption, positionOptions = 'center' }) => {\r\n    const initSelect = options.filter(el => el.id === initValue)[0].label\r\n    const [selected, setSelected] = useState(initSelect)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const menuRef = useRef() as MutableRefObject<HTMLDivElement>\r\n\r\n    const handleClickOption = (e: MouseEvent<HTMLLIElement>, id: string) => {\r\n      setSelected(e.currentTarget.textContent!)\r\n      selectedOption(id)\r\n    }\r\n\r\n    const handleToggleSelect = () => setIsOpen(!isOpen)\r\n\r\n    const handleKeyDownSelectContainer = (e: KeyboardEvent<HTMLDivElement>) => {\r\n      if (e.key === 'Enter') {\r\n        handleToggleSelect()\r\n      }\r\n    }\r\n\r\n    useEffectAfterMount(() => {\r\n      if (reset) {\r\n        setSelected(initSelect)\r\n      }\r\n    }, [reset])\r\n\r\n    return (\r\n      <div\r\n        ref={menuRef}\r\n        className={s.select}\r\n        onClick={handleToggleSelect}\r\n        onKeyDown={handleKeyDownSelectContainer}\r\n        tabIndex={2}\r\n      >\r\n        <p className={`${s.selected} ${isOpen ? s.opened : ''}`}>{selected}</p>\r\n        {isOpen && (\r\n          <CustomSelectList\r\n            parentRef={menuRef}\r\n            positionOptions={positionOptions}\r\n            options={options}\r\n            handleClickOption={handleClickOption}\r\n            closeMenu={handleToggleSelect}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n)\r\n","import { FC } from 'react'\r\n\r\nimport { Skeleton, useMediaQuery } from '@mui/material'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableRow from '@mui/material/TableRow'\r\n\r\nimport s from '../../../../features/packs/PacksTable/PacksTableBody/PacksTableBody.module.scss'\r\nimport { useLocationNoUpdates } from '../../../../utils/routerUtils'\r\n\r\ntype TableSkeletonPropsType = {\r\n  columnsCount: number\r\n  rowsCount: number\r\n  withActions?: boolean\r\n}\r\n\r\nexport const TableBodySkeleton: FC<TableSkeletonPropsType> = ({\r\n  columnsCount,\r\n  rowsCount,\r\n  withActions = false,\r\n}) => {\r\n  const location = useLocationNoUpdates()\r\n  const isCards = new RegExp('/cards').test(location.pathname)\r\n  const matches599 = useMediaQuery('(max-width: 599px)')\r\n  const colsCountCards = isCards && matches599 ? columnsCount + 1 : columnsCount\r\n\r\n  const cells = new Array(withActions ? columnsCount + 1 : colsCountCards).fill('').map((_, i) => {\r\n    return (\r\n      <TableCell key={i} className={matches599 ? s.tablePacks__bodyCell : ''}>\r\n        <Skeleton\r\n          animation={'wave'}\r\n          height={matches599 ? 34 : 37}\r\n          variant={matches599 ? 'text' : 'rounded'}\r\n        />\r\n      </TableCell>\r\n    )\r\n  })\r\n\r\n  const rows = new Array(rowsCount).fill('').map((_, i) => {\r\n    return (\r\n      <TableRow key={i} className={matches599 ? s.tablePacks__bodyRow : ''}>\r\n        {cells}\r\n      </TableRow>\r\n    )\r\n  })\r\n\r\n  return <TableBody className={matches599 ? s.tablePacks__body : ''}>{rows}</TableBody>\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"headCellTitle\":\"CustomTableHead_headCellTitle__81uXu\",\"tablePacks__head\":\"CustomTableHead_tablePacks__head__uEZX5\",\"tablePacks__headRow\":\"CustomTableHead_tablePacks__headRow__2qhlm\",\"tablePacks__headCell\":\"CustomTableHead_tablePacks__headCell__GDWrE\",\"headCellContainer\":\"CustomTableHead_headCellContainer__mDJu8\",\"tablePacks\":\"CustomTableHead_tablePacks__urY7P\",\"actionCell\":\"CustomTableHead_actionCell__tLL0b\",\"gradeCell\":\"CustomTableHead_gradeCell__4Aig2\",\"sortArrowUp\":\"CustomTableHead_sortArrowUp__+6NuH\",\"sortArrowDown\":\"CustomTableHead_sortArrowDown__eDqKf\"};","import { FC } from 'react'\r\n\r\nimport { CardsOrderByType } from '../../../features/cards/CardsTable/CardsTable'\r\nimport { PacksOrderByType } from '../../../features/packs/PacksTable/PacksTable'\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { SortValuesType } from '../SortTableItems/SortTableItems'\r\n\r\nimport s from './CustomTableHead.module.scss'\r\n\r\nexport type TableHeadType<T> = {\r\n  id: T\r\n  label: string\r\n}\r\n\r\ntype CustomTableHeadPropsType = {\r\n  heads: TableHeadType<PacksOrderByType | CardsOrderByType>[]\r\n  forCards?: boolean\r\n  withActions?: boolean\r\n}\r\n\r\nexport const CustomTableHead: FC<CustomTableHeadPropsType> = ({\r\n  heads,\r\n  forCards = false,\r\n  withActions = false,\r\n}) => {\r\n  const serverSort = useAppSelector<SortValuesType>(state => {\r\n    return forCards ? state.cards.queryParams.sortCards : state.packs.queryParams.sortPacks\r\n  })\r\n  const serverOrder = serverSort.slice(0, 1)\r\n  const tableOrderBy = serverSort.slice(1)\r\n  const arrowOrderStyle = +serverOrder ? s.sortArrowUp : s.sortArrowDown\r\n\r\n  return (\r\n    <thead className={s.tablePacks__head}>\r\n      <tr className={s.tablePacks__headRow}>\r\n        {heads.map(el => {\r\n          return (\r\n            <th\r\n              key={el.id}\r\n              className={el.label === 'Grade' ? s.gradeCell : s.tablePacks__headCell}\r\n              scope=\"col\"\r\n            >\r\n              <div className={s.headCellContainer}>\r\n                <span\r\n                  className={`${s.headCellTitle} ${tableOrderBy === el.id ? arrowOrderStyle : ''}`}\r\n                >\r\n                  {el.label}\r\n                </span>\r\n              </div>\r\n            </th>\r\n          )\r\n        })}\r\n        <th className={withActions ? s.tablePacks__headCell : s.actionCell} scope=\"col\"></th>\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"switcherContainer\":\"PackOwnerSwitcher_switcherContainer__C-K6U\",\"switcher__title\":\"PackOwnerSwitcher_switcher__title__nhtu-\",\"switcher__block\":\"PackOwnerSwitcher_switcher__block__nfE+f\",\"switcher__blockItem\":\"PackOwnerSwitcher_switcher__blockItem__9ogFb\",\"active\":\"PackOwnerSwitcher_active__w99qF\"};","import Button from '@mui/material/Button'\r\nimport ButtonGroup from '@mui/material/ButtonGroup'\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { initialPacksQueryParams as initParams, setPacksQueryParams } from '../packsSlice'\r\n\r\nimport s from './PackOwnerSwitcher.module.scss'\r\n\r\nexport const PackOwnerSwitcher = () => {\r\n  const dispatch = useAppDispatch()\r\n  const isMyPacks = useAppSelector(state => state.packs.queryParams.isMyPacks)\r\n\r\n  const handleMyCards = () => dispatch(setPacksQueryParams({ ...initParams, isMyPacks: 'yes' }))\r\n\r\n  const handleAllCards = () => dispatch(setPacksQueryParams(initParams))\r\n\r\n  return (\r\n    <div className={s.switcherContainer}>\r\n      <p className={s.switcher__title}>Owner</p>\r\n      <ButtonGroup className={s.switcher__block} disableElevation variant=\"text\">\r\n        <Button\r\n          disabled={!!isMyPacks}\r\n          className={`${s.switcher__blockItem} ${isMyPacks ? s.active : ''}`}\r\n          onClick={handleMyCards}\r\n        >\r\n          <p>My</p>\r\n        </Button>\r\n        <Button\r\n          disabled={!isMyPacks}\r\n          className={`${s.switcher__blockItem} ${isMyPacks ? '' : s.active}`}\r\n          onClick={handleAllCards}\r\n        >\r\n          <p>All</p>\r\n        </Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  )\r\n}\r\n","import SliderUnstyled, { sliderUnstyledClasses } from '@mui/base/SliderUnstyled'\r\nimport { styled, alpha } from '@mui/system'\r\n\r\nconst blue = {\r\n  100: '#DAECFF',\r\n  200: '#99CCF3',\r\n  400: '#3399FF',\r\n  300: '#66B2FF',\r\n  500: '#007FFF',\r\n  600: '#0072E5',\r\n  900: '#003A75',\r\n}\r\n\r\nconst grey = {\r\n  50: '#f6f8fa',\r\n  100: '#eaeef2',\r\n  200: '#d0d7de',\r\n  300: '#afb8c1',\r\n  400: '#8c959f',\r\n  500: '#6e7781',\r\n  600: '#57606a',\r\n  700: '#424a53',\r\n  800: '#32383f',\r\n  900: '#24292f',\r\n}\r\n\r\nexport const StyledSlider = styled(SliderUnstyled)(\r\n  ({ theme }) => `\r\n\t color: ${theme.palette.mode === 'light' ? blue[500] : blue[300]};\r\n\t height: 6px;\r\n\t width: 100%;\r\n\t padding: 16px 0;\r\n\t display: inline-block;\r\n\t position: relative;\r\n\t cursor: pointer;\r\n\t touch-action: none;\r\n\t -webkit-tap-highlight-color: transparent;\r\n  \r\n\t &:hover {\r\n\t\topacity: 1;\r\n\t }\r\n  \r\n\t &.${sliderUnstyledClasses.disabled} { \r\n\t\tpointer-events: none;\r\n\t\tcursor: default;\r\n\t\tcolor: ${theme.palette.mode === 'light' ? grey[300] : grey[600]};\r\n\t\topacity: 0.5;\r\n\t }\r\n  \r\n\t & .${sliderUnstyledClasses.rail} {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tbackground-color: currentColor;\r\n\t\topacity: 0.4;\r\n\t }\r\n  \r\n\t & .${sliderUnstyledClasses.track} {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\theight: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tbackground-color: currentColor;\r\n\t }\r\n  \r\n\t & .${sliderUnstyledClasses.thumb} {\r\n\t\tposition: absolute;\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tmargin-left: -6px;\r\n\t\tmargin-top: -6px;\r\n\t\tbox-sizing: border-box;\r\n\t\tborder-radius: 50%;\r\n\t\toutline: 0;\r\n\t\tborder: 3px solid currentColor;\r\n\t\tbackground-color: #fff;\r\n  \r\n\t\t:hover,\r\n\t\t&.${sliderUnstyledClasses.focusVisible} {\r\n\t\t  box-shadow: 0 0 0 0.25rem ${alpha(theme.palette.mode === 'light' ? blue[400] : blue[300], 0.15)};\r\n\t\t}\r\n  \r\n\t\t&.${sliderUnstyledClasses.active} {\r\n\t\t  box-shadow: 0 0 0 0.25rem ${alpha(theme.palette.mode === 'light' ? blue[200] : blue[300], 0.3)};\r\n\t\t}\r\n\t }\r\n  \r\n\t & .${sliderUnstyledClasses.mark} {\r\n\t\tposition: absolute;\r\n\t\twidth: 4px;\r\n\t\theight: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tbackground-color: currentColor;\r\n\t\ttop: 50%;\r\n\t\topacity: 0.7;\r\n\t\ttransform: translateX(-50%);\r\n\t }\r\n  \r\n\t & .${sliderUnstyledClasses.markActive} {\r\n\t\tbackground-color: #fff;\r\n\t }\r\n  \r\n\t & .${sliderUnstyledClasses.valueLabel} {\r\n\t\tfont-family: IBM Plex Sans;\r\n\t\tfont-size: 14px;\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\ttop: -1.6em;\r\n\t\ttext-align: center;\r\n\t\ttransform: translateX(-50%);\r\n\t }\r\n  `\r\n)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sliderContainer\":\"PackSlider_sliderContainer__6gwYF\",\"slider\":\"PackSlider_slider__D06Uk\",\"slider__title\":\"PackSlider_slider__title__6u9If\",\"slider__block\":\"PackSlider_slider__block__riSPd\",\"slider__number\":\"PackSlider_slider__number__KcdYx\"};","import { useState } from 'react'\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useEffectAfterMount } from '../../../hooks/useEffectAfterMount'\r\nimport { setPacksQueryParams } from '../packsSlice'\r\n\r\nimport { StyledSlider } from './CustomStyledSlider/CustomStyledSlider'\r\nimport s from './PackSlider.module.scss'\r\n\r\nexport const PackSlider = () => {\r\n  const dispatch = useAppDispatch()\r\n  const min = useAppSelector(state => state.packs.queryParams.min)\r\n  const max = useAppSelector(state => state.packs.queryParams.max)\r\n  const minCardsCount = useAppSelector(state => state.packs.packsData.minCardsCount)\r\n  const maxCardsCount = useAppSelector(state => state.packs.packsData.maxCardsCount)\r\n  const [value, setValue] = useState<number[]>([min || minCardsCount, max || maxCardsCount])\r\n\r\n  const handleChange = (e: Event, newValue: number | number[]) => setValue(newValue as number[])\r\n\r\n  const handleMouseUp = () => {\r\n    if (value[0] !== value[1]) {\r\n      dispatch(setPacksQueryParams({ min: value[0], max: value[1] }))\r\n    }\r\n  }\r\n\r\n  useEffectAfterMount(() => {\r\n    setValue([min || minCardsCount, max || maxCardsCount])\r\n  }, [minCardsCount, maxCardsCount, min, max])\r\n\r\n  return (\r\n    <div className={s.sliderContainer}>\r\n      <p className={s.slider__title}>Amount of cards</p>\r\n      <div className={s.slider__block}>\r\n        <div className={s.slider__number}>{value[0]}</div>\r\n        <StyledSlider\r\n          className={s.slider}\r\n          value={value}\r\n          onChange={handleChange}\r\n          disableSwap\r\n          min={minCardsCount}\r\n          max={maxCardsCount}\r\n          onChangeCommitted={handleMouseUp}\r\n        />\r\n        <div className={s.slider__number}>{value[1]}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"packsResetFilter\":\"PacksResetFilter_packsResetFilter__6n1Ps\"};","import { RequestStatusType } from '../../../app/appSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { clearPacksQueryParams } from '../packsSlice'\r\n\r\nimport s from './PacksResetFilter.module.scss'\r\n\r\nexport const PacksResetFilter = () => {\r\n  const dispatch = useAppDispatch()\r\n  const isDataLoading = useAppSelector<RequestStatusType>(state => state.packs.status)\r\n\r\n  const handleResetFilter = () => {\r\n    if (isDataLoading === 'idle') {\r\n      dispatch(clearPacksQueryParams())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={s.packsResetFilter} onClick={handleResetFilter}>\r\n      Reset\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"packsSortContainer\":\"SortTableItems_packsSortContainer__W1e0h\",\"packsSortTitle\":\"SortTableItems_packsSortTitle__x2EJm\"};","import { useCallback, FC } from 'react'\r\n\r\nimport { CardsSortValuesType, setCardsQueryParams } from '../../../features/cards/cardsSlice'\r\nimport {\r\n  initialPacksQueryParams,\r\n  PacksSortValuesType,\r\n  setPacksQueryParams,\r\n} from '../../../features/packs/packsSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { queryString } from '../../../utils/queryString'\r\nimport { CustomSelect } from '../CustomSelect/CustomSelect'\r\n\r\nimport s from './SortTableItems.module.scss'\r\n\r\nexport type SortValuesType = PacksSortValuesType | CardsSortValuesType\r\n\r\nexport type SelectType<T> = {\r\n  id: T\r\n  label: string\r\n}\r\n\r\ntype SortTableItemsType = {\r\n  forCards?: boolean\r\n}\r\n\r\nconst packsOptions: SelectType<PacksSortValuesType>[] = [\r\n  { id: '0name', label: 'Pack name A-z' },\r\n  { id: '1name', label: 'Pack name Z-a' },\r\n  { id: '0user_name', label: 'Created by A-z' },\r\n  { id: '1user_name', label: 'Created by Z-a' },\r\n  { id: '1cardsCount', label: 'Cards ascending' },\r\n  { id: '0cardsCount', label: 'Cards descending' },\r\n  { id: '1updated', label: 'Older packs' },\r\n  { id: '0updated', label: 'Newer packs' },\r\n]\r\n\r\nconst cardsOptions: SelectType<CardsSortValuesType>[] = [\r\n  { id: '0question', label: 'Question A-z' },\r\n  { id: '1question', label: 'Question Z-a' },\r\n  { id: '0answer', label: 'Answer A-z' },\r\n  { id: '1answer', label: 'Answer Z-a' },\r\n  { id: '1updated', label: 'Older question' },\r\n  { id: '0updated', label: 'Newer question' },\r\n  { id: '0grade', label: 'Lower grade' },\r\n  { id: '1grade', label: 'Higher grade' },\r\n]\r\n\r\nexport const SortTableItems: FC<SortTableItemsType> = ({ forCards = false }) => {\r\n  const dispatch = useAppDispatch()\r\n  const packsQueryParams = useAppSelector(state => state.packs.queryParams)\r\n  const packsQueryString = queryString(packsQueryParams, initialPacksQueryParams)\r\n  const selectOptions = forCards ? cardsOptions : packsOptions\r\n  const canIResetSelect =\r\n    Object.keys(packsQueryString).length === 0 || packsQueryString === 'isMyPacks=yes'\r\n  const serverSort = useAppSelector<SortValuesType>(state => {\r\n    return forCards ? state.cards.queryParams.sortCards : state.packs.queryParams.sortPacks\r\n  })\r\n\r\n  const handleSetSort = useCallback((tableOrder: string) => {\r\n    if (forCards) {\r\n      dispatch(setCardsQueryParams({ sortCards: tableOrder as CardsSortValuesType }))\r\n    } else {\r\n      dispatch(setPacksQueryParams({ sortPacks: tableOrder as PacksSortValuesType }))\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className={s.packsSortContainer}>\r\n      <p className={s.packsSortTitle}>Sort items</p>\r\n      <CustomSelect\r\n        initValue={serverSort}\r\n        reset={canIResetSelect}\r\n        options={selectOptions}\r\n        selectedOption={handleSetSort}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"filtersConainer\":\"FiltersComponent_filtersConainer__9kYxJ\",\"switcherContainer\":\"FiltersComponent_switcherContainer__uVVPW\",\"overlay\":\"FiltersComponent_overlay__S0e0z\"};","import { FC, MutableRefObject, useRef } from 'react'\r\n\r\nimport { RequestStatusType } from '../../../app/appSlice'\r\nimport { PackOwnerSwitcher } from '../../../features/packs/PackOwnerSwitcher/PackOwnerSwitcher'\r\nimport { PackSlider } from '../../../features/packs/PackSlider/PackSlider'\r\nimport { PacksResetFilter } from '../../../features/packs/PacksResetFilter/PacksResetFilter'\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useEscapeKey } from '../../../hooks/useEscapeKey'\r\nimport { useOnClickOutside } from '../../../hooks/useOnClickOutside'\r\nimport { LoadingProgress } from '../LoadingProgress/LoadingProgress'\r\nimport { SortTableItems } from '../SortTableItems/SortTableItems'\r\n\r\nimport s from './FiltersComponent.module.scss'\r\n\r\ntype FiltersComponentType = {\r\n  parentRef: MutableRefObject<HTMLDivElement>\r\n  forCards?: boolean\r\n  closeMenu: () => void\r\n}\r\n\r\nexport const FiltersComponent: FC<FiltersComponentType> = ({\r\n  parentRef,\r\n  forCards = false,\r\n  closeMenu,\r\n}) => {\r\n  const packStatus = useAppSelector<RequestStatusType>(state => state.packs.status)\r\n  const cardStatus = useAppSelector<RequestStatusType>(state => state.cards.status)\r\n  const status = packStatus === 'loading' || cardStatus === 'loading'\r\n  const filtersRef = useRef() as MutableRefObject<HTMLDivElement>\r\n\r\n  useOnClickOutside(closeMenu, filtersRef, parentRef)\r\n  useEscapeKey(closeMenu)\r\n\r\n  return (\r\n    <div ref={filtersRef} className={s.filtersConainer}>\r\n      {status && (\r\n        <div className={s.overlay}>\r\n          <LoadingProgress />\r\n        </div>\r\n      )}\r\n\r\n      {forCards ? (\r\n        <SortTableItems forCards />\r\n      ) : (\r\n        <>\r\n          <SortTableItems />\r\n          <PackSlider />\r\n          <div className={s.switcherContainer}>\r\n            <PackOwnerSwitcher />\r\n            <PacksResetFilter />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pageTitleBlockContainer\":\"PageTitleBlock_pageTitleBlockContainer__TZcWP\",\"pageTitleBlock__content\":\"PageTitleBlock_pageTitleBlock__content__XAXrx\",\"pageTitleBlock__titleBlock\":\"PageTitleBlock_pageTitleBlock__titleBlock__-vzA3\",\"pageTitleBlock__title\":\"PageTitleBlock_pageTitleBlock__title__GUU9P\",\"filterButtonContainer\":\"PageTitleBlock_filterButtonContainer__9WveT\",\"filterButton\":\"PageTitleBlock_filterButton__b0oO6\",\"learnButton\":\"PageTitleBlock_learnButton__LWmxa\",\"addButton\":\"PageTitleBlock_addButton__VUmnx\"};","import { FC, memo, useState, useRef, MutableRefObject } from 'react'\r\n\r\nimport { isMyPack } from '../../../app/selectors'\r\nimport { PackActionsMenu } from '../../../features/packs/PackActionsMenu/PackActionsMenu'\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useLocationNoUpdates } from '../../../utils/routerUtils'\r\nimport { BackToPacks } from '../BackToPacks/BackToPacks'\r\nimport { CustomButton } from '../CustomButton/CustomButton'\r\nimport { FiltersComponent } from '../FiltersComponent/FiltersComponent'\r\n\r\nimport s from './PageTitleBlock.module.scss'\r\n\r\ntype PageTitleBlockType = {\r\n  linkToPacks?: boolean\r\n  hasButtons?: boolean\r\n  title?: string\r\n  buttonClick: () => void\r\n}\r\n\r\nexport const PageTitleBlock: FC<PageTitleBlockType> = memo(\r\n  ({ linkToPacks = false, hasButtons = true, title = 'Packs list', buttonClick }) => {\r\n    const location = useLocationNoUpdates()\r\n    const packID = location.pathname.split('/cards/')[1]\r\n    const isTableNotEmpty = useAppSelector(state => state.cards.cardsData.cardsTotalCount)\r\n    const isItMyPack = useAppSelector(isMyPack)\r\n    const [isFilterOpen, setIsFilterOpen] = useState(false)\r\n    const isCards = new RegExp('/cards').test(location.pathname)\r\n    const menuRef = useRef() as MutableRefObject<HTMLDivElement>\r\n    const buttonName = isCards ? `${isItMyPack ? 'Add new card' : 'Learn to pack'}` : 'Add new pack'\r\n\r\n    const handleToggleFilter = () => setIsFilterOpen(prevState => !prevState)\r\n\r\n    return (\r\n      <div className={s.pageTitleBlockContainer}>\r\n        {linkToPacks && <BackToPacks />}\r\n        <div className={s.pageTitleBlock__content}>\r\n          <div className={s.pageTitleBlock__titleBlock}>\r\n            <h2 className={s.pageTitleBlock__title}>{title}</h2>\r\n\r\n            {isItMyPack && (\r\n              <PackActionsMenu\r\n                packID={packID as string}\r\n                packName={title}\r\n                packIsEmpty={!!isTableNotEmpty}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {hasButtons && (\r\n            <>\r\n              <div className={s.filterButtonContainer}>\r\n                <div ref={menuRef}>\r\n                  {isFilterOpen && (\r\n                    <FiltersComponent\r\n                      parentRef={menuRef}\r\n                      closeMenu={handleToggleFilter}\r\n                      forCards={linkToPacks}\r\n                    />\r\n                  )}\r\n                  <CustomButton className={s.filterButton} onClick={handleToggleFilter}>\r\n                    <p>Add filter</p>\r\n                  </CustomButton>\r\n                </div>\r\n              </div>\r\n\r\n              <CustomButton\r\n                className={buttonName === 'Learn to pack' ? s.learnButton : s.addButton}\r\n                onClick={buttonClick}\r\n              >\r\n                <p>{buttonName}</p>\r\n              </CustomButton>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Dialog_container__DW96z\"};","import { FC, ReactNode } from 'react'\r\n\r\nimport { FooterModal } from '../FooterModal/FooterModal'\r\nimport { HeaderModal } from '../HeaderModal/HeaderModal'\r\nimport { OverlayingPopup } from '../OverlayingPopup/OverlayingPopup'\r\n\r\nimport s from './Dialog.module.scss'\r\n\r\ntype DialogType = {\r\n  title: string\r\n  primaryColor?: 'white' | 'red' | 'blue'\r\n  onOkButtonText?: string\r\n  onCloseButtonText?: string\r\n  children: ReactNode\r\n  onOk: () => void\r\n  isOpened: boolean\r\n  onClose: () => void\r\n}\r\n\r\nexport const Dialog: FC<DialogType> = ({\r\n  title,\r\n  primaryColor,\r\n  onOkButtonText,\r\n  children,\r\n  onOk,\r\n  onCloseButtonText,\r\n  isOpened,\r\n  onClose,\r\n}) => {\r\n  return (\r\n    <OverlayingPopup isOpened={isOpened} onClose={onClose}>\r\n      <div className={s.container}>\r\n        <HeaderModal title={title} onClose={onClose} />\r\n        {children}\r\n        <FooterModal\r\n          primaryColor={primaryColor}\r\n          primaryButtonText={onOkButtonText}\r\n          primaryButtonOnClick={onOk}\r\n          secondaryButtonText={onCloseButtonText}\r\n          secondaryButtonOnClick={onClose}\r\n        />\r\n      </div>\r\n    </OverlayingPopup>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FooterModal_container__37l3S\",\"colorWhite\":\"FooterModal_colorWhite__Af0Aj\",\"colorBlue\":\"FooterModal_colorBlue__1iAqa\",\"colorRed\":\"FooterModal_colorRed__+WSZh\",\"secondaryButton\":\"FooterModal_secondaryButton__+cjjb\"};","import { FC } from 'react'\r\n\r\nimport { RequestStatusType } from '../../../../app/appSlice'\r\nimport { useAppSelector } from '../../../../hooks/reduxHooks'\r\nimport { CustomButton } from '../../CustomButton/CustomButton'\r\n\r\nimport s from './FooterModal.module.scss'\r\n\r\ntype FooterModalType = {\r\n  primaryColor?: 'white' | 'red' | 'blue'\r\n  primaryButtonText?: string\r\n  primaryButtonOnClick: () => void\r\n  secondaryButtonText?: string\r\n  secondaryButtonOnClick: () => void\r\n}\r\n\r\nexport const FooterModal: FC<FooterModalType> = ({\r\n  primaryColor,\r\n  primaryButtonText = 'Submit',\r\n  primaryButtonOnClick,\r\n  secondaryButtonText = 'Cancel',\r\n  secondaryButtonOnClick,\r\n}) => {\r\n  const packsStatus = useAppSelector<RequestStatusType>(state => state.packs.status)\r\n  const cardsStatus = useAppSelector<RequestStatusType>(state => state.cards.status)\r\n  const disableButtons = packsStatus === 'loading' || cardsStatus === 'loading'\r\n  let primaryButtonColor = s.colorWhite\r\n\r\n  switch (primaryColor) {\r\n    case 'white':\r\n      primaryButtonColor = s.colorWhite\r\n      break\r\n    case 'red':\r\n      primaryButtonColor = s.colorRed\r\n      break\r\n    case 'blue':\r\n      primaryButtonColor = s.colorBlue\r\n      break\r\n    default:\r\n      primaryButtonColor = s.colorWhite\r\n  }\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <CustomButton\r\n        disabled={disableButtons}\r\n        className={s.secondaryButton}\r\n        onClick={secondaryButtonOnClick}\r\n      >\r\n        {secondaryButtonText}\r\n      </CustomButton>\r\n      <CustomButton\r\n        disabled={disableButtons}\r\n        className={primaryButtonColor}\r\n        onClick={primaryButtonOnClick}\r\n      >\r\n        {primaryButtonText}\r\n      </CustomButton>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"conteiner\":\"HeaderModal_conteiner__F54+d\",\"title\":\"HeaderModal_title__zNIL3\",\"button\":\"HeaderModal_button__qYEyN\"};","import { FC, KeyboardEvent } from 'react'\r\n\r\nimport s from './HeaderModal.module.scss'\r\n\r\ntype HeaderModalType = {\r\n  title: string\r\n  onClose: () => void\r\n}\r\n\r\nexport const HeaderModal: FC<HeaderModalType> = ({ title, onClose }) => {\r\n  const handleKeyDown = (e: KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.key === 'Enter') {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={s.conteiner}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      <div\r\n        className={s.button}\r\n        onClick={onClose}\r\n        onKeyDown={handleKeyDown}\r\n        role=\"button\"\r\n        tabIndex={1}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MainPopup_container__39hXy\"};","import { FC, ReactNode } from 'react'\r\n\r\nimport { FooterModal } from '../FooterModal/FooterModal'\r\nimport { HeaderModal } from '../HeaderModal/HeaderModal'\r\nimport { OverlayingPopup } from '../OverlayingPopup/OverlayingPopup'\r\n\r\nimport s from './MainPopup.module.scss'\r\n\r\ntype MainPopupType = {\r\n  title: string\r\n  className?: string\r\n  onOkButtonText?: string\r\n  onCloseButtonText?: string\r\n  onOk: () => void\r\n  children: ReactNode\r\n  isOpened: boolean\r\n  onClose: () => void\r\n}\r\n\r\nexport const MainPopup: FC<MainPopupType> = ({\r\n  title,\r\n  className,\r\n  onOkButtonText,\r\n  onOk,\r\n  onCloseButtonText,\r\n  children,\r\n  isOpened,\r\n  onClose,\r\n}) => {\r\n  return (\r\n    <OverlayingPopup isOpened={isOpened} onClose={onClose}>\r\n      <div className={`${s.container} ${className || ''}`}>\r\n        <HeaderModal title={title} onClose={onClose} />\r\n        {children}\r\n        <FooterModal\r\n          primaryButtonText={onOkButtonText}\r\n          primaryButtonOnClick={onOk}\r\n          secondaryButtonText={onCloseButtonText}\r\n          secondaryButtonOnClick={onClose}\r\n        />\r\n      </div>\r\n    </OverlayingPopup>\r\n  )\r\n}\r\n","import { FC, useState, useEffect, ReactNode } from 'react'\r\n\r\nimport { createPortal } from 'react-dom'\r\n\r\nimport './Portal.scss'\r\n\r\ntype PortalType = {\r\n  children: ReactNode\r\n}\r\n\r\nexport const Portal: FC<PortalType> = ({ children }) => {\r\n  const [container] = useState(() => document.createElement('div'))\r\n\r\n  container.className = 'portal'\r\n\r\n  useEffect(() => {\r\n    document.body.appendChild(container)\r\n    document.body.style.overflow = 'hidden'\r\n\r\n    return () => {\r\n      document.body.removeChild(container)\r\n      document.body.removeAttribute('style')\r\n    }\r\n  }, [])\r\n\r\n  return createPortal(children, container)\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"OverlayingPopup_container__C54HS\",\"overlay\":\"OverlayingPopup_overlay__FoBLb\",\"focusLock\":\"OverlayingPopup_focusLock__x0o6U\"};","import { ReactNode, FC } from 'react'\r\n\r\nimport FocusLock from 'react-focus-lock'\r\n\r\nimport { useEscapeKey } from '../../../../hooks/useEscapeKey'\r\nimport { Portal } from '../Portal/Portal'\r\n\r\nimport s from './OverlayingPopup.module.scss'\r\n\r\ntype OverlayingPopupType = {\r\n  children: ReactNode\r\n  isOpened: boolean\r\n  onClose: () => void\r\n}\r\n\r\nexport const OverlayingPopup: FC<OverlayingPopupType> = ({ children, isOpened, onClose }) => {\r\n  if (!isOpened) {\r\n    return null\r\n  }\r\n\r\n  useEscapeKey(onClose)\r\n\r\n  return (\r\n    <Portal>\r\n      <FocusLock disabled={false} className={s.focusLock}>\r\n        <div className={s.container} role=\"dialog\">\r\n          <div className={s.overlay} role=\"button\" onClick={onClose} />\r\n          {children}\r\n        </div>\r\n      </FocusLock>\r\n    </Portal>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"addImageBlock\":\"AddEditPack_addImageBlock__3hNpf\",\"privateAndRemoveContainer\":\"AddEditPack_privateAndRemoveContainer__65YpO\",\"removeImageButton\":\"AddEditPack_removeImageButton__eh3Xe\",\"dargOver\":\"AddEditPack_dargOver__ParJA\",\"addImageBlockTitle\":\"AddEditPack_addImageBlockTitle__VoEKH\",\"hidden\":\"AddEditPack_hidden__iGEWg\",\"imageContainer\":\"AddEditPack_imageContainer__orTuf\",\"image\":\"AddEditPack_image__g+KO5\",\"checkbox\":\"AddEditPack_checkbox__B+BMM\"};","import {\r\n  FC,\r\n  ChangeEvent,\r\n  useState,\r\n  MutableRefObject,\r\n  useEffect,\r\n  useRef,\r\n  DragEvent,\r\n  KeyboardEvent,\r\n  memo,\r\n} from 'react'\r\n\r\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked'\r\nimport TaskAltIcon from '@mui/icons-material/TaskAlt'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport { useFormik } from 'formik'\r\nimport isBase64 from 'is-base64'\r\n\r\nimport { CustomInput } from '../../../../common/components/CustomInput/CustomInput'\r\nimport { MainPopup } from '../../../../common/components/Popups/MainPopup/MainPopup'\r\nimport { useAppDispatch, useAppSelector } from '../../../../hooks/reduxHooks'\r\nimport { base64Converter } from '../../../../utils/base64Converter'\r\nimport { useLocationNoUpdates } from '../../../../utils/routerUtils'\r\nimport { validateImage, validationSchemaNewPackText } from '../../../../utils/validationSchema'\r\nimport { setCardsData } from '../../../cards/cardsSlice'\r\nimport { addPackTC, UpdatePackDataType, updatePackTC } from '../../packsSlice'\r\n\r\nimport s from './AddEditPack.module.scss'\r\n\r\ntype AddEditPackType = {\r\n  isOpened: boolean\r\n  onClose: () => void\r\n  packData?: UpdatePackDataType\r\n}\r\n\r\nexport const AddEditPack: FC<AddEditPackType> = memo(({ isOpened, onClose, packData }) => {\r\n  const location = useLocationNoUpdates()\r\n  const isCards = new RegExp('/cards').test(location.pathname)\r\n  const dispatch = useAppDispatch()\r\n  const cardsData = useAppSelector(state => state.cards.cardsData)\r\n  const isItPrivate = isCards ? cardsData.packPrivate : packData?.private\r\n  const validImg = isBase64(packData?.deckCover || '', { mimeRequired: true })\r\n  const [base64image, setBase64image] = useState(validImg ? packData?.deckCover : '')\r\n  const [fileImage, setFileImage] = useState<File | null>(null)\r\n  const [dragOver, setDragOver] = useState(false)\r\n  const nameRef = useRef() as MutableRefObject<HTMLInputElement>\r\n  const validateData = {\r\n    size: fileImage?.size || 0,\r\n    type: fileImage?.type || '',\r\n    isImageExist: !!base64image,\r\n  }\r\n  const initialValues = {\r\n    deckCover: '',\r\n    name: packData?.name || '',\r\n    private: isItPrivate || false,\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: validationSchemaNewPackText,\r\n    validate: () => validateImage(validateData),\r\n    onSubmit: values => {\r\n      const deckCover = fileImage || base64image ? base64image : ' '\r\n      const nameChanged = values.name !== initialValues.name\r\n      const privateChanged = values.private !== initialValues.private\r\n      const data = { ...cardsData, packPrivate: values.private, packDeckCover: deckCover || '' }\r\n\r\n      if (packData && (fileImage || nameChanged || privateChanged || (validImg && !base64image))) {\r\n        if (isCards) {\r\n          dispatch(setCardsData(data))\r\n        }\r\n        dispatch(updatePackTC({ ...values, id: packData?.id || '', deckCover }))\r\n      }\r\n\r\n      if (!packData) {\r\n        dispatch(addPackTC({ ...values, deckCover: base64image }))\r\n      }\r\n      onClose()\r\n    },\r\n  })\r\n\r\n  const handleFileUpload = async (e: ChangeEvent<any> | DragEvent<HTMLLabelElement>) => {\r\n    e.preventDefault()\r\n    try {\r\n      if ('files' in e.target && e.target.files) {\r\n        setFileImage(e.target.files[0])\r\n      } else if ('dataTransfer' in e) {\r\n        setFileImage(e.dataTransfer.files[0])\r\n      }\r\n      const base64 = (await base64Converter(e)) as string\r\n\r\n      formik.setFieldValue('deckCover', ' ')\r\n      formik.setTouched({ ...formik.touched, deckCover: true })\r\n      setBase64image(base64)\r\n    } catch (e) {\r\n      console.log('Error File Upload: ', e)\r\n    }\r\n  }\r\n\r\n  const handleLabelDragOver = (e: DragEvent<HTMLLabelElement>) => {\r\n    e.preventDefault()\r\n    setDragOver(true)\r\n  }\r\n\r\n  const handleFieldKeyDown = (e: KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.key === 'Enter') {\r\n      formik.handleSubmit()\r\n    }\r\n  }\r\n\r\n  const handleRemoveImage = () => {\r\n    setBase64image('')\r\n    setFileImage(null)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => nameRef?.current?.focus(), 50)\r\n  }, [])\r\n\r\n  return (\r\n    <MainPopup\r\n      title={packData ? 'Edit pack' : 'Add new pack'}\r\n      onOkButtonText={packData ? 'Update' : 'Create'}\r\n      onOk={formik.handleSubmit}\r\n      isOpened={isOpened}\r\n      onClose={onClose}\r\n    >\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <CustomInput\r\n          inputRef={nameRef}\r\n          label=\"Name\"\r\n          autoComplete=\"new-password\"\r\n          error={formik.touched.name && !!formik.errors.name}\r\n          helperText={formik.touched.name && formik.errors.name}\r\n          onKeyDown={handleFieldKeyDown}\r\n          {...formik.getFieldProps('name')}\r\n        />\r\n\r\n        <label\r\n          className={`${s.addImageBlock} ${dragOver ? s.dargOver : ''}`}\r\n          onDragOver={handleLabelDragOver}\r\n          onDragLeave={() => setDragOver(false)}\r\n          onDrop={handleFileUpload}\r\n        >\r\n          <p className={s.addImageBlockTitle}>\r\n            Drag your image here or click to upload.\r\n            <br />\r\n            File size should be less than 100kb\r\n          </p>\r\n          <CustomInput\r\n            type={'file'}\r\n            inputProps={{ accept: '.jpg,.jpeg,.gif,.png,.webp,.svg' }}\r\n            className={s.hidden}\r\n            error={formik.touched.deckCover && !!formik.errors.deckCover}\r\n            helperText={formik.touched.deckCover && formik.errors.deckCover}\r\n            {...formik.getFieldProps('deckCover')}\r\n            value={''}\r\n            onChange={handleFileUpload}\r\n          />\r\n          {!!base64image && (\r\n            <div className={s.imageContainer}>\r\n              <img src={base64image} alt=\"cover\" className={s.image} />\r\n            </div>\r\n          )}\r\n        </label>\r\n\r\n        <div className={s.privateAndRemoveContainer}>\r\n          <label className={s.checkbox}>\r\n            <Checkbox\r\n              size=\"medium\"\r\n              style={formik.values.private ? { color: '#1B79CE ' } : { color: 'grey ' }}\r\n              checked={formik.values.private}\r\n              icon={<RadioButtonUncheckedIcon />}\r\n              checkedIcon={<TaskAltIcon />}\r\n              {...formik.getFieldProps('private')}\r\n            />\r\n            Private\r\n          </label>\r\n\r\n          {base64image && (\r\n            <div className={s.removeImageButton} onClick={handleRemoveImage}>\r\n              Remove\r\n            </div>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </MainPopup>\r\n  )\r\n})\r\n","import { FC } from 'react'\r\n\r\nimport { Dialog } from '../../../../common/components/Popups/Dialog/Dialog'\r\nimport { PATH } from '../../../../constants/routePaths.enum'\r\nimport { useAppDispatch, useAppSelector } from '../../../../hooks/reduxHooks'\r\nimport { useEnterKey } from '../../../../hooks/useEnterKey'\r\nimport { queryString } from '../../../../utils/queryString'\r\nimport { useLocationNoUpdates, useNavigateNoUpdates } from '../../../../utils/routerUtils'\r\nimport { deletePackTC, initialPacksQueryParams } from '../../packsSlice'\r\n\r\nexport type PackDeleteDataType = {\r\n  id: string\r\n  name: string\r\n}\r\n\r\ntype DeletePackType = {\r\n  packData: PackDeleteDataType\r\n  isOpened: boolean\r\n  onClose: () => void\r\n}\r\n\r\nexport const DeletePack: FC<DeletePackType> = ({ isOpened, onClose, packData }) => {\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocationNoUpdates()\r\n  const navigate = useNavigateNoUpdates()\r\n  const packsQueryParams = useAppSelector(state => state.packs.queryParams)\r\n  const packsQueryString = queryString(packsQueryParams, initialPacksQueryParams)\r\n  const isItMyPacks = new RegExp('isMyPacks=yes').test(packsQueryString)\r\n  const queryParams = isItMyPacks ? '?isMyPacks=yes' : '?' + packsQueryString\r\n\r\n  const handleDeletePack = async () => {\r\n    await dispatch(deletePackTC(packData.id))\r\n\r\n    if (/cards/gi.test(location.pathname)) {\r\n      navigate(PATH.PACKS + queryParams)\r\n    }\r\n    onClose()\r\n  }\r\n\r\n  useEnterKey(handleDeletePack)\r\n\r\n  return (\r\n    <Dialog\r\n      title={'Delete pack'}\r\n      primaryColor={'red'}\r\n      onOkButtonText={'Delete'}\r\n      onOk={handleDeletePack}\r\n      isOpened={isOpened}\r\n      onClose={onClose}\r\n    >\r\n      <span>\r\n        Are you sure you want to delete Pack: <b>{packData.name}</b>? <br />\r\n        All cards will be deleted.\r\n      </span>\r\n    </Dialog>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"menuContainer\":\"PackActionsMenu_menuContainer__H97fe\",\"menu\":\"PackActionsMenu_menu__NWrWg\",\"openMenuRight\":\"PackActionsMenu_openMenuRight__mq36c\",\"openMenuLeft\":\"PackActionsMenu_openMenuLeft__pXSMK\",\"animateWidth\":\"PackActionsMenu_animateWidth__zF-TY\",\"openItemRight\":\"PackActionsMenu_openItemRight__OXx92\",\"openToRight\":\"PackActionsMenu_openToRight__rkHZM\",\"openItemLeft\":\"PackActionsMenu_openItemLeft__M6Ej2\",\"openToLeft\":\"PackActionsMenu_openToLeft__daenw\",\"disableLearn\":\"PackActionsMenu_disableLearn__n5Ffq\",\"menuItem\":\"PackActionsMenu_menuItem__O2h4E\"};","import { FC, MutableRefObject, useRef } from 'react'\r\n\r\nimport { useEscapeKey } from '../../../../hooks/useEscapeKey'\r\nimport { useOnClickOutside } from '../../../../hooks/useOnClickOutside'\r\nimport s from '../PackActionsMenu.module.scss'\r\n\r\ntype PackActionsMenuListType = {\r\n  parentRef: MutableRefObject<HTMLDivElement>\r\n  handleLearn: () => void\r\n  handleEdit: () => void\r\n  handleDelete: () => void\r\n  closeMenu: () => void\r\n  packIsEmpty: boolean\r\n  openToLeft: boolean\r\n}\r\n\r\nexport const PackActionsMenuList: FC<PackActionsMenuListType> = ({\r\n  parentRef,\r\n  handleLearn,\r\n  handleEdit,\r\n  handleDelete,\r\n  closeMenu,\r\n  packIsEmpty,\r\n  openToLeft,\r\n}) => {\r\n  const listStyle = `${s.menuItem} ${openToLeft ? s.openItemLeft : s.openItemRight}`\r\n  const listRef = useRef() as MutableRefObject<HTMLUListElement>\r\n\r\n  useOnClickOutside(closeMenu, listRef, parentRef)\r\n  useEscapeKey(closeMenu)\r\n\r\n  return (\r\n    <ul ref={listRef} className={s.menu} onClick={closeMenu}>\r\n      <li\r\n        className={`${listStyle} ${packIsEmpty ? '' : s.disableLearn}`}\r\n        onMouseDown={handleLearn}\r\n      ></li>\r\n      <li className={listStyle} onMouseDown={handleEdit}></li>\r\n      <li className={listStyle} onMouseDown={handleDelete}></li>\r\n    </ul>\r\n  )\r\n}\r\n","import { FC, useState, MutableRefObject, useRef } from 'react'\r\n\r\nimport { PATH } from '../../../constants/routePaths.enum'\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport { useNavigateNoUpdates } from '../../../utils/routerUtils'\r\nimport { AddEditPack } from '../Modals/AddEditPack/AddEditPack'\r\nimport { DeletePack } from '../Modals/DeletePack/DeletePack'\r\n\r\nimport s from './PackActionsMenu.module.scss'\r\nimport { PackActionsMenuList } from './PackActionsMenuList/PackActionsMenuList'\r\n\r\ntype PackActionsMenuType = {\r\n  deckCover?: string\r\n  isPrivate?: boolean\r\n  openToLeft?: boolean\r\n  packID: string\r\n  packName: string\r\n  packIsEmpty: boolean\r\n}\r\n\r\nexport const PackActionsMenu: FC<PackActionsMenuType> = ({\r\n  deckCover,\r\n  isPrivate = false,\r\n  openToLeft = false,\r\n  packID,\r\n  packName,\r\n  packIsEmpty,\r\n}) => {\r\n  const packDeckCover = useAppSelector<string | null>(state => state.cards.cardsData.packDeckCover)\r\n  const navigate = useNavigateNoUpdates()\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n  const menuSheet = isMenuOpen ? `${openToLeft ? s.openMenuLeft : s.openMenuRight}` : ''\r\n  const initOpenModals = {\r\n    deleteOpened: false,\r\n    editOpened: false,\r\n  }\r\n  const [modals, setModals] = useState<typeof initOpenModals>(initOpenModals)\r\n  const menuRef = useRef() as MutableRefObject<HTMLDivElement>\r\n  const sendData = {\r\n    id: packID,\r\n    private: isPrivate || false,\r\n    name: packName,\r\n    deckCover: deckCover || packDeckCover || '',\r\n  }\r\n\r\n  const handleToogleMenu = () => setIsMenuOpen(!isMenuOpen)\r\n\r\n  const handleCloseModal = () => setModals(initOpenModals)\r\n\r\n  const handleToggleEditModal = () => setModals({ ...modals, editOpened: !modals.editOpened })\r\n\r\n  const handleToggleDeleteModal = () => setModals({ ...modals, deleteOpened: !modals.deleteOpened })\r\n\r\n  const handleLearn = () => {\r\n    if (packIsEmpty) {\r\n      navigate(PATH.LEARN + `/${packID}`)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {modals.editOpened && (\r\n        <AddEditPack isOpened={modals.editOpened} onClose={handleCloseModal} packData={sendData} />\r\n      )}\r\n\r\n      {modals.deleteOpened && (\r\n        <DeletePack isOpened={modals.deleteOpened} onClose={handleCloseModal} packData={sendData} />\r\n      )}\r\n\r\n      <div\r\n        ref={menuRef}\r\n        className={`${s.menuContainer} ${menuSheet}`}\r\n        onMouseDown={handleToogleMenu}\r\n      >\r\n        {isMenuOpen && (\r\n          <PackActionsMenuList\r\n            parentRef={menuRef}\r\n            handleLearn={handleLearn}\r\n            handleEdit={handleToggleEditModal}\r\n            handleDelete={handleToggleDeleteModal}\r\n            closeMenu={handleToogleMenu}\r\n            packIsEmpty={packIsEmpty}\r\n            openToLeft={openToLeft}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useCallback, useEffect } from 'react'\r\n\r\nexport const useEnterKey = (handleClose: () => void) => {\r\n  const handleEnterKey = useCallback(\r\n    (e: KeyboardEvent) => {\r\n      if (e.key === 'Enter') {\r\n        handleClose()\r\n      }\r\n    },\r\n    [handleClose]\r\n  )\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keyup', handleEnterKey, false)\r\n\r\n    return () => {\r\n      document.removeEventListener('keyup', handleEnterKey, false)\r\n    }\r\n  }, [handleEnterKey])\r\n}\r\n","import { ChangeEvent, DragEvent } from 'react'\r\n\r\nexport const base64Converter = async (e: any) => {\r\n  const files = e.target.files || e.dataTransfer.files\r\n\r\n  if (files && files.length && files[0].size < 100000 && files[0].type.includes('image')) {\r\n    const reader = new FileReader()\r\n\r\n    reader.readAsDataURL(files[0])\r\n    const data = await new Promise((resolve, reject) => {\r\n      reader.onload = () => resolve(reader.result)\r\n      reader.onerror = error => reject(error)\r\n    })\r\n\r\n    return data\r\n  }\r\n}\r\n","import * as yup from 'yup'\r\n\r\nconst name = yup.string().required('Required')\r\nconst avatar = name\r\nconst email = yup.string().email('Enter a valid email').required('Email is required')\r\nconst password = yup\r\n  .string()\r\n  .min(8, 'Password must contain at least 8 characters')\r\n  .required('Enter your password')\r\nconst confirmPassword = yup\r\n  .string()\r\n  .oneOf([yup.ref('password')], 'Password does not match')\r\n  .required('Confirm your password')\r\nconst rememberMe = yup.boolean()\r\nconst question = yup\r\n  .string()\r\n  .max(100, 'Question should be less then 100 characters')\r\n  .required('Question is required')\r\nconst answer = yup\r\n  .string()\r\n  .max(100, 'Answer should be less then 100 characters')\r\n  .required('Answer is required')\r\nconst packName = yup\r\n  .string()\r\n  .max(100, 'Name should be less then 100 characters')\r\n  .required('Pack name is required')\r\n\r\nexport const validationSchemaLogin = yup.object({ email, password, rememberMe })\r\n\r\nexport const validationSchemaRegistration = yup.object({ email, password, confirmPassword })\r\n\r\nexport const validationSchemaProfile = yup.object({ name, avatar })\r\n\r\nexport const validationSchemaNewPassword = yup.object({ password })\r\n\r\nexport const validationSchemaForgotPassword = yup.object({ email })\r\n\r\nexport const validationSchemaNewCardText = yup.object({ question, answer })\r\n\r\nexport const validationSchemaNewPackText = yup.object({ name: packName })\r\n\r\nexport const validateImage = (imgData: ValidateImageType) => {\r\n  const formats = ['image/jpeg', 'image/png', 'image/jpg', 'image/gif', 'image/webp', 'image/svg']\r\n  const error: { questionImg?: string; deckCover?: string } = {}\r\n\r\n  if (imgData.selectedItem && !imgData.size && !imgData.isImageExist) {\r\n    error.questionImg = 'Question image is required'\r\n\r\n    return error\r\n  }\r\n\r\n  if (imgData.type && !new RegExp(imgData.type, 'gi').test(formats.join(','))) {\r\n    error.questionImg = 'Unsupported file format'\r\n    error.deckCover = 'Unsupported file format'\r\n\r\n    return error\r\n  }\r\n\r\n  if (imgData.size && imgData.size > 100000) {\r\n    error.questionImg = 'File size is more than 100kb'\r\n    error.deckCover = 'File size is more than 100kb'\r\n\r\n    return error\r\n  }\r\n\r\n  return error\r\n}\r\n\r\ntype ValidateImageType = {\r\n  size: number\r\n  type: string\r\n  selectedItem?: boolean\r\n  isImageExist: boolean\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"packImageWrapper\":\"PacksTableBody_packImageWrapper__igyw8\",\"packName\":\"PacksTableBody_packName__5R5ye\",\"packNameAdaptive\":\"PacksTableBody_packNameAdaptive__UmHCp\",\"packImage\":\"PacksTableBody_packImage__PyUN8\",\"tablePacks__body\":\"PacksTableBody_tablePacks__body__ukNlG\",\"tablePacks__bodyRow\":\"PacksTableBody_tablePacks__bodyRow__Indab\",\"tablePacks__bodyCell\":\"PacksTableBody_tablePacks__bodyCell__DSqMF\",\"tablePacks__bodyCellTitle\":\"PacksTableBody_tablePacks__bodyCellTitle__CJvep\",\"tablePacks__bodyCellContent\":\"PacksTableBody_tablePacks__bodyCellContent__plP0T\",\"linkToLearnActive\":\"PacksTableBody_linkToLearnActive__Q5gph\",\"linkToLearnDisabled\":\"PacksTableBody_linkToLearnDisabled__bLr6a\"};"],"names":["packsTableLength","createSelector","state","packs","tableData","length","isMyPack","cards","cardsData","packUserId","profile","userData","id","myId","BackToPacks","dispatch","useAppDispatch","location","useLocationNoUpdates","cardsPack_id","useAppSelector","queryParams","packsQueryParams","packsQueryString","pathname","queryString","initParams","isMyPacks","RegExp","test","className","s","to","PATH","onClick","getPacksTC","CustomInput","helperText","props","finalClass","errorText","TextField","variant","type","fullWidth","useMediaQuery","query","getMatches","window","matchMedia","matches","useState","setMatches","handleChange","useEffect","addListener","addEventListener","removeListener","removeEventListener","CustomPagination","forCards","isDataLoading","status","pagePacks","page","pageCards","pageCountPacks","pageCount","pageCountCards","cardsTotalCount","packsTotalCount","packsData","cardPacksTotalCount","rowsPerPage","paginationCount","Math","ceil","showTablePagination","matches599","matches472","matches374","dispatchData","data","setCardsQueryParams","setPacksQueryParams","Pagination","disabled","count","shape","color","onChange","event","size","hidePrevButton","hideNextButton","TablePagination","component","labelRowsPerPage","labelDisplayedRows","onPageChange","rowsPerPageOptions","ActionsComponent","onRowsPerPageChange","e","target","value","SelectProps","CustomSearch","allParams","getQueryParams","search","cardQuestion","inputValue","setInputValue","debouncedValue","delay","setDebouncedValue","timer","setTimeout","clearTimeout","useDebounce","useEffectAfterMount","autoComplete","currentTarget","CustomSelectList","parentRef","options","closeMenu","handleClickOption","positionOptions","listRef","useRef","useOnClickOutside","ref","map","el","i","onMouseDown","label","CustomSelect","memo","initValue","reset","selectedOption","initSelect","filter","selected","setSelected","isOpen","setIsOpen","menuRef","handleToggleSelect","onKeyDown","key","tabIndex","textContent","TableBodySkeleton","columnsCount","rowsCount","withActions","isCards","cells","Array","fill","_","animation","height","rows","CustomTableHead","heads","serverSort","sortCards","sortPacks","serverOrder","slice","tableOrderBy","arrowOrderStyle","scope","PackOwnerSwitcher","ButtonGroup","disableElevation","Button","blue","grey","StyledSlider","styled","SliderUnstyled","theme","palette","mode","sliderUnstyledClasses","alpha","PackSlider","min","max","minCardsCount","maxCardsCount","setValue","newValue","disableSwap","onChangeCommitted","PacksResetFilter","clearPacksQueryParams","packsOptions","cardsOptions","SortTableItems","initialPacksQueryParams","selectOptions","canIResetSelect","Object","keys","handleSetSort","useCallback","tableOrder","FiltersComponent","packStatus","cardStatus","filtersRef","useEscapeKey","LoadingProgress","PageTitleBlock","linkToPacks","hasButtons","title","buttonClick","packID","split","isTableNotEmpty","isItMyPack","isFilterOpen","setIsFilterOpen","buttonName","handleToggleFilter","prevState","PackActionsMenu","packName","packIsEmpty","CustomButton","Dialog","primaryColor","onOkButtonText","children","onOk","onCloseButtonText","isOpened","onClose","OverlayingPopup","HeaderModal","FooterModal","primaryButtonText","primaryButtonOnClick","secondaryButtonText","secondaryButtonOnClick","packsStatus","cardsStatus","disableButtons","primaryButtonColor","role","MainPopup","Portal","document","createElement","container","body","appendChild","style","overflow","removeChild","removeAttribute","createPortal","AddEditPack","packData","isItPrivate","packPrivate","private","validImg","isBase64","deckCover","mimeRequired","base64image","setBase64image","fileImage","setFileImage","dragOver","setDragOver","nameRef","validateData","isImageExist","initialValues","name","formik","useFormik","validationSchema","validationSchemaNewPackText","validate","validateImage","onSubmit","values","nameChanged","privateChanged","packDeckCover","setCardsData","updatePackTC","addPackTC","handleFileUpload","preventDefault","files","dataTransfer","base64Converter","base64","setFieldValue","setTouched","touched","console","log","current","focus","handleSubmit","inputRef","error","errors","getFieldProps","onDragOver","onDragLeave","onDrop","inputProps","accept","src","alt","Checkbox","checked","icon","RadioButtonUnchecked","checkedIcon","TaskAlt","DeletePack","navigate","useNavigateNoUpdates","handleDeletePack","deletePackTC","useEnterKey","PackActionsMenuList","handleLearn","handleEdit","handleDelete","openToLeft","listStyle","isPrivate","isMenuOpen","setIsMenuOpen","menuSheet","initOpenModals","deleteOpened","editOpened","modals","setModals","sendData","handleToogleMenu","handleCloseModal","handleClose","handleEnterKey","includes","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","result","onerror","yup","required","avatar","email","password","confirmPassword","oneOf","rememberMe","question","answer","validationSchemaLogin","validationSchemaRegistration","validationSchemaNewPassword","validationSchemaForgotPassword","validationSchemaNewCardText","imgData","selectedItem","join","questionImg"],"sourceRoot":""}