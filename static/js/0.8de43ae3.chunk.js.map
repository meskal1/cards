{"version":3,"file":"static/js/0.8de43ae3.chunk.js","mappings":"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","sources":["webpack://cards/./src/features/packs/Packs.module.scss?6c4b","webpack://cards/./src/features/packs/PacksTable/PacksTable.module.scss?aefb","features/packs/PacksTable/PacksTableBody/PacksTableBody.tsx","features/packs/PacksTable/PacksTable.tsx","features/packs/Packs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"packsContainer\":\"Packs_packsContainer__inpxZ\",\"packs__controlBlock\":\"Packs_packs__controlBlock__t1mOy\"};","// extracted by mini-css-extract-plugin\nexport default {\"emptyTableTitle\":\"PacksTable_emptyTableTitle__qAzq6\",\"ChildrenContainer\":\"PacksTable_ChildrenContainer__EzqPD\",\"Close\":\"PacksTable_Close__yf0gl\",\"tablePacks\":\"PacksTable_tablePacks__NKytf\"};","import { FC } from 'react'\r\n\r\nimport dayjs from 'dayjs'\r\nimport isBase64 from 'is-base64'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { RequestStatusType } from '../../../../app/appSlice'\r\nimport { TableHeadType } from '../../../../common/components/CustomTableHead/CustomTableHead'\r\nimport { PATH } from '../../../../constants/routePaths.enum'\r\nimport { useAppSelector } from '../../../../hooks/useAppSelector'\r\nimport { cutSpaces } from '../../../../utils/cutSpaces'\r\nimport { useNavigateNoUpdates } from '../../../../utils/routerUtils'\r\nimport { PackActionsMenu } from '../../PackActionsMenu/PackActionsMenu'\r\nimport { AppPackType } from '../../packsSlice'\r\nimport { PacksOrderByType } from '../PacksTable'\r\n\r\nimport s from './PacksTableBody.module.scss'\r\n\r\ntype PacksTableBodyType = {\r\n  heads: TableHeadType<PacksOrderByType>[]\r\n}\r\n\r\nexport const PacksTableBody: FC<PacksTableBodyType> = ({ heads }) => {\r\n  const tableData = useAppSelector<AppPackType[]>(state => state.packs.tableData)\r\n  const userId = useAppSelector(state => state.profile.userData.id)\r\n  const navigate = useNavigateNoUpdates()\r\n\r\n  const handleOpenCardPack = (id: string, requestStatus: RequestStatusType) => {\r\n    if (requestStatus === 'loading') return\r\n    navigate(PATH.CARDS + `/${id}`)\r\n  }\r\n\r\n  return (\r\n    <tbody className={s.tablePacks__body}>\r\n      {tableData.map(row => {\r\n        return (\r\n          <tr key={row._id} className={s.tablePacks__bodyRow}>\r\n            {heads.map((h, i) => {\r\n              const validImg = isBase64(row.deckCover, { mimeRequired: true })\r\n\r\n              return (\r\n                <td\r\n                  className={s.tablePacks__bodyCell}\r\n                  scope=\"row\"\r\n                  key={h.id}\r\n                  onClick={() => handleOpenCardPack(row._id, row.requestStatus)}\r\n                >\r\n                  <div className={s.tablePacks__bodyCellContent}>\r\n                    <div className={s.tablePacks__bodyCellTitle}>\r\n                      {i === 0 ? row[h.id] : h.label}\r\n                    </div>\r\n\r\n                    {h.id === 'name' && validImg && (\r\n                      <div className={s.packImageWrapper}>\r\n                        <img src={row.deckCover} alt=\"deckCover\" className={s.packImage} />\r\n                      </div>\r\n                    )}\r\n\r\n                    <p\r\n                      className={`${s.packNameAdaptive} ${\r\n                        h.id === 'name' && validImg ? s.packName : ''\r\n                      }`}\r\n                    >\r\n                      {h.id === 'updated'\r\n                        ? dayjs(row[h.id]).format('DD.MM.YYYY')\r\n                        : cutSpaces(row[h.id] + '')}\r\n                    </p>\r\n                  </div>\r\n                </td>\r\n              )\r\n            })}\r\n            <td className={s.tablePacks__bodyCell}>\r\n              {userId === row.more_id ? (\r\n                <PackActionsMenu\r\n                  deckCover={row.deckCover}\r\n                  isPrivate={row.private}\r\n                  packID={row._id as string}\r\n                  packName={row.name}\r\n                  openToLeft\r\n                  packIsEmpty={!!row.cardsCount}\r\n                />\r\n              ) : (\r\n                <Link\r\n                  className={row.cardsCount === 0 ? s.linkToLearnDisabled : s.linkToLearnActive}\r\n                  to={PATH.LEARN + `/${row._id}`}\r\n                />\r\n              )}\r\n            </td>\r\n          </tr>\r\n        )\r\n      })}\r\n    </tbody>\r\n  )\r\n}\r\n","import { RequestStatusType } from '../../../app/appSlice'\r\nimport { TableBodySkeleton } from '../../../common/components/CustomSkeletons/TableBodySkeleton/TableBodySkeleton'\r\nimport {\r\n  CustomTableHead,\r\n  TableHeadType,\r\n} from '../../../common/components/CustomTableHead/CustomTableHead'\r\nimport { useAppSelector } from '../../../hooks/useAppSelector'\r\n\r\nimport s from './PacksTable.module.scss'\r\nimport { PacksTableBody } from './PacksTableBody/PacksTableBody'\r\n\r\nexport type PacksOrderByType = 'name' | 'cardsCount' | 'updated' | 'user_name'\r\n\r\nconst heads: TableHeadType<PacksOrderByType>[] = [\r\n  { id: 'name', label: 'Name' },\r\n  { id: 'user_name', label: 'Created by' },\r\n  { id: 'cardsCount', label: 'Cards' },\r\n  { id: 'updated', label: 'Last updated' },\r\n]\r\n\r\nexport const PacksTable = () => {\r\n  const status = useAppSelector<RequestStatusType>(state => state.packs.status)\r\n  const isTableNotEmpty = useAppSelector(state => state.packs.tableData.length > 0)\r\n  const pageCount = useAppSelector(state => state.packs.queryParams.pageCount)\r\n\r\n  return (\r\n    <>\r\n      {isTableNotEmpty || status === 'loading' ? (\r\n        <table className={s.tablePacks}>\r\n          <CustomTableHead heads={heads} withActions />\r\n          {status === 'loading' ? (\r\n            <TableBodySkeleton columnsCount={heads.length + 1} rowsCount={pageCount} />\r\n          ) : (\r\n            <PacksTableBody heads={heads} />\r\n          )}\r\n        </table>\r\n      ) : (\r\n        <p className={s.emptyTableTitle}>No packs found.</p>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { CustomPagination } from '../../common/components/CustomPagination/CustomPagination'\r\nimport { CustomSearch } from '../../common/components/CustomSearch/CustomSearch'\r\nimport { PageTitleBlock } from '../../common/components/PageTitleBlock/PageTitleBlock'\r\nimport { useAppDispatch } from '../../hooks/useAppDispatch'\r\nimport { getQueryParams } from '../../utils/getQueryParams'\r\n\r\nimport { AddEditPack } from './Modals/AddEditPack/AddEditPack'\r\nimport s from './Packs.module.scss'\r\nimport { getPacksTC } from './packsSlice'\r\nimport { PacksTable } from './PacksTable/PacksTable'\r\n\r\nexport const Packs = () => {\r\n  const dispatch = useAppDispatch()\r\n  const allParams = getQueryParams()\r\n  const [openModal, setOpenModal] = useState(false)\r\n\r\n  const handleToggleModal = useCallback(() => setOpenModal(!openModal), [openModal])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(allParams).length === 0) {\r\n      dispatch(getPacksTC())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className={s.packsContainer}>\r\n      <div className={s.packs__controlBlock}>\r\n        <PageTitleBlock buttonClick={handleToggleModal} />\r\n        <CustomSearch />\r\n      </div>\r\n      <PacksTable />\r\n      <CustomPagination />\r\n\r\n      {openModal && <AddEditPack isOpened={openModal} onClose={handleToggleModal} />}\r\n    </div>\r\n  )\r\n}\r\n"],"names":["PacksTableBody","heads","tableData","useAppSelector","state","packs","userId","profile","userData","id","navigate","useNavigateNoUpdates","className","s","map","row","h","i","validImg","isBase64","deckCover","mimeRequired","scope","onClick","_id","requestStatus","PATH","label","src","alt","dayjs","format","cutSpaces","more_id","PackActionsMenu","isPrivate","private","packID","packName","name","openToLeft","packIsEmpty","cardsCount","to","PacksTable","status","isTableNotEmpty","length","pageCount","queryParams","CustomTableHead","withActions","TableBodySkeleton","columnsCount","rowsCount","Packs","dispatch","useAppDispatch","allParams","getQueryParams","useState","openModal","setOpenModal","handleToggleModal","useCallback","useEffect","Object","keys","getPacksTC","PageTitleBlock","buttonClick","CustomSearch","CustomPagination","AddEditPack","isOpened","onClose"],"sourceRoot":""}