{"version":3,"file":"static/js/285.83fbaba5.chunk.js","mappings":"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","sources":["webpack://cards/./src/common/components/BackToPacks/BackToPacks.module.scss?b64e","common/components/BackToPacks/BackToPacks.tsx","webpack://cards/./src/common/components/CustomInput/CustomInput.module.scss?ad3d","common/components/CustomInput/CustomInput.tsx","webpack://cards/./src/common/components/EditableSpan/EditableSpan.module.scss?b028","common/components/EditableSpan/EditableSpan.tsx","webpack://cards/./src/features/profile/Profile.module.scss?6070","features/profile/Profile.tsx","utils/base64Converter.ts","utils/cutSpaces.ts","utils/validationSchema.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backToPacks__linkPacks\":\"BackToPacks_backToPacks__linkPacks__ez79f\"};","import { Link } from 'react-router-dom'\r\n\r\nimport { PATH } from '../../../constants/routePaths.enum'\r\nimport {\r\n  getPacksTC,\r\n  initialPacksQueryParams as initParams,\r\n} from '../../../features/packs/packsSlice'\r\nimport { useAppDispatch } from '../../../hooks/useAppDispatch'\r\nimport { useAppSelector } from '../../../hooks/useAppSelector'\r\nimport { queryString } from '../../../utils/queryString'\r\nimport { useLocationNoUpdates } from '../../../utils/routerUtils'\r\n\r\nimport s from './BackToPacks.module.scss'\r\n\r\nexport const BackToPacks = () => {\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocationNoUpdates()\r\n  const cardsPack_id = useAppSelector(state => state.cards.queryParams.cardsPack_id)\r\n  const packsQueryParams = useAppSelector(state => state.packs.queryParams)\r\n  const packsQueryString =\r\n    location.pathname === '/profile' ? '' : '?' + queryString(packsQueryParams, initParams)\r\n  const isMyPacks = new RegExp('isMyPacks=yes').test(queryString(packsQueryParams, initParams))\r\n\r\n  const handleLink = () => {\r\n    if (location.pathname === '/cards/' + cardsPack_id && isMyPacks) {\r\n      dispatch(getPacksTC())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      className={s.backToPacks__linkPacks}\r\n      to={PATH.PACKS + packsQueryString}\r\n      onClick={handleLink}\r\n    >\r\n      Packs\r\n    </Link>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"CustomInput_input__4vgJw\"};","import { FC } from 'react'\r\n\r\nimport { TextField, TextFieldProps } from '@mui/material'\r\n\r\nimport s from './CustomInput.module.scss'\r\n\r\ntype CustomInputPropsType = TextFieldProps & {\r\n  value: string //Use our value to control input and also because value in MUI has unknown type\r\n}\r\n\r\nexport const CustomInput: FC<CustomInputPropsType> = ({ className, helperText, ...props }) => {\r\n  const finalClass = `${s.input} ${className ? className : ''}`\r\n  const errorText = helperText || ' '\r\n\r\n  return (\r\n    <TextField\r\n      className={finalClass}\r\n      variant={props.variant || 'standard'}\r\n      type={props.type || 'text'}\r\n      fullWidth={props.fullWidth || true}\r\n      {...props}\r\n      helperText={errorText}\r\n    />\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"EditableSpan_inputContainer__iMl27\",\"sendButton\":\"EditableSpan_sendButton__jZgQo\",\"userName\":\"EditableSpan_userName__kgfOm\",\"marker\":\"EditableSpan_marker__jy8nl\",\"errorButton\":\"EditableSpan_errorButton__JDJG1\",\"animateErrorButton\":\"EditableSpan_animateErrorButton__3smvd\"};","import { memo, useState, MouseEvent, ChangeEvent, KeyboardEvent, FC } from 'react'\r\n\r\nimport { useAppSelector } from '../../../hooks/useAppSelector'\r\nimport { cutSpaces } from '../../../utils/cutSpaces'\r\nimport { CustomInput } from '../CustomInput/CustomInput'\r\n\r\nimport s from './EditableSpan.module.scss'\r\n\r\ntype EditableSpanType = {\r\n  changeName: (name: string) => void\r\n}\r\n\r\nexport const EditableSpan: FC<EditableSpanType> = memo(({ changeName }) => {\r\n  const name = useAppSelector(state => state.profile.userData.name)\r\n  const [inputValue, setInputValue] = useState(name ? name : '')\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [errorEmptyField, setErrorEmptyField] = useState(false)\r\n  const [errorStyleButton, setErrorStyleButton] = useState('')\r\n\r\n  const handleAnimationEndError = () => setErrorStyleButton('')\r\n\r\n  const handleErrorSetNewName = () => {\r\n    if (errorEmptyField) {\r\n      setErrorStyleButton(s.errorButton)\r\n    }\r\n  }\r\n\r\n  const handleEditMode = () => {\r\n    setInputValue(cutSpaces(inputValue))\r\n    setEditMode(true)\r\n  }\r\n\r\n  const handleSetNewName = (e?: MouseEvent<HTMLDivElement>) => {\r\n    e?.preventDefault()\r\n    if (cutSpaces(inputValue) === '' || inputValue.length > 50) {\r\n      setErrorEmptyField(true)\r\n      setErrorStyleButton(s.errorButton)\r\n\r\n      return\r\n    } else {\r\n      setEditMode(false)\r\n    }\r\n\r\n    if (cutSpaces(inputValue) !== name) {\r\n      changeName(cutSpaces(inputValue))\r\n    }\r\n  }\r\n\r\n  const onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (cutSpaces(e.currentTarget.value) !== '') {\r\n      setErrorEmptyField(false)\r\n    }\r\n\r\n    setInputValue(e.currentTarget.value)\r\n  }\r\n\r\n  const onBlurInput = () => {\r\n    setInputValue(name ? name : '')\r\n    setEditMode(false)\r\n    setErrorEmptyField(false)\r\n  }\r\n\r\n  const onKeyDownInputHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      handleSetNewName()\r\n    }\r\n\r\n    if (e.key === 'Escape') {\r\n      onBlurInput()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {editMode ? (\r\n        <div className={s.inputContainer}>\r\n          <CustomInput\r\n            value={inputValue}\r\n            onBlur={onBlurInput}\r\n            onKeyDown={onKeyDownInputHandler}\r\n            onChange={onChangeInputHandler}\r\n            autoFocus={true}\r\n            autoComplete={'new-password'}\r\n            error={errorEmptyField || inputValue.length > 50}\r\n            helperText={inputValue.length > 50 ? 'Name should be less then 50 characters' : ''}\r\n            InputProps={{\r\n              inputProps: { style: { textAlign: 'center' } },\r\n            }}\r\n          />\r\n          <div\r\n            className={`${s.sendButton} ${errorStyleButton}`}\r\n            onMouseDown={handleSetNewName}\r\n            onClick={handleErrorSetNewName}\r\n            onAnimationEnd={handleAnimationEndError}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <span className={s.userName}>{name}</span>\r\n          <div className={s.marker} onClick={handleEditMode} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n})\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileContainer\":\"Profile_profileContainer__TQBsh\",\"profile__content\":\"Profile_profile__content__ysyQW\",\"profile__arrow\":\"Profile_profile__arrow__Ib2KW\",\"profile__title\":\"Profile_profile__title__YLrQj\",\"profile__form\":\"Profile_profile__form__9YK8q\",\"profile__avatarBlock\":\"Profile_profile__avatarBlock__HYY4r\",\"profile__pic\":\"Profile_profile__pic__749ru\",\"profile__img\":\"Profile_profile__img__dyT94\",\"profile__avatarIcon\":\"Profile_profile__avatarIcon__APPKr\",\"profile__userName\":\"Profile_profile__userName__7xtU4\",\"profile__marker\":\"Profile_profile__marker__SJMxU\",\"profile__userEmail\":\"Profile_profile__userEmail__UFRFm\",\"profile__button\":\"Profile_profile__button__6m94J\",\"profile__buttonIcon\":\"Profile_profile__buttonIcon__gSWb9\"};","import { ChangeEvent, useCallback, useEffect } from 'react'\r\n\r\nimport { setAppAlertMessage } from '../../app/appSlice'\r\nimport avatarLocal from '../../assets/img/avatar.jpg'\r\nimport { BackToPacks } from '../../common/components/BackToPacks/BackToPacks'\r\nimport { CustomButton } from '../../common/components/CustomButton/CustomButton'\r\nimport { EditableSpan } from '../../common/components/EditableSpan/EditableSpan'\r\nimport { useAppDispatch } from '../../hooks/useAppDispatch'\r\nimport { useAppSelector } from '../../hooks/useAppSelector'\r\nimport { base64Converter } from '../../utils/base64Converter'\r\nimport { validateImage } from '../../utils/validationSchema'\r\nimport { logOutTC } from '../auth/authSlice'\r\nimport { clearPacksQueryParams } from '../packs/packsSlice'\r\n\r\nimport s from './Profile.module.scss'\r\nimport { updateUserDataTC } from './profileSlice'\r\n\r\nexport const Profile = () => {\r\n  const dispatch = useAppDispatch()\r\n  const email = useAppSelector(state => state.profile.userData.email)\r\n  const avatar = useAppSelector(state => state.profile.userData.avatar)\r\n\r\n  const handleOnLogOut = () => dispatch(logOutTC())\r\n\r\n  const handleChangeUserName = useCallback(\r\n    (newName: string) => {\r\n      dispatch(updateUserDataTC({ name: newName }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  const handleUploadAvatar = async (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (!e.target.files) return\r\n    const base64 = (await base64Converter(e)) as string\r\n    const validateImageData = {\r\n      size: e.target.files[0].size || 0,\r\n      type: e.target.files[0].type || '',\r\n      isImageExist: !!base64,\r\n    }\r\n    const errorMessage = validateImage(validateImageData).deckCover\r\n\r\n    if (errorMessage) {\r\n      dispatch(setAppAlertMessage({ messageText: errorMessage, messageType: 'error' }))\r\n    } else {\r\n      dispatch(updateUserDataTC({ avatar: base64 }))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearPacksQueryParams())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className={s.profileContainer}>\r\n      <BackToPacks />\r\n      <div className={s.profile__content}>\r\n        <h2 className={s.profile__title}>Personal information</h2>\r\n        <div className={s.profile__avatarBlock}>\r\n          <div className={s.profile__pic}>\r\n            <img className={s.profile__img} src={avatar || avatarLocal} alt=\"avatar\" />\r\n          </div>\r\n          <label>\r\n            <input\r\n              type=\"file\"\r\n              onChange={handleUploadAvatar}\r\n              style={{ display: 'none' }}\r\n              accept={'image/*'}\r\n            />\r\n            <div className={s.profile__avatarIcon} />\r\n          </label>\r\n        </div>\r\n        <div className={s.profile__userName}>\r\n          <EditableSpan changeName={handleChangeUserName} />\r\n        </div>\r\n        <p className={s.profile__userEmail}>{email}</p>\r\n        <CustomButton className={s.profile__button} onClick={handleOnLogOut}>\r\n          <p className={s.profile__buttonIcon}>Log out</p>\r\n        </CustomButton>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { ChangeEvent, DragEvent } from 'react'\r\n\r\nexport const base64Converter = async (e: any) => {\r\n  const files = e.target.files || e.dataTransfer.files\r\n\r\n  if (files && files.length && files[0].size < 100000 && files[0].type.includes('image')) {\r\n    const reader = new FileReader()\r\n\r\n    reader.readAsDataURL(files[0])\r\n    const data = await new Promise((resolve, reject) => {\r\n      reader.onload = () => resolve(reader.result)\r\n      reader.onerror = error => reject(error)\r\n    })\r\n\r\n    return data\r\n  }\r\n}\r\n","export const cutSpaces = (string: string) => {\r\n  return string\r\n    .split(' ')\r\n    .filter(el => el !== '')\r\n    .join(' ')\r\n}\r\n","import * as yup from 'yup'\r\n\r\nconst email = yup\r\n  .string()\r\n  .email('Enter a valid email')\r\n  .max(50, 'Enter a valid email')\r\n  .required('Email is required')\r\nconst password = yup\r\n  .string()\r\n  .min(8, 'Password must contain at least 8 characters')\r\n  .max(30, 'Password is too long')\r\n  .required('Enter your password')\r\nconst confirmPassword = yup\r\n  .string()\r\n  .oneOf([yup.ref('password')], 'Password does not match')\r\n  .required('Confirm your password')\r\nconst rememberMe = yup.boolean()\r\nconst question = yup\r\n  .string()\r\n  .max(100, 'Question should be less then 100 characters')\r\n  .required('Question is required')\r\nconst answer = yup\r\n  .string()\r\n  .max(100, 'Answer should be less then 100 characters')\r\n  .required('Answer is required')\r\nconst packName = yup\r\n  .string()\r\n  .max(100, 'Name should be less then 100 characters')\r\n  .required('Pack name is required')\r\n\r\nexport const login = yup.object({ email, password, rememberMe })\r\n\r\nexport const registration = yup.object({ email, password, confirmPassword })\r\n\r\nexport const newPassword = yup.object({ password })\r\n\r\nexport const forgotPassword = yup.object({ email })\r\n\r\nexport const newCardText = yup.object({ question, answer })\r\n\r\nexport const newPackText = yup.object({ name: packName })\r\n\r\nexport const validateImage = (imgData: ValidateImageType) => {\r\n  const formats = ['image/jpeg', 'image/png', 'image/jpg', 'image/gif', 'image/webp', 'image/svg']\r\n  const error: { questionImg?: string; deckCover?: string } = {}\r\n\r\n  if (imgData.selectedItem && !imgData.size && !imgData.isImageExist) {\r\n    error.questionImg = 'Question image is required'\r\n\r\n    return error\r\n  }\r\n\r\n  if (imgData.type && !new RegExp(imgData.type, 'gi').test(formats.join(','))) {\r\n    error.questionImg = 'Unsupported file format'\r\n    error.deckCover = 'Unsupported file format'\r\n\r\n    return error\r\n  }\r\n\r\n  if (imgData.size && imgData.size > 100000) {\r\n    error.questionImg = 'File size is more than 100kb'\r\n    error.deckCover = 'File size is more than 100kb'\r\n\r\n    return error\r\n  }\r\n\r\n  return error\r\n}\r\n\r\ntype ValidateImageType = {\r\n  size: number\r\n  type: string\r\n  selectedItem?: boolean\r\n  isImageExist: boolean\r\n}\r\n"],"names":["BackToPacks","dispatch","useAppDispatch","location","useLocationNoUpdates","cardsPack_id","useAppSelector","state","cards","queryParams","packsQueryParams","packs","packsQueryString","pathname","queryString","initParams","isMyPacks","RegExp","test","className","s","to","PATH","onClick","getPacksTC","CustomInput","helperText","props","finalClass","errorText","TextField","variant","type","fullWidth","EditableSpan","memo","changeName","name","profile","userData","useState","inputValue","setInputValue","editMode","setEditMode","errorEmptyField","setErrorEmptyField","errorStyleButton","setErrorStyleButton","handleSetNewName","e","preventDefault","cutSpaces","length","onBlurInput","value","onBlur","onKeyDown","key","onChange","currentTarget","autoFocus","autoComplete","error","InputProps","inputProps","style","textAlign","onMouseDown","onAnimationEnd","Profile","email","avatar","handleChangeUserName","useCallback","newName","updateUserDataTC","handleUploadAvatar","target","files","base64Converter","base64","validateImageData","size","isImageExist","errorMessage","validateImage","deckCover","setAppAlertMessage","messageText","messageType","useEffect","clearPacksQueryParams","src","avatarLocal","alt","display","accept","CustomButton","logOutTC","dataTransfer","includes","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","result","onerror","data","string","split","filter","el","join","yup","max","required","password","min","confirmPassword","oneOf","rememberMe","question","answer","packName","login","registration","newPassword","forgotPassword","newCardText","newPackText","imgData","selectedItem","questionImg"],"sourceRoot":""}